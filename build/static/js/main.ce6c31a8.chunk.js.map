{"version":3,"sources":["logo.svg","Views/Header.js","Views/Home.js","Views/Footer.js","Apis/ApiForAgedPayableReference.js","Views/AgedPayableTable.js","Views/AgedReceivablesTable.js","Apis/ApiForAgedReceivableRefernce.js","Views/SalesInvoice.js","Apis/ApiForLedgerControl.js","Apis/ApiForPurchaseSalesControl.js","Apis/ApiForPurchaseInvoice.js","Apis/ApiForSalesInvoice.js","Views/Accounting/Advanced/Chart Of Accounts/Ledger.js","Apis/ApiForAddAccount.js","Apis/ApiForTaxRate.js","Views/Sales Overview/Invoices/TaxVatTaxRate.js","Views/Accounting/Advanced/Journal/ManualJournal.js","Views/Accounting/Advanced/Chart Of Accounts/AddAccount.js","Views/Accounting/Advanced/Chart Of Accounts/Modals/modal.js","Views/Accounting/Advanced/Chart Of Accounts/Modals/ModalTest.js","Views/Accounting/Advanced/Chart Of Accounts/AllAccounts.js","Views/Sales Overview/Invoices/PurchaseOverview.js","Apis/ApiForAmountControl.js","Apis/ApiForInterest.js","Apis/ApiForAllSalesAndPurchase.js","Views/Sales Overview/Invoices/NewInvoice.js","Views/Sales Overview/Invoices/SalesOverview.js","Views/Sales Overview/Invoices/SalesInvoiceDetail.js","Views/Sales Overview/Invoices/PurchaseInvoice.js","Views/Sales Overview/Invoices/PurchaseInvoiceDetail.js","Views/Profit And Loss/ProfitAndLoss.js","Views/Balance Sheet/BalanceSheet.js","Views/Reports/ReportMainPage.js","Views/Reports/Sales/AgedReceivableViewLink.js","Views/Reports/Sales Tax Report/SalesTaxReport.js","Views/Reports/Sales/AgedReceivableDetailsSalesReport.js","Views/Reports/Sales/AgedReceivableSalesReport.js","Views/Reports/Sales/AgedReceivableSummarySalesReport.js","Views/Reports/Sales/CustomerInvoiceSalesReport.js","Views/Reports/Sales/ReceivableInvoiceDetailSalesReport.js","Views/Reports/Sales/ReceivableInvoiceSummarySalesReport.js","Views/Reports/Purchases/AgedPayablesDetailsPurchaseReport.js","Views/Reports/Purchases/AgedPayablesSummaryPurchaseReport.js","Views/Reports/Purchases/PayableInvoiceDetailPurchaseReport.js","Views/Reports/Purchases/PayableInvoiceSummaryPurchaseReport.js","Views/Reports/Purchases/SupplierInvoiceReportPurchaseReport.js","Views/Reports/Inventory/InventoryItemDetailsReports.js","Views/Reports/Inventory/InventoryItemListReports.js","Views/Reports/Inventory/InventoryItemSummaryReports.js","Views/Reports/Inventory/InventoryItemSummaryUntrackedItems.js","Views/Reports/Inventory/SalesByItemsReport.js","Views/Reports/Fixed Assets/DepreciationSchedule2Report.js","Views/Reports/Fixed Assets/DepreciationScheduleReport.js","Views/Reports/Fixed Assets/DisposalScheduleReport.js","Views/Reports/Fixed Assets/FixedAssetReconciliationReport.js","Views/Reports/Fixed Assets/FixedAssetReconciliationReport2.js","Views/Reports/Accounting/AccountSummaryReport.js","Views/Reports/Accounting/AccountTransactionsReport.js","Views/Reports/Accounting/AccountTransactionsReport2.js","Views/Reports/Accounting/BankReconciliationSummaryReport.js","Views/Reports/Accounting/BankReconciliationSummaryStatementExceptionsReport.js","Views/Reports/Accounting/BankReconciliationSummaryStatementReport.js","Views/Reports/Accounting/BankSummaryReport.js","Views/Reports/Accounting/CashValidationCustomerReport.js","Views/Reports/Accounting/ContactTransactionsSummaryReport.js","Views/Reports/Accounting/DetailedAccountTransactionReport.js","Views/Reports/Accounting/ForeignCurrencyGainsAndLosses.js","Views/Reports/Accounting/GeneralLedger.js","Views/Reports/Accounting/IncomeAndExpensesByContact.js","Views/Reports/Accounting/JournalReport.js","Views/Reports/Accounting/TrialBalanceReport.js","Views/Reports/Accounting/TrialBalanceReport2.js","Views/Reports/Accounting/DuplicateStatementLinesReport.js","Views/Reports/Financial/BalanceSheetReport.js","Views/Reports/Financial/BudgetManagerReport.js","Views/Reports/Financial/BudgetSummaryReport.js","Views/Reports/Financial/BudgetVarianceReport.js","Views/Reports/Financial/BusinessPerfomanceReport.js","Views/Reports/Financial/CashSummaryReport.js","Views/Reports/Financial/ExecutiveSummaryReport.js","Views/Reports/Financial/MovementsInEquityReport.js","Views/Reports/Financial/MovementsInEquityReport2.js","Views/Reports/Financial/StatementOfCashFlowsReport.js","Views/Reports/Financial/TrackingSummary.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","id","action","type","placeholder","class","role","to","style","backgroundImage","Home","color","fontSize","defaultValue","Footer","title","name","cols","rows","createAgedPayableReferences","todo","fetch","method","headers","body","JSON","stringify","AgedPayableTable","useLocation","useRef","useHistory","useState","items","setItems","useEffect","a","then","res","json","contents","fetchItems","Row","Col","md","Card","CardHeader","CardBody","map","reference","startDate","endDate","_id","AgedReceivablesTable","total","SalesInvoice","createLedgers","createPurchaseOrSalesTaxVatValueAfterDiscounts","getPurchaseInvoices","getCurrentAssetsInvoices","getNonCurrentAssetsInvoices","getFixedAssetsInvoices","createPurchaseInvoice","getAllPurchaseInvoiceAccountsValuesController","console","log","axios","post","data","createAllPurchaseInvoiceAccountsValues","getSalesInvoices","getCurrentLiabilityInvoices","getNonCurrentLiabilityInvoices","getEquityInvoices","getAllSalesInvoiceAccountsValuesController","createAllSalesInvoiceAccountsValuesController","createSalesInvoice","ShowClickedAccount","valuesSalesInvoice","setValuesSalesInvoice","valuePurchaseInvoice","setValuesPurchaseInvoice","location","fetchItemsSalesInvoice","fetchItemsPurchaseInvoice","state","setTimeout","sumOfValuesNullCheck","totForCredit","totForDebit","arrayForCredit","arrayForDebit","i","length","push","taxAmount","parseInt","document","getElementById","innerHTML","toLocaleString","debit","getElementsByClassName","credit","dateFunction","n","Date","toLocaleDateString","year","month","day","accountType","transactionType","pathname","handleShowingValues","getAddAccounts","updateAddAccount","getTaxRates","TaxVatTaxRate","onSubmit","taxRateName","formik","values","taxRateAmount","useFormik","initialValues","taxRateAccount","validate","handleSubmit","htmlFor","onChange","handleChange","onBlur","handleBlur","value","ManualJournal","valueForCredit1","setValueForCredit1","valueForCredit2","setValueForCredit2","valueForCredit3","setValueForCredit3","valueForCredit4","setValueForCredit4","valueForCredit5","setValueForCredit5","valueForCredit6","setValueForCredit6","valueForCredit7","setValueForCredit7","valueForCredit8","setValueForCredit8","valueForCredit9","setValueForCredit9","valueForCredit10","setValueForCredit10","valueForDebit1","setValueForDebit1","valueForDebit2","setValueForDebit2","valueForDebit3","setValueForDebit3","valueForDebit4","setValueForDebit4","valueForDebit5","setValueForDebit5","valueForDebit6","setValueForDebit6","valueForDebit7","setValueForDebit7","valueForDebit8","setValueForDebit8","valueForDebit9","setValueForDebit9","valueForDebit10","setValueForDebit10","addDecimal","num","Number","toFixed","sumOfValues","e","preventDefault","arrCredit","getElementsByName","arrDebit","testing","testing2","totalOverall","narrative","dueDate","invoice","item","description","qty","unitPrice","disc","account","taxRate","amountPkr","accountPaid","amountCredit","amountDebit","amountPaid","amountDue","errors","test","headOfficeName","headOffice","productionDeadline","deliveryDate","size","touched","onClick","amountToSend","handleApprovePurchase","onInput","event","target","handleValueOnChangeDebit1","handleValueOnChangeCredit1","display","handleValueOnChangeDebit2","handleValueOnChangeCredit2","handleValueOnChangeDebit3","handleValueOnChangeCredit3","handleValueOnChangeDebit4","handleValueOnChangeCredit4","handleValueOnChangeDebit5","handleValueOnChangeCredit5","handleValueOnChangeDebit6","handleValueOnChangeCredit6","handleValueOnChangeDebit7","handleValueOnChangeCredit7","handleValueOnChangeDebit8","handleValueOnChangeCredit8","handleValueOnChangeDebit9","handleValueOnChangeCredit9","handleValueOnChangeDebit10","handleValueOnChangeCredit10","handleSubmissionOfValues","AddAccount","code","tax","amountDuePaid","amountTotalDebit","amountPaidAmountValue","datePaid","paidTo","referencePaid","datePurchaseOrSalesTaxVat","accountNamePurchaseOrSalesTaxVat","valuePurchaseTaxVatDebit","valueSalesTaxVatCredit","required","background","fontWeight","disabled","customStyles","content","top","left","right","bottom","marginRight","transform","props","isOpen","askToClose","onAfterOpen","onRequestClose","onChangeInput","contentLabel","closeTimeoutMS","MODAL_A","MODAL_B","DEFAULT_TITLE","ModalTest","toggleModal","key","currentModal","handleModalCloseRequest","setState","title1","handleInputChange","text","handleOnAfterOpenModal","heading","this","ref","aria","labelledby","describedby","shouldCloseOnOverlayClick","h1","tabIndex","React","Component","AllAccounts","accounts","colSpan","PurchaseOverview","count","fetchPurchase","from","textDecoration","getAmountControls","createInterests","getAllSalesAndPurchaseInvoiceAccountsValuesController","createAllSalesAndPurchaseInvoiceAccountsValues","PurchaseInvoice","taxSingleValue","settingTaxSingleValue","setAccountValues","taxRates","setTaxRates","valueForDescription1","setValueForDescription1","valueForDescription2","setValueForDescription2","valueForDescription3","setValueForDescription3","valueForQTY1","setValueForQTY1","valueForQTY2","setValueForQTY2","valueForQTY3","setValueForQTY3","valueForPricePerUnitWithoutSalesTaxVAT1","setValueForPricePerUnitWithoutSalesTaxVAT1","valueForPricePerUnitWithoutSalesTaxVAT2","setValueForPricePerUnitWithoutSalesTaxVAT2","valueForPricePerUnitWithoutSalesTaxVAT3","setValueForPricePerUnitWithoutSalesTaxVAT3","valueForDiscount1","setValueForDiscount1","valueForDiscount2","setValueForDiscount2","valueForDiscount3","setValueForDiscount3","fetchTax","fetchAccountValues","amountValue","arrQty","arrUnitPrice","arrDiscPercentage","arrPurchaseTaxVat","multForUnitPrice","perc","arrayForMult","arrayForNumb","arrayForPercentageBefore","arrayForPercentage","arrayForTotalUnitsWithDiscount","arrayForPurchaseTaxVatVal","arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal","totForQty","totPriceTotalUnits","totDiscInValue","totPriceTotalUnitsWithDiscount","totPurchaseTaxVatValue","totPurchasePriceAfterDiscount","replace","percVal2","percVal1","TotalOverall","handleChangeTaxRate","valueCompare","valueToSend","handleSave","accountName","priceTotalUnitsWithoutSalesTaxVAT","discPercentage","discInDigits","priceTotalUnitsWithoutSalesTaxVATAfterDiscount","salesTaxVATinValue","salesPriceAfterDiscountandInclusiveofSalesTaxVAT","description2","accountName2","qty2","unitPrice2","priceTotalUnitsWithoutSalesTaxVAT2","discPercentage2","discInDigits2","priceTotalUnitsWithoutSalesTaxVATAfterDiscount2","taxRate2","salesTaxVATinValue2","salesPriceAfterDiscountandInclusiveofSalesTaxVAT2","description3","accountName3","qty3","unitPrice3","priceTotalUnitsWithoutSalesTaxVAT3","discPercentage3","discInDigits3","priceTotalUnitsWithoutSalesTaxVATAfterDiscount3","taxRate3","salesTaxVATinValue3","salesPriceAfterDiscountandInclusiveofSalesTaxVAT3","createNonCurrentLiabilityInvoice","createEquityInvoice","accountName1","Description1","handleValueOnChange1","PricePerUnitWithoutSalesTaxVAT1","Discount1","Description2","handleValueOnChange2","PricePerUnitWithoutSalesTaxVAT2","Discount2","Description3","handleValueOnChange3","PricePerUnitWithoutSalesTaxVAT3","Discount3","handleSendingAccountValues","handleSendingLedger","SalesOverview","SalesInvoiceDetail","handleUpdate","dateStartDateFunction","dateEndDateFunction","handleTableValues","valueForPricePerUnitWithoutPurchaseTaxVAT1","setValueForPricePerUnitWithoutPurchaseTaxVAT1","valueForPricePerUnitWithoutPurchaseTaxVAT2","setValueForPricePerUnitWithoutPurchaseTaxVAT2","valueForPricePerUnitWithoutPurchaseTaxVAT3","setValueForPricePerUnitWithoutPurchaseTaxVAT3","gettingID","descriptionFromAccount","priceTotalUnitsWithoutPurchaseTaxVAT","priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount","purchaseTaxVATinValue","purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT","priceTotalUnitsWithoutPurchaseTaxVAT2","priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2","purchaseTaxVATinValue2","purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2","priceTotalUnitsWithoutPurchaseTaxVAT3","priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3","purchaseTaxVATinValue3","purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3","createFixedAssetsInvoice","PricePerUnitWithoutPurchaseTaxVAT1","PricePerUnitWithoutPurchaseTaxVAT2","PricePerUnitWithoutPurchaseTaxVAT3","PurchaseInvoiceDetail","ProfitAndLoss","purchaseValues","setPurchaseValues","salesValues","setSalesValues","directCosts","setDirectCosts","interestValues","setInterestValues","amortizationValues","depreciationValues","totalPurchase","setTotalPurchase","totalSales","setTotalSales","totalDirectCosts","setTotalDirectCosts","totalInterest","setTotalInterest","totalAmortization","setTotalAmortization","totalDepreciation","setTotalDepreciation","setTotalDA","grossProfit","setGrossProfit","ebitda","setEbitda","fetchSales","fetchDirectCosts","fetchInterest","arrForTotalSales","arrForTotalPurchase","arrForTotalDirectCosts","arrForTotalInterest","arrForTotalDepreciation","arrForTotalAmortization","totForPurchase","totForSales","totForDirectCosts","totForInterest","totForAmortization","totForDepreciation","totForGrossProfit","options","options2","newD","pastYear","getFullYear","setFullYear","newMonth","prevMonth1","getMonth","prevYear","prevDay","getDay","prevMonth2","prevYear2","prevDay2","prevMonth3","prevYear3","prevDay3","finalDatePrevMonth","finalDatePrevMonth2","finalDatePrevMonth3","finalDatePrevMonthString","finalDatePrevMonthString2","finalDatePrevMonthString3","textAlign","gettingDate","align","BalanceSheet","currentAssetValues","setcurrentAssetValues","nonCurrentAssetValues","setNonCurrentAssetValues","fixedAssetValues","setFixedAssetValues","currentLiabilityValues","setCurrentLiabilityValues","nonCurrentLiabilityValues","setNonCurrentLiabilityValues","equityValues","setEquityValues","totalCurrentAssetValues","setTotalCurrentAssetValues","totalNonCurrentAssetValues","setTotalNonCurrentAssetValues","totalFixedAssetValues","setTotalFixedAssetValues","totalOfAllAssetsValues","setTotalOfAllAssetsValues","totalCurrentLiabilityValues","setTotalCurrentLiabilityValues","totalNonCurrentLiabilityValues","setTotalNonCurrentLiabilityValues","totalOfAllLiabilityValues","setTotalOfAllLiabilityValues","totalEquityValues","setTotalEquityValues","fetchCurrentAssets","fetchNonCurrentAssets","fetchFixedAssets","fetchCurrentLiability","fetchNonCurrentLiability","fetchEquityValues","arrForTotalFixedAssets","arrForTotalCurrentAssets","arrForTotalNonCurrentAssets","arrForTotalCurrentLiability","arrForTotalNonCurrentLiability","arrForTotalEquity","totForFixedAssets","totForCurrentAssets","totForNonCurrentAssets","totForCurrentLiability","totForNonCurrentLiability","totForEquity","ReportMainPage","width","AgedReceivableViewLink","dateDueDateFunction","SalesTaxReport","AgedReceivableDetailsSalesReport","dateDifference","months","start","end","commas","toString","final","AgedReceivableSalesReport","AgedReceivableSummarySalesReport","CustomerInvoiceSalesReport","arrForTotal","totForTotal","ReceivableInvoiceDetailSalesReport","arrForQuantityTotal","arrForTaxTotal","arrForGross","totForQuantityTotal","gross","ReceivableInvoiceSummarySalesReport","arrForTotalBalance","totForTotalBalance","balance","AgedPayablesDetailsPurchaseReport","invoiceStart","invoiceStartDate","due","invoiceDueDate","AgedPayablesSummaryPurchaseReport","PayableInvoiceDetailPurchaseReport","PayableInvoiceSummaryPurchaseReport","SupplierInvoiceReportPurchaseReport","InventoryItemDetailsReports","InventoryItemListReports","InventoryItemSummaryReports","InventoryItemSummaryUntrackedItems","SalesByItemsReport","DepreciationSchedule2Report","DepreciationScheduleReport","DisposalScheduleReport","FixedAssetReconciliationReport","FixedAssetReconciliationReport2","AccountSummaryReport","AccountTransactionsReport","AccountTransactionsReport2","BankReconciliationSummaryReport","BankReconciliationSummaryStatementExceptionsReport","BankReconciliationSummaryStatementReport","BankSummaryReport","CashValidationCustomerReport","ContactTransactionsSummaryReport","DetailedAccountTransactionReport","ForeignCurrencyGainsAndLosses","GeneralLedger","IncomeAndExpensesByContact","JournalReport","TrialBalanceReport","handlingAssetData","handlingEquityData","handlingExpensesData","handlingLiabilityData","handlingRevenueData","handlingDAData","handlingInterestData","handlingTaxData","TrialBalanceReport2","DuplicateStatementLinesReport","BalanceSheetReport","BudgetManagerReport","BudgetSummaryReport","BudgetVarianceReport","BusinessPerfomanceReport","CashSummaryReport","ExecutiveSummaryReport","MovementsInEquityReport","MovementsInEquityReport2","StatementOfCashFlowsReport","TrackingSummary","App","exact","path","component","SalesOverwiew","Ledger","NewInvoice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ce6c31a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport {Link} from 'react-router-dom'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <div>\r\n        <div className=\"wrap\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"bg-wrap\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 d-flex align-items-center\">\r\n                      <p className=\"mb-0 phone pl-md-2\">\r\n                        <a href=\"#\" className=\"mr-2\"><span className=\"fa fa-phone mr-1\" /> +00 1234 567</a>\r\n                        <a href=\"#\"><span className=\"fa fa-paper-plane mr-1\" /> <span className=\"__cf_email__\" data-cfemail=\"b4cddbc1c6d1d9d5ddd8f4d1d9d5ddd89ad7dbd9\">[email&nbsp;protected]</span></a>\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"col-md-6 d-flex justify-content-md-end\">\r\n                      <div className=\"social-media\">\r\n                        <p className=\"mb-0 d-flex\">\r\n                          <a href=\"#\" className=\"d-flex align-items-center justify-content-center\"><span className=\"fa fa-facebook\"><i className=\"sr-only\">Facebook</i></span></a>\r\n                          <a href=\"#\" className=\"d-flex align-items-center justify-content-center\"><span className=\"fa fa-twitter\"><i className=\"sr-only\">Twitter</i></span></a>\r\n                          <a href=\"#\" className=\"d-flex align-items-center justify-content-center\"><span className=\"fa fa-instagram\"><i className=\"sr-only\">Instagram</i></span></a>\r\n                          <a href=\"#\" className=\"d-flex align-items-center justify-content-center\"><span className=\"fa fa-dribbble\"><i className=\"sr-only\">Dribbble</i></span></a>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark ftco_navbar bg-dark ftco-navbar-light\" id=\"ftco-navbar\">\r\n          <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"index.html\">Analytics</a>\r\n            <form action=\"#\" className=\"searchform order-sm-start order-lg-last\">\r\n              <div className=\"form-group d-flex\">\r\n                <input type=\"text\" className=\"form-control pl-3\" placeholder=\"Search\" />\r\n                <button type=\"submit\" placeholder className=\"form-control search\"><span className=\"fa fa-search\" /></button>\r\n              </div>\r\n            </form>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ftco-nav\" aria-controls=\"ftco-nav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"fa fa-bars\" /> Menu\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"ftco-nav\">\r\n              <ul className=\"navbar-nav m-auto\">\r\n                <li className=\"nav-item active\"><a href=\"index.html\" className=\"nav-link\">Home</a></li>\r\n                <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Business\r\n                </a>\r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <Link class=\"dropdown-item\" to=\"/sales-overview\">Sales Overview</Link>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <Link class=\"dropdown-item\" to=\"/purchase-overview\">Purchase Overview</Link>\r\n                <Link class=\"dropdown-item\" to=\"/aged-receivables-table\">Aged Receivable</Link>\r\n                <div class=\"dropdown-divider\"></div>\r\n                </div>\r\n                </li>\r\n                <li class=\"nav-item dropdown\">\r\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Accounting\r\n                </a>\r\n\r\n                \r\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <Link class=\"dropdown-item\" to=\"/reports\">Reports</Link>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <Link class=\"dropdown-item\" to=\"/balance-sheet\">Balance Sheet</Link>\r\n                <Link class=\"dropdown-item\" to=\"/chart-of-accounts\">Chart of Accounts</Link>\r\n                <Link class=\"dropdown-item\" to=\"/profit-loss\">Profit & Loss</Link>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a class=\"dropdown-item\" href=\"/new-manual-journal\">Manual Journal</a>\r\n                </div>\r\n                </li>\r\n            \r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <div className=\"hero-wrap\">\r\n          <div className=\"home-slider owl-carousel\">\r\n            <div className=\"slider-item\" style={{backgroundImage: 'url(images/bg_1.jpg)'}}>\r\n              <div className=\"overlay\" />\r\n              <div className=\"container\">\r\n                <div className=\"row no-gutters slider-text align-items-center justify-content-center\">\r\n                  <div className=\"col-md-8 ftco-animate\">\r\n                    <div className=\"text w-100 text-center\">\r\n                      <h2>We Business Grow</h2>\r\n                      <h1 className=\"mb-4\">We Help You Businesses Innovate and Grow</h1>\r\n                      <p><a href=\"#\" className=\"btn btn-white\">Connect with us</a></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider-item\" style={{backgroundImage: 'url(images/bg_2.jpg)'}}>\r\n              <div className=\"overlay\" />\r\n              <div className=\"container\">\r\n                <div className=\"row no-gutters slider-text align-items-center justify-content-center\">\r\n                  <div className=\"col-md-8 ftco-animate\">\r\n                    <div className=\"text w-100 text-center\">\r\n                      <h2>We Support Business</h2>\r\n                      <h1 className=\"mb-4\">The Best Business Support</h1>\r\n                      <p><a href=\"#\" className=\"btn btn-white\">Connect with us</a></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"slider-item\" style={{backgroundImage: 'url(images/bg_3.jpg)'}}>\r\n              <div className=\"overlay\" />\r\n              <div className=\"container\">\r\n                <div className=\"row no-gutters slider-text align-items-center justify-content-center\">\r\n                  <div className=\"col-md-8 ftco-animate\">\r\n                    <div className=\"text w-100 text-center\">\r\n                      <h2>We Give Advice</h2>\r\n                      <h1 className=\"mb-4\">Expert Financial Advice</h1>\r\n                      <p><a href=\"#\" className=\"btn btn-white\">Connect with us</a></p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n             <div>\r\n        <section className=\"ftco-section ftco-no-pt bg-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row d-flex no-gutters\">\r\n              <div className=\"col-md-6 d-flex\">\r\n                <div className=\"img img-video d-flex align-self-stretch align-items-center justify-content-center justify-content-md-center mb-4 mb-sm-0\" style={{backgroundImage: 'url(images/about.jpg)'}}>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 pl-md-5 py-md-5\">\r\n                <div className=\"heading-section pl-md-4 pt-md-5\">\r\n                  <span className=\"subheading\">Welcome to Accounting</span>\r\n                  <h2 className=\"mb-4\">We Are the Best Accounting Agency</h2>\r\n                </div>\r\n                <div className=\"services-2 w-100 d-flex\">\r\n                  <div className=\"icon d-flex align-items-center justify-content-center\"><span className=\"flaticon-wealth\" /></div>\r\n                  <div className=\"text pl-4\">\r\n                    <h4>Market Analysis</h4>\r\n                    <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"services-2 w-100 d-flex\">\r\n                  <div className=\"icon d-flex align-items-center justify-content-center\"><span className=\"flaticon-accountant\" /></div>\r\n                  <div className=\"text pl-4\">\r\n                    <h4>Accounting Advisor</h4>\r\n                    <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"services-2 w-100 d-flex\">\r\n                  <div className=\"icon d-flex align-items-center justify-content-center\"><span className=\"flaticon-teamwork\" /></div>\r\n                  <div className=\"text pl-4\">\r\n                    <h4>General Consultancy</h4>\r\n                    <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"services-2 w-100 d-flex\">\r\n                  <div className=\"icon d-flex align-items-center justify-content-center\"><span className=\"flaticon-accounting\" /></div>\r\n                  <div className=\"text pl-4\">\r\n                    <h4>Structured Assestment</h4>\r\n                    <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"ftco-section bg-light ftco-no-pt\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-lg-3 d-flex services align-self-stretch px-4 ftco-animate\">\r\n                <div className=\"d-block\">\r\n                  <div className=\"icon d-flex mr-2\">\r\n                    <span className=\"flaticon-accounting-1\" />\r\n                  </div>\r\n                  <div className=\"media-body\">\r\n                    <h3 className=\"heading\">Accounting</h3>\r\n                    <p>Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic.</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-3 d-flex services align-self-stretch px-4 ftco-animate\">\r\n                <div className=\"d-block\">\r\n                  <div className=\"icon d-flex mr-2\">\r\n                    <span className=\"flaticon-tax\" />\r\n                  </div>\r\n                  <div className=\"media-body\">\r\n                    <h3 className=\"heading\">Tax, Compliance &amp; Payroll</h3>\r\n                    <p>Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic.</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-3 d-flex services align-self-stretch px-4 ftco-animate\">\r\n                <div className=\"d-block\">\r\n                  <div className=\"icon d-flex mr-2\">\r\n                    <span className=\"flaticon-loan\" />\r\n                  </div>\r\n                  <div className=\"media-body\">\r\n                    <h3 className=\"heading\">Financial Services</h3>\r\n                    <p>Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic.</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-3 d-flex services align-self-stretch px-4 ftco-animate\">\r\n                <div className=\"d-block\">\r\n                  <div className=\"icon d-flex mr-2\">\r\n                    <span className=\"flaticon-budget\" />\r\n                  </div>\r\n                  <div className=\"media-body\">\r\n                    <h3 className=\"heading\">Growth &amp; Funding Access</h3>\r\n                    <p>Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic.</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"ftco-counter bg-light ftco-no-pt\" id=\"section-counter\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-lg-3 d-flex justify-content-center counter-wrap ftco-animate\">\r\n                <div className=\"block-18 text-center\">\r\n                  <div className=\"text\">\r\n                    <strong className=\"number\" data-number={50}>0</strong>\r\n                  </div>\r\n                  <div className=\"text\">\r\n                    <span>Years of Experienced</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-3 d-flex justify-content-center counter-wrap ftco-animate\">\r\n                <div className=\"block-18 text-center\">\r\n                  <div className=\"text\">\r\n                    <strong className=\"number\" data-number={8500}>0</strong>\r\n                  </div>\r\n                  <div className=\"text\">\r\n                    <span>Cases Completed</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-3 d-flex justify-content-center counter-wrap ftco-animate\">\r\n                <div className=\"block-18 text-center\">\r\n                  <div className=\"text\">\r\n                    <strong className=\"number\" data-number={20}>0</strong>\r\n                  </div>\r\n                  <div className=\"text\">\r\n                    <span>Awards Won</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-3 d-flex justify-content-center counter-wrap ftco-animate\">\r\n                <div className=\"block-18 text-center\">\r\n                  <div className=\"text\">\r\n                    <strong className=\"number\" data-number={50}>0</strong>\r\n                  </div>\r\n                  <div className=\"text\">\r\n                    <span>Expert Consultant</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"ftco-section testimony-section bg-light\">\r\n          <div className=\"overlay\" />\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center pb-5 mb-3\">\r\n              <div className=\"col-md-7 heading-section heading-section-white text-center ftco-animate\">\r\n                <span className=\"subheading\">Testimonies</span>\r\n                <h2>Happy Clients &amp; Feedbacks</h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"row ftco-animate\">\r\n              <div className=\"col-md-12\">\r\n                <div className=\"carousel-testimony owl-carousel ftco-owl\">\r\n                  <div className=\"item\">\r\n                    <div className=\"testimony-wrap py-4\">\r\n                      <div className=\"icon d-flex align-items-center justify-content-center\"><span className=\"fa fa-quote-left\" /></div>\r\n                      <div className=\"text\">\r\n                        <p className=\"mb-4\">Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts.</p>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"user-img\" style={{backgroundImage: 'url(images/person_1.jpg)'}} />\r\n                          <div className=\"pl-3\">\r\n                            <p className=\"name\">Roger Scott</p>\r\n                            <span className=\"position\">Marketing Manager</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"testimony-wrap py-4\">\r\n                      <div className=\"icon d-flex align-items-center justify-content-center\"><span className=\"fa fa-quote-left\" /></div>\r\n                      <div className=\"text\">\r\n                        <p className=\"mb-4\">Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts.</p>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"user-img\" style={{backgroundImage: 'url(images/person_2.jpg)'}} />\r\n                          <div className=\"pl-3\">\r\n                            <p className=\"name\">Roger Scott</p>\r\n                            <span className=\"position\">Marketing Manager</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"testimony-wrap py-4\">\r\n                      <div className=\"icon d-flex align-items-center justify-content-center\"><span className=\"fa fa-quote-left\" /></div>\r\n                      <div className=\"text\">\r\n                        <p className=\"mb-4\">Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts.</p>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"user-img\" style={{backgroundImage: 'url(images/person_3.jpg)'}} />\r\n                          <div className=\"pl-3\">\r\n                            <p className=\"name\">Roger Scott</p>\r\n                            <span className=\"position\">Marketing Manager</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"testimony-wrap py-4\">\r\n                      <div className=\"icon d-flex align-items-center justify-content-center\"><span className=\"fa fa-quote-left\" /></div>\r\n                      <div className=\"text\">\r\n                        <p className=\"mb-4\">Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts.</p>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"user-img\" style={{backgroundImage: 'url(images/person_1.jpg)'}} />\r\n                          <div className=\"pl-3\">\r\n                            <p className=\"name\">Roger Scott</p>\r\n                            <span className=\"position\">Marketing Manager</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"item\">\r\n                    <div className=\"testimony-wrap py-4\">\r\n                      <div className=\"icon d-flex align-items-center justify-content-center\"><span className=\"fa fa-quote-left\" /></div>\r\n                      <div className=\"text\">\r\n                        <p className=\"mb-4\">Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts.</p>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <div className=\"user-img\" style={{backgroundImage: 'url(images/person_2.jpg)'}} />\r\n                          <div className=\"pl-3\">\r\n                            <p className=\"name\">Roger Scott</p>\r\n                            <span className=\"position\">Marketing Manager</span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"ftco-section ftco-no-pt bg-light ftco-faqs\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <div className=\"img-faqs w-100\">\r\n                  <div className=\"img mb-4 mb-sm-0\" style={{backgroundImage: 'url(images/about-2.jpg)'}}>\r\n                  </div>\r\n                  <div className=\"img img-2 mb-4 mb-sm-0\" style={{backgroundImage: 'url(images/about-1.jpg)'}}>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-6 pl-lg-5\">\r\n                <div className=\"heading-section mb-5 mt-5 mt-lg-0\">\r\n                  <span className=\"subheading\">FAQs</span>\r\n                  <h2 className=\"mb-3\">Frequently Asks Questions</h2>\r\n                  <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts.</p>\r\n                </div>\r\n                <div id=\"accordion\" className=\"myaccordion w-100\" aria-multiselectable=\"true\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header p-0\" id=\"headingOne\">\r\n                      <h2 className=\"mb-0\">\r\n                        <button href=\"#collapseOne\" className=\"d-flex py-3 px-4 align-items-center justify-content-between btn btn-link\" data-parent=\"#accordion\" data-toggle=\"collapse\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                          <p className=\"mb-0\">How to fixed a problem?</p>\r\n                          <i className=\"fa\" aria-hidden=\"true\" />\r\n                        </button>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"collapse show\" id=\"collapseOne\" role=\"tabpanel\" aria-labelledby=\"headingOne\">\r\n                      <div className=\"card-body py-3 px-0\">\r\n                        <ol>\r\n                          <li>Far far away, behind the word mountains</li>\r\n                          <li>Consonantia, there live the blind texts</li>\r\n                          <li>When she reached the first hills of the Italic Mountains</li>\r\n                          <li>Bookmarksgrove, the headline of Alphabet Village</li>\r\n                          <li>Separated they live in Bookmarksgrove right</li>\r\n                        </ol>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header p-0\" id=\"headingTwo\" role=\"tab\">\r\n                      <h2 className=\"mb-0\">\r\n                        <button href=\"#collapseTwo\" className=\"d-flex py-3 px-4 align-items-center justify-content-between btn btn-link\" data-parent=\"#accordion\" data-toggle=\"collapse\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                          <p className=\"mb-0\">How to manage your business loans?</p>\r\n                          <i className=\"fa\" aria-hidden=\"true\" />\r\n                        </button>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"collapse\" id=\"collapseTwo\" role=\"tabpanel\" aria-labelledby=\"headingTwo\">\r\n                      <div className=\"card-body py-3 px-0\">\r\n                        <ol>\r\n                          <li>Far far away, behind the word mountains</li>\r\n                          <li>Consonantia, there live the blind texts</li>\r\n                          <li>When she reached the first hills of the Italic Mountains</li>\r\n                          <li>Bookmarksgrove, the headline of Alphabet Village</li>\r\n                          <li>Separated they live in Bookmarksgrove right</li>\r\n                        </ol>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header p-0\" id=\"headingThree\" role=\"tab\">\r\n                      <h2 className=\"mb-0\">\r\n                        <button href=\"#collapseThree\" className=\"d-flex py-3 px-4 align-items-center justify-content-between btn btn-link\" data-parent=\"#accordion\" data-toggle=\"collapse\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                          <p className=\"mb-0\">How to grow your investments funds?</p>\r\n                          <i className=\"fa\" aria-hidden=\"true\" />\r\n                        </button>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"collapse\" id=\"collapseThree\" role=\"tabpanel\" aria-labelledby=\"headingTwo\">\r\n                      <div className=\"card-body py-3 px-0\">\r\n                        <ol>\r\n                          <li>Far far away, behind the word mountains</li>\r\n                          <li>Consonantia, there live the blind texts</li>\r\n                          <li>When she reached the first hills of the Italic Mountains</li>\r\n                          <li>Bookmarksgrove, the headline of Alphabet Village</li>\r\n                          <li>Separated they live in Bookmarksgrove right</li>\r\n                        </ol>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header p-0\" id=\"headingFour\" role=\"tab\">\r\n                      <h2 className=\"mb-0\">\r\n                        <button href=\"#collapseFour\" className=\"d-flex py-3 px-4 align-items-center justify-content-between btn btn-link\" data-parent=\"#accordion\" data-toggle=\"collapse\" aria-expanded=\"false\" aria-controls=\"collapseFour\">\r\n                          <p className=\"mb-0\">What are those requirements for businesses?</p>\r\n                          <i className=\"fa\" aria-hidden=\"true\" />\r\n                        </button>\r\n                      </h2>\r\n                    </div>\r\n                    <div className=\"collapse\" id=\"collapseFour\" role=\"tabpanel\" aria-labelledby=\"headingTwo\">\r\n                      <div className=\"card-body py-3 px-0\">\r\n                        <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"ftco-section\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center pb-5 mb-3\">\r\n              <div className=\"col-md-7 heading-section text-center ftco-animate\">\r\n                <span className=\"subheading\">News &amp; Blog</span>\r\n                <h2>Latest news from our blog</h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-md-4 d-flex ftco-animate\">\r\n                <div className=\"blog-entry align-self-stretch\">\r\n                  <a href=\"blog-single.html\" className=\"block-20 rounded\" style={{backgroundImage: 'url(\"images/image_1.jpg\")'}}>\r\n                  </a>\r\n                  <div className=\"text p-4\">\r\n                    <div className=\"meta mb-2\">\r\n                      <div><a href=\"#\">March 31, 2020</a></div>\r\n                      <div><a href=\"#\">Admin</a></div>\r\n                      <div><a href=\"#\" className=\"meta-chat\"><span className=\"fa fa-comment\" /> 3</a></div>\r\n                    </div>\r\n                    <h3 className=\"heading\"><a href=\"#\">Even the all-powerful Pointing has no control about the blind texts</a></h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 d-flex ftco-animate\">\r\n                <div className=\"blog-entry align-self-stretch\">\r\n                  <a href=\"blog-single.html\" className=\"block-20 rounded\" style={{backgroundImage: 'url(\"images/image_2.jpg\")'}}>\r\n                  </a>\r\n                  <div className=\"text p-4\">\r\n                    <div className=\"meta mb-2\">\r\n                      <div><a href=\"#\">March 31, 2020</a></div>\r\n                      <div><a href=\"#\">Admin</a></div>\r\n                      <div><a href=\"#\" className=\"meta-chat\"><span className=\"fa fa-comment\" /> 3</a></div>\r\n                    </div>\r\n                    <h3 className=\"heading\"><a href=\"#\">Even the all-powerful Pointing has no control about the blind texts</a></h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 d-flex ftco-animate\">\r\n                <div className=\"blog-entry align-self-stretch\">\r\n                  <a href=\"blog-single.html\" className=\"block-20 rounded\" style={{backgroundImage: 'url(\"images/image_3.jpg\")'}}>\r\n                  </a>\r\n                  <div className=\"text p-4\">\r\n                    <div className=\"meta mb-2\">\r\n                      <div><a href=\"#\">March 31, 2020</a></div>\r\n                      <div><a href=\"#\">Admin</a></div>\r\n                      <div><a href=\"#\" className=\"meta-chat\"><span className=\"fa fa-comment\" /> 3</a></div>\r\n                    </div>\r\n                    <h3 className=\"heading\"><a href=\"#\">Even the all-powerful Pointing has no control about the blind texts</a></h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"ftco-section ftco-no-pb ftco-no-pt bg-secondary\">\r\n          <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-7 d-flex align-items-center\">\r\n                <h2 className=\"mb-3 mb-sm-0\" style={{color: 'black', fontSize: '22px'}}>Sign Up for Your Free 1st Accounting Consultation</h2>\r\n              </div>\r\n              <div className=\"col-md-5 d-flex align-items-center\">\r\n                <form action=\"#\" className=\"subscribe-form\">\r\n                  <div className=\"form-group d-flex\">\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter email address\" />\r\n                    <input type=\"submit\" defaultValue=\"Subscribe\" className=\"submit px-3\" />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"ftco-section bg-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center pb-5 mb-3\">\r\n              <div className=\"col-md-7 heading-section text-center ftco-animate\">\r\n                <span className=\"subheading\">Price &amp; Plans</span>\r\n                <h2>Affordable Packages</h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 col-lg-3 ftco-animate\">\r\n                <div className=\"block-7\">\r\n                  <div className=\"text-center\">\r\n                    <span className=\"excerpt d-block\">Personal</span>\r\n                    <span className=\"price\"><sup>$</sup> <span className=\"number\">49</span> <sub>/mos</sub></span>\r\n                    <ul className=\"pricing-text mb-5\">\r\n                      <li><span className=\"fa fa-check mr-2\" />Brand Strategy</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Online Marketing</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Branding Services</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Creative Marketing</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Sales Management</li>\r\n                    </ul>\r\n                    <a href=\"#\" className=\"btn btn-primary d-block px-2 py-3\">Get Started</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-3 ftco-animate\">\r\n                <div className=\"block-7\">\r\n                  <div className=\"text-center\">\r\n                    <span className=\"excerpt d-block\">Business</span>\r\n                    <span className=\"price\"><sup>$</sup> <span className=\"number\">79</span> <sub>/mos</sub></span>\r\n                    <ul className=\"pricing-text mb-5\">\r\n                      <li><span className=\"fa fa-check mr-2\" />Brand Strategy</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Online Marketing</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Branding Services</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Creative Marketing</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Sales Management</li>\r\n                    </ul>\r\n                    <a href=\"#\" className=\"btn btn-primary d-block px-2 py-3\">Get Started</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-3 ftco-animate\">\r\n                <div className=\"block-7\">\r\n                  <div className=\"text-center\">\r\n                    <span className=\"excerpt d-block\">Ultimate</span>\r\n                    <span className=\"price\"><sup>$</sup> <span className=\"number\">109</span> <sub>/mos</sub></span>\r\n                    <ul className=\"pricing-text mb-5\">\r\n                      <li><span className=\"fa fa-check mr-2\" />Brand Strategy</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Online Marketing</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Branding Services</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Creative Marketing</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Sales Management</li>\r\n                    </ul>\r\n                    <a href=\"#\" className=\"btn btn-primary d-block px-2 py-3\">Get Started</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-6 col-lg-3 ftco-animate\">\r\n                <div className=\"block-7\">\r\n                  <div className=\"text-center\">\r\n                    <span className=\"excerpt d-block\">Premium</span>\r\n                    <span className=\"price\"><sup>$</sup> <span className=\"number\">149</span> <sub>/mos</sub></span>\r\n                    <ul className=\"pricing-text mb-5\">\r\n                      <li><span className=\"fa fa-check mr-2\" />Brand Strategy</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Online Marketing</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Branding Services</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Creative Marketing</li>\r\n                      <li><span className=\"fa fa-check mr-2\" />Sales Management</li>\r\n                    </ul>\r\n                    <a href=\"#\" className=\"btn btn-primary d-block px-2 py-3\">Get Started</a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n         <footer className=\"footer\">\r\n        <div className=\"container-fluid px-lg-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-9 py-5\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 mb-md-0 mb-4\">\r\n                  <h2 className=\"footer-heading\">About us</h2>\r\n                  <p>A small river named Duden flows by their place and supplies it with the necessary regelialia.</p>\r\n                  <ul className=\"ftco-footer-social p-0\">\r\n                    <li className=\"ftco-animate\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Twitter\"><span className=\"fa fa-twitter\" /></a></li>\r\n                    <li className=\"ftco-animate\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Facebook\"><span className=\"fa fa-facebook\" /></a></li>\r\n                    <li className=\"ftco-animate\"><a href=\"#\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Instagram\"><span className=\"fa fa-instagram\" /></a></li>\r\n                  </ul>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-12 col-lg-10\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-4 mb-md-0 mb-4\">\r\n                          <h2 className=\"footer-heading\">Services</h2>\r\n                          <ul className=\"list-unstyled\">\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Market Analysis</a></li>\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Accounting Advisor</a></li>\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">General Consultancy</a></li>\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Structured Assestment</a></li>\r\n                          </ul>\r\n                        </div>\r\n                        <div className=\"col-md-4 mb-md-0 mb-4\">\r\n                          <h2 className=\"footer-heading\">Discover</h2>\r\n                          <ul className=\"list-unstyled\">\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">About us</a></li>\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Contract us</a></li>\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Terms &amp; Conditions</a></li>\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Policies</a></li>\r\n                          </ul>\r\n                        </div>\r\n                        <div className=\"col-md-4 mb-md-0 mb-4\">\r\n                          <h2 className=\"footer-heading\">Resources</h2>\r\n                          <ul className=\"list-unstyled\">\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Security</a></li>\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Global</a></li>\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Charts</a></li>\r\n                            <li><a href=\"#\" className=\"py-1 d-block\">Privacy</a></li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-md-5\">\r\n                <div className=\"col-md-12\">\r\n                  <p className=\"copyright\">\r\n                    Copyright ©\r\n                    All rights reserved  Syntics.co\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3 py-md-5 py-4 aside-stretch-right pl-lg-5\">\r\n              <h2 className=\"footer-heading\">Free consultation</h2>\r\n              <form action=\"#\" className=\"form-consultation\">\r\n                <div className=\"form-group\">\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Your Name\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Your Email\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Subject\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea name id cols={30} rows={3} className=\"form-control\" placeholder=\"Message\" defaultValue={\"\"} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\" className=\"form-control submit px-3\">Send A Message</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","//getting API for showing all the data\r\nexport const getAgedPayableReferences = () => fetch(\"https://313.com.pk/agedPayableReference\").then(res => res.json())\r\n\r\n//getting API for inserting the data\r\nexport const createAgedPayableReferences = (todo) => fetch(\"https://313.com.pk/agedPayableReference/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for updating specific data\r\nexport const updateAgedPayableReference = (todo, id) => fetch(`https://313.com.pk/agedPayableReference/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for getting specific data\r\nexport const getAgedPayableReference = (id) => fetch(`https://313.com.pk/agedPayableReference/${id}`).then(res => res.json())","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getAgedPayableReferences } from '../Apis/ApiForAgedPayableReference';\r\n\r\nfunction AgedPayableTable() {\r\n    const location = useLocation();\r\n    const editorRef = useRef(null);\r\n    const history = useHistory()\r\n    const [items, setItems] = useState([])\r\n    const [taxRates, setTaxRates] = useState()\r\n\r\n    useEffect(() => {\r\n      const fetchItems = async function() {\r\n        const contents = await getAgedPayableReferences()\r\n        setItems(contents)\r\n      }\r\n      fetchItems()\r\n    }, []);\r\n    return (   \r\n        <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card className=\"card-plain\">\r\n                <CardHeader></CardHeader>\r\n                <CardBody>\r\n                  <div className=\"container\">\r\n                      <div className=\"mt-3\">\r\n                          <h3>Aged Payables</h3>\r\n                          <table className=\"table table-striped mt-3 text-center\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Ref</th>\r\n                              <th>From</th>\r\n                              <th>Date</th>\r\n                              <th>Due Date</th>\r\n                              <th>Planned Date</th>\r\n                              <th>Paid</th>\r\n                              <th>Due</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                          {\r\n                              items.map(contents => (\r\n                                  <tr key={contents._id}>\r\n                                <td>\r\n                                    {contents.reference}\r\n                                </td>\r\n                                  <td>\r\n                                      \r\n                                  </td>\r\n                                  <td>\r\n                                      {contents.startDate}  \r\n                                  </td>\r\n                                  <td>\r\n                                      {contents.endDate}\r\n                                  </td>\r\n                                  <td>\r\n                                     <input type = \"date\"></input>\r\n                                  </td>\r\n                                  <td>paid</td>\r\n                                  <td>due</td>\r\n                                  </tr>\r\n                              ))\r\n                              }\r\n                          </tbody>\r\n                          </table>\r\n                      </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>     \r\n       \r\n    )\r\n}\r\n\r\nexport default AgedPayableTable\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getAgedReceivableReferences } from '../Apis/ApiForAgedReceivableRefernce';\r\n\r\nfunction AgedReceivablesTable() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [taxRates, setTaxRates] = useState()\r\n\r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAgedReceivableReferences()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n  return (   \r\n      <>\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader></CardHeader>\r\n              <CardBody>\r\n                <div className=\"container\">\r\n                    <div className=\"mt-3\">\r\n                        <h3>Aged Receivables</h3>\r\n                        <table className=\"table table-striped mt-3 text-center\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>To</th>\r\n                            <th>Date</th>\r\n                            <th>Reference</th>\r\n                            <th>Due Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                \r\n                            <th>Due</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {\r\n                            items.map(contents => (\r\n                                <tr key={contents._id}>\r\n                                <td>\r\n                                    {contents.to}\r\n                                </td>\r\n                                <td>\r\n                                    {contents.startDate}\r\n                                </td>\r\n                                <td>\r\n                                    {contents.reference}\r\n                                </td>\r\n                                <td>\r\n                                    {contents.endDate}\r\n                                </td>\r\n                                <td>\r\n                                    {contents.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>     \r\n     \r\n  )\r\n}\r\n\r\nexport default AgedReceivablesTable\r\n","//getting API for showing all the data\r\nexport const getAgedReceivableReferences = () => fetch(\"https://313.com.pk/agedReceivableReference\").then(res => res.json())\r\n\r\n//getting API for inserting the data\r\nexport const createAgedReceivableReferences = (todo) => fetch(\"https://313.com.pk/agedReceivableReference/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for updating specific data\r\nexport const updateAgedReceivableReference = (todo, id) => fetch(`https://313.com.pk/agedReceivableReference/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for getting specific data\r\nexport const getAgedReceivableReference = (id) => fetch(`https://313.com.pk/agedReceivableReference/${id}`).then(res => res.json())","import React, { useState, useEffect }   from 'react'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\n\r\nfunction SalesInvoice() {\r\n    return (\r\n        <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card className=\"card-plain\">\r\n                <CardHeader></CardHeader>\r\n                <CardBody>\r\n               \r\n                  <div className=\"container\">\r\n                      <div className=\"mt-3\">\r\n                          <h3>Invoices</h3>\r\n                          <table className=\"table table-striped mt-3 text-center\">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Date </th>\r\n                              <th>Reference</th>\r\n                              <th>Due Date</th>\r\n                              <th>Total</th>\r\n                              <th>Paid</th>\r\n                              <th>Credited</th>\r\n                              <th>Due</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                          </tbody>\r\n                          </table>\r\n                      </div>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>     \r\n    )\r\n}\r\n\r\nexport default SalesInvoice\r\n","//getting API for showing all the data\r\nexport const getLedgers = () => fetch(\"https://313.com.pk/ledger-control\").then(res => res.json())\r\n\r\n//getting API for inserting the data\r\nexport const createLedgers = (todo) => fetch(\"https://313.com.pk/ledger-control/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for updating specific data\r\nexport const updateLedger = (todo, id) => fetch(`https://313.com.pk/ledger-control/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for getting specific data\r\nexport const getLedger = (id) => fetch(`https://313.com.pk/ledger-control/${id}`).then(res => res.json())","//getting API for showing all the data\r\nexport const getPurchaseOrSalesTaxVatValueAfterDiscounts = () => fetch(\"https://313.com.pk/purchase-sales-tax/vat-value-control\").then(res => res.json())\r\n\r\n//getting API for inserting the data\r\nexport const createPurchaseOrSalesTaxVatValueAfterDiscounts = (todo) => fetch(\"https://313.com.pk/purchase-sales-tax/vat-value-control/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for updating specific data\r\nexport const updatePurchaseOrSalesTaxVatValueAfterDiscount = (todo, id) => fetch(`https://313.com.pk/purchase-sales-tax/vat-value-control/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for getting specific data\r\nexport const getPurchaseOrSalesTaxVatValueAfterDiscount = (id) => fetch(`https://313.com.pk/purchase-sales-tax/vat-value-control/${id}`).then(res => res.json())","import axios from \"axios\"\r\n\r\n//getting API for showing all the data\r\nexport const getPurchaseInvoices = () => fetch(\"https://313.com.pk/purchaseInvoice\").then(res => res.json())\r\nexport const getDirectCostsInvoices = () => fetch(\"https://313.com.pk/directCosts\").then(res => res.json())\r\nexport const getCurrentAssetsInvoices = () => fetch(\"https://313.com.pk/currentAssets\").then(res => res.json())\r\nexport const getNonCurrentAssetsInvoices = () => fetch(\"https://313.com.pk/nonCurrentAssets\").then(res => res.json())\r\nexport const getFixedAssetsInvoices = () => fetch(\"https://313.com.pk/fixedAssets\").then(res => res.json())\r\n\r\n\r\n\r\n//getting API for inserting the data\r\nexport const createPurchaseInvoice = (todo) => fetch(\"https://313.com.pk/purchaseInvoice/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const getAllPurchaseInvoiceAccountsValuesController = id => (\r\n\tconsole.log(id),\r\n\taxios.post(`https://313.com.pk/all-purchase-accounts`)\r\n\t\t.then(res => res.data, )\r\n)\r\nexport const getAllPurchaseInvoiceAccountsSpecificValuesController = id => (\r\n\tconsole.log(id),\r\n\taxios.post(`https://313.com.pk/all-purchase-accounts/specific/${id}`)\r\n\t\t.then(res => res.data, )\r\n)\r\n\r\n\r\nexport const createDirectCostsInvoice = (todo) => fetch(\"https://313.com.pk/directCosts/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const createAllPurchaseInvoiceAccountsValues = (todo) => fetch(\"https://313.com.pk/all-purchase-accounts/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const createCurrentAssetsInvoice = (todo) => fetch(\"https://313.com.pk/currentAssets/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const createNonCurrentAssetsInvoice = (todo) => fetch(\"https://313.com.pk/nonCurrentAssets/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const createFixedAssetsInvoice = (todo) => fetch(\"https://313.com.pk/fixedAssets/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for updating specific data\r\nexport const updatePurchaseInvoice = (todo, id) => fetch(`https://313.com.pk/purchaseInvoice/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const updateDirectCostsInvoice = (todo, id) => fetch(`https://313.com.pk/directCosts/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n}) \r\n\r\nexport const updateCurrentAssetsInvoice = (todo, id) => fetch(`https://313.com.pk/currentAssets/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n}) \r\n\r\nexport const updateNonCurrentAssetsInvoice = (todo, id) => fetch(`https://313.com.pk/nonCurrentAssets/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n}) \r\n\r\nexport const updateFixedAssetsInvoice = (todo, id) => fetch(`https://313.com.pk/fixedAssets/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n}) \r\n\r\n//getting API for getting specific data\r\nexport const getPurchaseInvoice = (id) => fetch(`https://313.com.pk/purchaseInvoice/${id}`).then(res => res.json())\r\nexport const getDirectCostsInvoice = (id) => fetch(`https://313.com.pk/directCosts/${id}`).then(res => res.json())\r\nexport const getCurrentAssetsInvoice = (id) => fetch(`https://313.com.pk/currentAssets/${id}`).then(res => res.json())\r\nexport const getNonCurrentAssetsInvoice = (id) => fetch(`https://313.com.pk/nonCurrentAssets/${id}`).then(res => res.json())\r\nexport const getFixedAssetsInvoice = (id) => fetch(`https://313.com.pk/fixedAssets/${id}`).then(res => res.json())\r\n","//getting API for showing all the data\r\n\r\nimport axios from 'axios';\r\n\r\nexport const getSalesInvoices = () => fetch(\"https://313.com.pk/salesInvoice\").then(res => res.json())\r\nexport const getCurrentLiabilityInvoices = () => fetch(\"https://313.com.pk/currentLiability\").then(res => res.json())\r\nexport const getNonCurrentLiabilityInvoices = () => fetch(\"https://313.com.pk/nonCurrentLiability\").then(res => res.json())\r\nexport const getEquityInvoices = () => fetch(\"https://313.com.pk/equity\").then(res => res.json())\r\n\r\n\r\n//export const getAnswers = () => fetch(\"https://313.com.pk//answers\").then(res => res.json())\r\n\r\nexport const getAllSalesInvoiceAccountsValuesController = id => (\r\n\tconsole.log(id),\r\n\taxios.post(`https://313.com.pk/all-sales-accounts`)\r\n\t\t.then(res => res.data, )\r\n)\r\nexport const getAllSalesInvoiceAccountsSpecificValuesController = id => (\r\n\tconsole.log(id),\r\n\taxios.post(`https://313.com.pk/all-sales-accounts/specific/${id}`)\r\n\t\t.then(res => res.data, )\r\n)\r\n\r\nexport const createAllSalesInvoiceAccountsValuesController = (todo) => fetch(\"https://313.com.pk/all-sales-accounts/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})\r\n\r\n//getting API for inserting the data\r\nexport const createSalesInvoice = (todo) => fetch(\"https://313.com.pk/salesInvoice/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n}) \r\n\r\nexport const createCurrentLiabilityInvoice = (todo) => fetch(\"https://313.com.pk/currentLiability/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n}) \r\n\r\nexport const createNonCurrentLiabilityInvoice = (todo) => fetch(\"https://313.com.pk/nonCurrentLiability/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const createEquityInvoice = (todo) => fetch(\"https://313.com.pk/equity/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n\r\n//getting API for updating specific data\r\nexport const updateSalesInvoice = (todo, id) => fetch(`https://313.com.pk/salesInvoice/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})\r\n\r\nexport const updateCurrentLiabilityInvoice = (todo, id) => fetch(`https://313.com.pk/currentLiability/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n\r\nexport const updateNonCurrentLiabilityInvoice = (todo, id) => fetch(`https://313.com.pk/nonCurrentLiability/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\nexport const updateEquityInvoice = (todo, id) => fetch(`https://313.com.pk/equity/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for getting specific data\r\nexport const getSalesInvoice = (id) => fetch(`https://313.com.pk/salesInvoice/${id}`).then(res => res.json())\r\nexport const getCurrentLiabilityInvoice = (id) => fetch(`https://313.com.pk/currentLiability/${id}`).then(res => res.json())\r\nexport const getNonCurrentLiabilityInvoice = (id) => fetch(`https://313.com.pk/nonCurrentLiability/${id}`).then(res => res.json())\r\nexport const getEquityInvoice = (id) => fetch(`https://313.com.pk/equity/${id}`).then(res => res.json())","import React, { useState, useEffect } from 'react'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getCreditLedger } from '../../../../Apis/ApiForCreditLedger';\r\nimport { getLedgers } from '../../../../Apis/ApiForLedgerControl';\r\nimport { getPurchaseOrSalesTaxVatValueAfterDiscounts } from '../../../../Apis/ApiForPurchaseSalesControl';\r\nimport { getAllPurchaseInvoiceAccountsSpecificValuesController } from '../../../../Apis/ApiForPurchaseInvoice';\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../../Apis/ApiForSalesInvoice';\r\n\r\nfunction ShowClickedAccount() {\r\n    const [items, setItems] = useState([])\r\n    const [valuesSalesInvoice, setValuesSalesInvoice] = useState([])\r\n    const [valuePurchaseInvoice, setValuesPurchaseInvoice] = useState([])\r\n    const location = useLocation();\r\n    \r\n    const history = useHistory()\r\n    const arrayOfNumbers = []\r\n    useEffect(() => {\r\n      const fetchItems = async function() {\r\n        const contents = await getPurchaseOrSalesTaxVatValueAfterDiscounts()\r\n        setItems(contents)\r\n      }\r\n      const fetchItemsSalesInvoice = async function() {\r\n        const contents = await getAllSalesInvoiceAccountsValuesController()\r\n        setValuesSalesInvoice(contents)\r\n      }\r\n      const fetchItemsPurchaseInvoice = async function() {\r\n        const contents = await getAllPurchaseInvoiceAccountsSpecificValuesController(location.state._id)\r\n        setValuesPurchaseInvoice(contents)\r\n      }\r\n      fetchItems()\r\n      fetchItemsSalesInvoice()\r\n      fetchItemsPurchaseInvoice()\r\n     \r\n      \r\n    }, []);\r\n\r\n    const timerId = setTimeout(() => {\r\n      sumOfValuesNullCheck()\r\n    }, 1500);\r\n\r\n    const sumOfValuesNullCheck = () => {\r\n  \r\n      var totForCredit=0;\r\n      var totForDebit=0;\r\n      var arrayForCredit = []\r\n      var arrayForDebit = []\r\n\r\n      for(var i=0;i<valuesSalesInvoice.length;i++){\r\n        arrayForCredit.push(valuesSalesInvoice[i].taxAmount)\r\n      }\r\n      for(var i=0;i<arrayForCredit.length;i++){\r\n        totForCredit += parseInt(arrayForCredit[i])\r\n      }\r\n      for(var i=0;i<valuePurchaseInvoice.length;i++){\r\n        arrayForDebit.push(valuePurchaseInvoice[i].taxAmount)\r\n      }\r\n      for(var i=0;i<arrayForDebit.length;i++){\r\n        totForDebit += parseInt(arrayForDebit[i])\r\n      }\r\n     \r\n     \r\n\r\n\r\n    \r\n    document.getElementById(\"creditTotal\").innerHTML = totForCredit.toLocaleString();\r\n    document.getElementById(\"debitTotal\").innerHTML = totForDebit.toLocaleString();\r\n      console.log(arrayForCredit)\r\n      //arrayOfNumbers.push(items)\r\n      //console.log(arrayOfNumbers[0].valueSalesTaxVatCredit)\r\n      //console.log(arrayOfNumbers.findIndex(obj => obj.valuePurchaseTaxVatDebit === valuePurchaseTaxVatDebit))\r\n      console.log('checking')\r\n      var debit = document.getElementsByClassName('debit').innerHTML;\r\n      var credit = document.getElementsByClassName('credit').innerHTML;\r\n      if (debit != null) {\r\n        console.log(debit,credit)\r\n      }\r\n\r\n    }\r\n    \r\n    const notNullCheck = () => {\r\n      console.log(\"Not null hit\")\r\n    }\r\n    const handlingCreditDebit = () => {\r\n      if(location.state.transactionType == \"Purchase Invoice\"){\r\n        var TaxAmount = location.state.taxAmount\r\n        var findingSpace = TaxAmount.indexOf(\"=\")\r\n        var newValue = TaxAmount.slice(findingSpace+2, TaxAmount.length)\r\n        console.log(newValue)\r\n        return(\r\n          <td>\r\n            {newValue}\r\n          </td>\r\n        )\r\n      }\r\n    }\r\n    \r\n    const handleShowingValues = () => {\r\n      console.log(valuePurchaseInvoice, \"test\")\r\n      if((location.state.accountType == \"Expense\") || (location.state.accountType == \"Direct Costs\") \r\n      || (location.state.accountType == \"Current Asset\")\r\n      || (location.state.accountType == \"Non - Current Asset\") || (location.state.accountType == \"Fixed Asset\") \r\n      || (location.state.accountType == \"Interest\"))\r\n      {\r\n        console.log(\"hit\")\r\n        \r\n        return(\r\n          <tbody>\r\n          {\r\n        valuePurchaseInvoice != null ? valuePurchaseInvoice.map(contents => (\r\n              <tr key={contents._id}>\r\n              \r\n                {dateFunction(contents)}\r\n              \r\n              <td>\r\n                  {contents.transactionType}\r\n              </td>\r\n              <td>\r\n                  <Link to={{\r\n                                        pathname: '/aged-recievable-link',\r\n                                        state: contents,\r\n                  }} className = \"text-dark\">{contents.taxAmount}</Link>\r\n              </td>\r\n              </tr>\r\n          )) : \r\n          <tr>\r\n              <td></td>\r\n          </tr>\r\n        }\r\n      </tbody>\r\n        )\r\n    }\r\n  }\r\n  const dateFunction = (data) => {\r\n    const options = {\r\n     \r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    };\r\n    \r\n    var d = new Date(data.startDate);\r\n    var n = d.toLocaleDateString('en-EN', options);\r\n    \r\n    return(\r\n      <td>\r\n        {n}\r\n      </td>\r\n    )\r\n  }\r\n    return (\r\n        <div>\r\n            <div>\r\n            <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader>{location.state.name}</CardHeader>\r\n              <CardBody>\r\n                <h2>Ledger</h2>\r\n                    <div className=\"mt-3\">\r\n                        <table className=\"table table-striped mt-3 text-center\">\r\n                        <thead>\r\n                            <tr>\r\n                             \r\n                              <th>Date</th>\r\n                              <th>Transaction</th>\r\n                              <th>Debit</th>\r\n                              <th>Credit</th>\r\n                         \r\n                            </tr>\r\n                        </thead>  \r\n                        {handleShowingValues()}\r\n                        </table>\r\n                        <table className=\"table table-striped mt-3 text-center\">\r\n                        <thead>\r\n                            <tr>\r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                       <tr>\r\n                         <td>Total</td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td id =\"debitTotal\"></td>\r\n                         <td id =\"creditTotal\"></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                         <td></td>\r\n                       </tr>\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowClickedAccount\r\n","//getting API for showing all the data\r\nexport const getAddAccounts = () => fetch(\"https://313.com.pk/addAccount\").then(res => res.json())\r\n\r\n//getting API for inserting the data\r\nexport const createAddAccounts = (todo) => fetch(\"https://313.com.pk/addAccount/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for updating specific data\r\nexport const updateAddAccount = (todo, id) => fetch(`https://313.com.pk/addAccount/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for getting specific data\r\nexport const getAddAccount = (id) => fetch(`https://313.com.pk/addAccount/${id}`).then(res => res.json())","//getting API for showing all the data\r\nexport const getTaxRates = () => fetch(\"https://313.com.pk/taxRate\").then(res => res.json())\r\n\r\n//getting API for inserting the data\r\nexport const createTaxRates = (todo) => fetch(\"https://313.com.pk/taxRate/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for updating specific data\r\nexport const updateTaxRate = (todo, id) => fetch(`https://313.com.pk/taxRate/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for getting specific data\r\nexport const getTaxRate = (id) => fetch(`https://313.com.pk/taxRate/${id}`).then(res => res.json())","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getAddAccounts } from '../../../Apis/ApiForAddAccount'\r\nimport { updateAddAccount } from '../../../Apis/ApiForAddAccount';\r\nimport { createTaxRates } from '../../../Apis/ApiForTaxRate';\r\n\r\nfunction TaxVatTaxRate() {\r\n    const [tax, setTax] = useState()\r\n    const [items, setItems] = useState([])\r\n    useEffect(() => {\r\n      const fetchItems = async function() {\r\n        const contents = await getAddAccounts()\r\n        setItems(contents)\r\n      }\r\n      fetchItems()\r\n    }, []);\r\n\r\n    const onSubmit = async (data) => {\r\n        data.taxRateName = formik.values.taxRateName + \" (\" + formik.values.taxRateAmount + \"%)\"\r\n        console.log(data)\r\n        await createTaxRates(data)\r\n        //redirecting \r\n        //history.push(\"/\")\r\n        //createTaxRates(data)\r\n \r\n      };\r\n        //1 Start of by making initial values \r\n        const formik = useFormik({\r\n            initialValues: {\r\n                taxRateName: '',\r\n                taxRateAccount: '',\r\n                taxRateAmount: '',\r\n            },\r\n            \r\n            //4 Make onSubmit propert to handle what happens to data on form submisison\r\n    \r\n            onSubmit: values => {\r\n    \r\n              \r\n              //createTodo(formik.values)\r\n              //redirecting \r\n              //history.push(\"/\")\r\n    \r\n              onSubmit(formik.values)\r\n              //onSubmitHandler(formik.values)\r\n            },\r\n    \r\n            //5 Make validation property\r\n    \r\n            validate: values => {\r\n                /*\r\n                let errors = {}\r\n    \r\n                const letters = /^[A-Za-z ]+$/;\r\n    \r\n                const cnic = /^[0-9--]+$/;\r\n    \r\n                const phone = /^[0-9]+$/;\r\n    \r\n                const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n                \r\n                if(!values.name){\r\n                    errors.name = \"Please fill in Name\"\r\n                }else if (!letters.test(values.name)) {\r\n                    errors.name = \"Please enter a valid Name\"\r\n                }\r\n    \r\n              if(!values.phone){\r\n                  errors.phone = \"Please enter your contact number\"\r\n              }else if (!phone.test(values.phone)) {\r\n                  errors.phone = \"Please enter a valid contact number\"\r\n              }\r\n    \r\n                if(values.conf_pass != values.password){\r\n                    errors.conf_pass = \"Your password does not match\"\r\n                }\r\n                \r\n                if(!values.email){\r\n                    errors.email = \"Please fill in Email\"\r\n                }\r\n    \r\n                if(!values.gender){\r\n                    errors.gender = \"Please fill select your Gender, select 'Unspecify' if you do not wish to specify\"\r\n                }else if (values.gender == \"chooseGender\"){\r\n                    errors.gender = \"Please fill select your Gender, select 'Unspecify' if you do not wish to specify\"\r\n    \r\n                }\r\n    \r\n                if(!values.country){\r\n                    errors.country = \"Please select your Country\"\r\n                }else if (values.country == \"chooseCountry\"){\r\n                    errors.country = \"Please select your Country\"\r\n    \r\n                }\r\n    \r\n                \r\n                if(!values.country_code){\r\n                  errors.country_code = \"Please select your Country Code or Area Code\"\r\n               }else if (values.country_code == \"chooseCountryCode\"){\r\n                  errors.country_code = \"Please select your Country Code or Area Code\"\r\n    \r\n              }\r\n    \r\n              if(!values.courses){\r\n                errors.courses = \"Please select a course in which you wish to register\"\r\n             }else if (values.courses == \"selectCourse\"){\r\n                errors.courses = \"Please select a course in which you wish to register\"\r\n    \r\n            }\r\n             */\r\n                //return errors\r\n    \r\n    \r\n            }\r\n    \r\n    \r\n        })\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              \r\n              <CardBody>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                  <h2 className=\"cart-area-title text-center pt-3\">Add New Tax Rate</h2>\r\n                  <hr/>\r\n                  <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row pt-2\">\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Tax Rate Display Name</label>\r\n                          <hr />\r\n                          The name as you would like it to appear (limited to 50 characters)\r\n                          <input type=\"text\" name=\"taxRateName\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.taxRateName} className=\"form-control\"/>\r\n                          </div>\r\n                        </div>\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"row pt-2\">\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Tax head account</label>\r\n                          <hr />\r\n                          <select name=\"taxRateAccount\" onChange={formik.handleChange} onBlur={formik.handleBlur}  value={formik.values.taxRateAccount} className=\"form-control\" >\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor></label>\r\n                          <hr />\r\n                         <input type=\"text\" name=\"taxRateAmount\" onChange={formik.handleChange} onBlur={formik.handleBlur}  value={formik.values.taxRateAmount} className=\"form-control\"></input>%\r\n                          </div>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"row pt-2\">\r\n                        <div className = \"col-md-2\">\r\n                        <div className=\"form-group\">\r\n                        <button type = \"submit\" className = \"btn btn-success\">Save</button>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </form>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </CardBody>\r\n                        </Card>\r\n                </Col>\r\n            </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaxVatTaxRate\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getAddAccounts } from '../../../../Apis/ApiForAddAccount';\r\n\r\nfunction ManualJournal() {\r\n\r\n    const location = useLocation();\r\n    const editorRef = useRef(null);\r\n    const history = useHistory()\r\n    const [items, setItems] = useState([])\r\n    const [taxRates, setTaxRates] = useState()\r\n    const [valueForCredit1, setValueForCredit1] = useState();\r\n    const [valueForCredit2, setValueForCredit2] = useState();\r\n    const [valueForCredit3, setValueForCredit3] = useState();\r\n    const [valueForCredit4, setValueForCredit4] = useState();\r\n    const [valueForCredit5, setValueForCredit5] = useState();\r\n    const [valueForCredit6, setValueForCredit6] = useState();\r\n    const [valueForCredit7, setValueForCredit7] = useState();\r\n    const [valueForCredit8, setValueForCredit8] = useState();\r\n    const [valueForCredit9, setValueForCredit9] = useState();\r\n    const [valueForCredit10, setValueForCredit10] = useState();\r\n    \r\n    const [valueForDebit1, setValueForDebit1] = useState();\r\n    const [valueForDebit2, setValueForDebit2] = useState();\r\n    const [valueForDebit3, setValueForDebit3] = useState();\r\n    const [valueForDebit4, setValueForDebit4] = useState();\r\n    const [valueForDebit5, setValueForDebit5] = useState();\r\n    const [valueForDebit6, setValueForDebit6] = useState();\r\n    const [valueForDebit7, setValueForDebit7] = useState();\r\n    const [valueForDebit8, setValueForDebit8] = useState();\r\n    const [valueForDebit9, setValueForDebit9] = useState();\r\n    const [valueForDebit10, setValueForDebit10] = useState();\r\n\r\n    useEffect(() => {\r\n      const fetchItems = async function() {\r\n        const contents = await getAddAccounts()\r\n        setItems(contents)\r\n      }\r\n      fetchItems()\r\n    }, []);\r\n\r\n\r\n    const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n    const addDecimal = num => Number(num).toFixed(2)\r\n    \r\n    const sumOfValues = (e) => {\r\n        e.preventDefault()\r\n        console.log('checking')\r\n        var arrCredit = document.getElementsByName('amountCredit');\r\n        var arrDebit = document.getElementsByName('amountDebit');\r\n        /*\r\n        var arrUnitPrice = document.getElementsByName('unitPrice');\r\n        var arrPriceTotalUnits = document.getElementsByName('priceTotalUnits');\r\n        var arrDiscInValue = document.getElementsByName('discInValue');\r\n        var arrPriceTotalUnitsWithDiscount = document.getElementsByName('priceTotalUnits');\r\n        var arrPurchaseTaxVat = document.getElementsByName('salesTaxVat');\r\n        var arrPurchaseTaxVatValue = document.getElementsByName('salesTaxVatValue');\r\n        var arrPurchasePriceAfterDiscount = document.getElementsByName('priceTotalUnits');\r\n        var multForUnitPrice=0;\r\n        var perc = 0;\r\n        var arrayForMult = [];\r\n        var arrayForPercentageBefore = [];\r\n        var arrayForPercentage = [];\r\n        var arrayForTotalUnitsWithDiscount= [];\r\n        var arrayForPurchaseTaxVatVal = [];\r\n        var arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal = []\r\n        */\r\n        var totForCredit=0;\r\n        var totForDebit=0;\r\n        var totFoUnitPrice=0;\r\n        var totPriceTotalUnits=0;\r\n        var totDiscPercentage=0;\r\n        var totDiscInValue=0;\r\n        var totPriceTotalUnitsWithDiscount=0;\r\n        var totPurchaseTaxVatValue=0;\r\n        var totPurchasePriceAfterDiscount=0;\r\n        for(var i=0;i<arrCredit.length;i++){\r\n            if(parseInt(arrCredit[i].value))\r\n                totForCredit += parseInt(arrCredit[i].value);\r\n                console.log(totForCredit)\r\n        }\r\n        document.getElementById(\"creditTotal\").innerHTML = addDecimal(totForCredit);\r\n        var testing = document.getElementById(\"creditTotal\").innerHTML\r\n        console.log(testing)\r\n        document.getElementById(\"creditTotal\").innerHTML = testing.toLocaleString();\r\n\r\n        for(var i=0;i<arrDebit.length;i++){\r\n          if(parseInt(arrDebit[i].value))\r\n              totForDebit += parseInt(arrDebit[i].value);\r\n              console.log(totForDebit)\r\n      }\r\n      document.getElementById(\"debitTotal\").innerHTML = addDecimal(totForDebit);\r\n      var testing2 = document.getElementById(\"debitTotal\").innerHTML\r\n      console.log(testing2)\r\n      document.getElementById(\"debitTotal\").innerHTML = testing2.toLocaleString();\r\n\r\n      /*\r\n        //document.getElementById('total').value = \"hi\";\r\n        for(var i=0;i<arrCredit.length;i++){\r\n          if(parseInt(arrCredit[i].value))\r\n              var multForUnitPriceValue1 = parseInt(arrCredit[i].value);\r\n              var multForUnitPriceValue2 = parseInt(arrUnitPrice[i].value);\r\n              multForUnitPrice = multForUnitPriceValue1 * multForUnitPriceValue2;\r\n              arrayForMult.push(multForUnitPrice)\r\n              console.log(multForUnitPrice)\r\n              \r\n        }\r\n      document.getElementById(\"priceForTotalUnitsID1\").innerHTML = arrayForMult[0];\r\n      document.getElementById(\"priceForTotalUnitsID2\").innerHTML = arrayForMult[1];\r\n      document.getElementById(\"priceForTotalUnitsID3\").innerHTML = arrayForMult[2];\r\n      console.log(arrayForMult)\r\n      arrayForPercentageBefore.push(arrayForMult[0])\r\n      arrayForPercentageBefore.push(arrayForMult[1])\r\n      arrayForPercentageBefore.push(arrayForMult[2])\r\n      console.log(arrayForPercentageBefore)\r\n      //document.getElementById(\"val\").innerHTML = \"Total Quantity = \" + tot;\r\n      //document.getElementById('total').value = \"hi\";\r\n      \r\n      for(var i=0;i<arrDiscPercentage.length;i++){\r\n        if(parseInt(arrDiscPercentage[i].value))\r\n            var percVal1 = parseInt(arrayForPercentageBefore[i]);\r\n            var percVal2 = parseInt(arrDiscPercentage[i].value);\r\n            console.log(percVal1)\r\n            console.log(percVal2)\r\n            perc = (percVal2 / 100) * percVal1;\r\n            arrayForPercentage.push(perc)\r\n            console.log(arrayForPercentage)\r\n            \r\n      }\r\n      document.getElementById(\"descperc1\").innerHTML = arrayForPercentage[0];\r\n      document.getElementById(\"descperc2\").innerHTML = arrayForPercentage[1];\r\n      document.getElementById(\"descperc3\").innerHTML = arrayForPercentage[2];\r\n   \r\n      for(var i=0;i<arrDiscPercentage.length;i++){\r\n        if(parseInt(arrDiscPercentage[i].value))\r\n            var percVal1 = parseInt(arrayForMult[i]);\r\n            var percVal2 = parseInt(arrayForPercentage[i]);\r\n            console.log(percVal1)\r\n            console.log(percVal2)\r\n            perc = percVal1 - percVal2;\r\n            arrayForTotalUnitsWithDiscount.push(perc)\r\n            console.log(arrayForPercentage)\r\n            \r\n      }\r\n      document.getElementById(\"withDisc1\").innerHTML = arrayForTotalUnitsWithDiscount[0];\r\n      document.getElementById(\"withDisc2\").innerHTML = arrayForTotalUnitsWithDiscount[1];\r\n      document.getElementById(\"withDisc3\").innerHTML = arrayForTotalUnitsWithDiscount[2];\r\n  \r\n      for(var i=0;i<arrPurchaseTaxVat.length;i++){\r\n        if(parseInt(arrPurchaseTaxVat[i].value))\r\n            var percVal1 = parseInt(arrPurchaseTaxVat[i].value);\r\n            var percVal2 = parseInt(arrayForTotalUnitsWithDiscount[i]);\r\n            console.log(percVal1)\r\n            console.log(percVal2)\r\n            perc = (percVal1 / 100) * percVal2;\r\n            arrayForPurchaseTaxVatVal.push(perc)\r\n            console.log(arrayForPurchaseTaxVatVal)\r\n            \r\n      }\r\n      document.getElementById(\"salesTaxVat1\").innerHTML = arrayForPurchaseTaxVatVal[0];\r\n      document.getElementById(\"salesTaxVat2\").innerHTML = arrayForPurchaseTaxVatVal[1];\r\n      document.getElementById(\"salesTaxVat3\").innerHTML = arrayForPurchaseTaxVatVal[2];\r\n  \r\n      for(var i=0;i<arrPurchaseTaxVat.length;i++){\r\n        if(parseInt(arrPurchaseTaxVat[i].value))\r\n            var percVal1 = parseInt(arrayForPurchaseTaxVatVal[i]);\r\n            var percVal2 = parseInt(arrayForTotalUnitsWithDiscount[i]);\r\n            console.log(percVal1)\r\n            console.log(percVal2)\r\n            perc = percVal1 + percVal2;\r\n            arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.push(perc)\r\n            console.log(arrayForPurchaseTaxVatVal)\r\n            \r\n      }\r\n      document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML = arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[0];\r\n      document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML = arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[1];\r\n      document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML = arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[2];\r\n      \r\n      for(var i=0;i<arrayForMult.length;i++){\r\n        console.log(arrayForMult[i])\r\n        totPriceTotalUnits += parseInt(arrayForMult[i]);\r\n      }\r\n      document.getElementById(\"prcTotalUnits\").innerHTML = totPriceTotalUnits;\r\n      \r\n      for(var i=0;i<arrayForPercentage.length;i++){\r\n        console.log(arrayForPercentage[i])\r\n        totDiscInValue += parseInt(arrayForPercentage[i]);\r\n      }\r\n      document.getElementById(\"dscInValue\").innerHTML = totDiscInValue;    \r\n  \r\n      for(var i=0;i<arrayForTotalUnitsWithDiscount.length;i++){\r\n        console.log(arrayForTotalUnitsWithDiscount[i])\r\n        totPriceTotalUnitsWithDiscount += parseInt(arrayForTotalUnitsWithDiscount[i]);\r\n      }\r\n      document.getElementById(\"prcTotalUnitsWithDiscount\").innerHTML = totPriceTotalUnitsWithDiscount;\r\n      \r\n      for(var i=0;i<arrayForPurchaseTaxVatVal.length;i++){\r\n        console.log(arrayForPurchaseTaxVatVal[i])\r\n        totPurchaseTaxVatValue += parseInt(arrayForPurchaseTaxVatVal[i]);\r\n      }\r\n      document.getElementById(\"slsTaxVat\").innerHTML = totPurchaseTaxVatValue;\r\n      document.getElementById(\"subtotalTax\").innerHTML = \"Tax = \" + totPurchaseTaxVatValue;\r\n  \r\n      for(var i=0;i<arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.length;i++){\r\n        console.log(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[i])\r\n        totPurchasePriceAfterDiscount += parseInt(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[i]);\r\n      }\r\n      document.getElementById(\"slsPriceAfterDiscount\").innerHTML = totPurchasePriceAfterDiscount;\r\n      document.getElementById(\"subtotal\").innerHTML = \"Subtotal = \" + totPurchasePriceAfterDiscount;\r\n      var TotalOverall = totPurchaseTaxVatValue + totPurchasePriceAfterDiscount\r\n      document.getElementById(\"totalOverall\").innerHTML = TotalOverall;\r\n      */\r\n      }\r\n  \r\n      const onSubmit = async (data) => {\r\n        console.log(data)\r\n        \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n      const handleChange = (e) => {\r\n        e.preventDefault()\r\n        var totalOverall = document.getElementById(\"totalOverall\").innerHTML\r\n        formik.values.total = totalOverall\r\n        console.log(formik.values)\r\n        //createPurchaseInvoice(formik.values)\r\n      }\r\n  \r\n      const handleAmountSend = (e) => {\r\n        e.preventDefault()\r\n        var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n        formik.values.amountCredit = amountToSend\r\n        console.log(formik.values)\r\n        //createTestingAmountSend(formik.values)\r\n      }\r\n  \r\n      const handleAmountPaidWith = (e) => {\r\n        e.preventDefault()\r\n        var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n        var amountToSendDate = document.getElementById(\"amountPaidOnDate\").value\r\n        document.getElementById(\"totalPaid\").innerHTML = amountToSend;\r\n        document.getElementById(\"totalDate\").innerHTML = amountToSendDate;\r\n        var amountTotal = document.getElementById(\"totalOverall\").innerHTML\r\n        var amountDue = amountTotal - amountToSend\r\n        document.getElementById(\"totalDue\").innerHTML = amountDue;\r\n        formik.values.amountPaid = amountToSend\r\n        formik.values.amountDue = amountDue\r\n        console.log(formik.values)\r\n        //createTestingAmountSend(formik.values)\r\n      }\r\n      const handleApprovePurchase = (e) => {\r\n        e.preventDefault()\r\n        var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n        var totalOverall = document.getElementById(\"totalOverall\").innerHTML\r\n        formik.values.amountCredit = amountToSend\r\n        formik.values.total = totalOverall\r\n        console.log(formik.values)\r\n        //createAgedPayableReferences(formik.values)\r\n      }\r\n\r\n      const handleValueOnChangeCredit1 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit1(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleValueOnChangeCredit2 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit2(addDecimal(event.target.value));\r\n      \r\n      }\r\n      const handleValueOnChangeCredit3 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit3(addDecimal(event.target.value));\r\n      \r\n      }\r\n      const handleValueOnChangeCredit4 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit4(addDecimal(event.target.value));\r\n      \r\n      }\r\n      const handleValueOnChangeCredit5 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit5(addDecimal(event.target.value));\r\n      \r\n      }\r\n      const handleValueOnChangeCredit6 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit6(addDecimal(event.target.value));\r\n      \r\n      }\r\n      const handleValueOnChangeCredit7 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit7(addDecimal(event.target.value));\r\n      \r\n      }\r\n      const handleValueOnChangeCredit8 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit8(addDecimal(event.target.value));\r\n      \r\n      }\r\n      const handleValueOnChangeCredit9 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit9(addDecimal(event.target.value));\r\n      \r\n      }\r\n      const handleValueOnChangeCredit10 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForCredit10(addDecimal(event.target.value));\r\n      \r\n      } \r\n     \r\n\r\n      const handleValueOnChangeDebit1 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit1(addDecimal(event.target.value));\r\n      \r\n      }\r\n      \r\n      const handleValueOnChangeDebit2 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit2(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleValueOnChangeDebit3 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit3(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleValueOnChangeDebit4 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit4(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleValueOnChangeDebit5 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit5(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleValueOnChangeDebit6 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit6(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleValueOnChangeDebit7 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit7(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleValueOnChangeDebit8 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit8(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleValueOnChangeDebit9 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit9(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleValueOnChangeDebit10 = (event) => {\r\n        //var addingComma = event.target.value\r\n       setValueForDebit10(addDecimal(event.target.value));\r\n      \r\n      }\r\n\r\n      const handleSubmissionOfValues = (e) => {\r\n        e.preventDefault()\r\n        var valueCreditTotal = document.getElementById(\"debitTotal\").innerHTML\r\n        var valueDebitTotal = document.getElementById(\"creditTotal\").innerHTML\r\n        if ( valueCreditTotal != valueDebitTotal ) {\r\n          document.getElementById(\"preventSave\").innerHTML = \"<b >Cannot Proceed</b>\" +   \"<br /> Debit Total and Credit Total Must be of equal Value\"\r\n        }\r\n      }\r\n        const formik = useFormik({\r\n          initialValues: {\r\n              narrative: '',\r\n              to: '',\r\n              startDate: '',\r\n              dueDate: '',\r\n              invoice: '',\r\n              reference: '',\r\n              item: '',\r\n              description:'',\r\n              qty: '',\r\n              unitPrice: '',\r\n              disc: '',\r\n              account:'',\r\n              taxRate: '',\r\n              amountPkr: '',\r\n              name: '',\r\n              total:'',\r\n              accountPaid: '',\r\n              amountCredit: '',\r\n              amountDebit:'',\r\n              amountPaid: '',\r\n              amountDue:'',\r\n          },\r\n  \r\n          //4 Make onSubmit propert to handle what happens to data on form submisison\r\n  \r\n          onSubmit: values => {\r\n  \r\n            \r\n            //createTodo(formik.values)\r\n            //redirecting \r\n            //history.push(\"/\")\r\n  \r\n            onSubmit(formik.values)\r\n  \r\n          },\r\n          \r\n  \r\n          //5 Make validation property\r\n          \r\n          validate: values => {\r\n              \r\n     \r\n              let errors = {}\r\n    \r\n              const letters = /^[A-Za-z ]+$/;\r\n  \r\n              const cnic = /^[0-9--]+$/;\r\n  \r\n              const phone = /^[0-9]+$/;\r\n  \r\n              const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n              \r\n              if(!values.name){\r\n                  errors.headOffice = \"Please fill in School Head Office Name\"\r\n              }else if (!letters.test(values.headOfficeName)) {\r\n                  errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n              }\r\n              if(!values.startDate){\r\n                errors.startDate = \"Please fill in Starting Date\"\r\n              }\r\n              if(!values.dueDate){\r\n                errors.dueDate = \"Please fill in Due Date\"\r\n              }\r\n              if(!values.productionDeadline){\r\n                  errors.productionDeadline = \"Please fill in Production Deadline\"\r\n              }\r\n              if(!values.deliveryDate){\r\n                  errors.size = \"Please fill in Delivery Date\"\r\n              return errors\r\n              }\r\n  \r\n  \r\n          }\r\n  \r\n  \r\n      })\r\n  \r\n\r\n    return (\r\n        <div>\r\n        <>\r\n        <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader>New Manual Journal</CardHeader>\r\n              <CardBody>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                  <h2 className=\"cart-area-title text-center pt-3\">Draft</h2>\r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Narrative</label>\r\n                          <input type=\"text\" name=\"to\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.to} className=\"form-control\"  />\r\n                          {formik.errors.to && formik.touched.to  ? (<div className='error'>{formik.errors.to}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn btn-info text-light\" onClick = {(e) => handleApprovePurchase(e)}>Approve</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n                    <div>\r\n                        <hr />\r\n                        {/*}\r\n                        <form>\r\n                        <div className = \"row\">\r\n                        <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <select name=\"accountType\" placeholder = \"PKR Pakistani Rupee\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.accountType} className=\"form-control\" required>\r\n                            <option value=\"PKR Pakistani Rupee\">PKR Pakistani Rupee</option>\r\n                            <option value=\"Add Currency\">Add Currency</option>\r\n                          </select>\r\n                          {formik.touched.accountType ? (<div className='error'>{formik.errors.accountType}</div>) : null}\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 mt-2\" >\r\n                        <div className=\"form-group\">\r\n                        <label>\r\n                                    Amounts are: \r\n                        </label>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                        <select name=\"accountType\" placeholder = \"PKR Pakistani Rupee\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.accountType} className=\"form-control\" required>\r\n                            <option value=\"Tax Enclusive\">Tax Enclusive</option>\r\n                            <option value=\"Tax Inclusive\">Tax Inclusive</option>\r\n                            <option value=\"No Tax\">No Tax</option>\r\n                          </select>\r\n                          {formik.touched.accountType ? (<div className='error'>{formik.errors.accountType}</div>) : null}\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </form>\r\n                    */}\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Description</th>\r\n                              <th>Account</th>\r\n                              <th>Tax Rate</th>\r\n                              <th>Debit PKR</th>\r\n                              <th>Credit PKR</th>\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit1} onInput={(event) => handleValueOnChangeDebit1(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit1} onInput={(event) => handleValueOnChangeCredit1(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit2} onInput={(event) => handleValueOnChangeDebit2(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit2} onInput={(event) => handleValueOnChangeCredit2(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit3} onInput={(event) => handleValueOnChangeDebit3(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit3} onInput={(event) => handleValueOnChangeCredit3(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit4} onInput={(event) => handleValueOnChangeDebit4(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit4} onInput={(event) => handleValueOnChangeCredit4(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit5} onInput={(event) => handleValueOnChangeDebit5(event)} onBlur = {(e) => sumOfValues(e)}   />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit5} onInput={(event) => handleValueOnChangeCredit5(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit6} onInput={(event) => handleValueOnChangeDebit6(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit6} onInput={(event) => handleValueOnChangeCredit6(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit7} onInput={(event) => handleValueOnChangeDebit7(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit7} onInput={(event) => handleValueOnChangeCredit7(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit8} onInput={(event) => handleValueOnChangeDebit8(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit8} onInput={(event) => handleValueOnChangeCredit8(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit9} onInput={(event) => handleValueOnChangeDebit9(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit9} onInput={(event) => handleValueOnChangeCredit9(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taxRate\"/>\r\n                            {formik.touched.taxRate ? (<div className='error'>{formik.errors.taxRate}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountDebit\"  value = {valueForDebit10} onInput={(event) => handleValueOnChangeDebit10(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountDebit ? (<div className='error'>{formik.errors.amountDebit}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"amountCredit\"  value = {valueForCredit10} onInput={(event) => handleValueOnChangeCredit10(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.amountCredit ? (<div className='error'>{formik.errors.amountCredit}</div>) : null}  \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              Total\r\n                            </td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td id=\"debitTotal\" >\r\n                            </td>\r\n                            <td id=\"creditTotal\" >\r\n                            </td>\r\n                            {/*}\r\n                            <td></td>\r\n                            <td id=\"prcTotalUnits\"  >                              \r\n                            </td>\r\n                            <td></td>\r\n                            <td id=\"dscInValue\" >\r\n                            </td>\r\n                            <td id=\"prcTotalUnitsWithDiscount\"   >\r\n                            </td>\r\n                            <td></td>\r\n                            <td id=\"slsTaxVat\" >\r\n                            </td>\r\n                            <td id=\"slsPriceAfterDiscount\"  >\r\n                            </td>\r\n                          */}\r\n                          </tr>\r\n\r\n                          \r\n                          \r\n                          \r\n                        </tbody>\r\n                        <button>Add a new line</button>\r\n                        <button onClick={(e) => sumOfValues(e)}>Sum of values</button>\r\n                        <span><p>Sub Total</p></span>\r\n                   \r\n                        </table>\r\n                        {/*}\r\n                        <p id=\"creditTotal\"></p>\r\n                        <p id=\"prcTotalUnits\"></p>\r\n                        <p id=\"dscInValue\"></p>\r\n                        <p id=\"prcTotalUnitsWithDiscount\"></p>\r\n                        <p id=\"slsTaxVat\"></p>\r\n                        <p id=\"slsTaxVatValue\"></p>\r\n                        <p id=\"slsPriceAfterDiscount\"></p>\r\n                          */}\r\n                        <div className = \"text-right\">\r\n                        <p id = \"subtotal\">\r\n                            Subtotal\r\n                        </p>\r\n                        <p id = \"subtotalTax\">\r\n                            Tax\r\n                        </p>\r\n                        <h3>\r\n                            Total = <span id = \"totalOverall\"></span>\r\n                        </h3>\r\n                        <hr />\r\n                        {/*}\r\n                        <h3>\r\n                            Amount Paid = <span id = \"totalPaid\"></span>\r\n                        </h3>\r\n                        <span>Paid On = <span id = \"totalDate\"></span></span>\r\n                        <hr />\r\n                        <h3>\r\n                            Amount Due = <span id = \"totalDue\"></span>\r\n                        </h3>\r\n                        */}\r\n                        </div>\r\n                        <div>\r\n                            <button className = \"btn btn-info\" onClick = {(e) => handleSubmissionOfValues(e)}>\r\n                                Save\r\n                            </button>\r\n                            <button type=\"submit\" className = \"btn btn-success\" onClick = {(e) => handleChange(e)} >\r\n                                Approve\r\n                            </button>\r\n                            <button className = \"btn btn-dark\" >\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                      <hr />\r\n                      <p id = \"preventSave\"></p>       \r\n        </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManualJournal\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createAddAccounts } from '../../../../Apis/ApiForAddAccount';\r\n\r\nfunction AddAccount() {\r\n       /*const { register, handleSubmit } = useForm({\r\n    defaultValues: { text: todo ? todo.text : \"\" },\r\n  });*/\r\n\r\n  /*const submitHandler = handleSubmit((data) => {\r\n    onSubmit(data)\r\n  });*/\r\n  const history = useHistory()\r\n  \r\n  const onSubmit = async (data) => {\r\n    console.log(data)\r\n    await createAddAccounts(data)\r\n    //redirecting \r\n    //history.push(\"/\")\r\n  };\r\n\r\n    //1 Start of by making initial values \r\n    const formik = useFormik({\r\n        initialValues: {\r\n          accountType: '',\r\n          code: '',\r\n          tax:'',   \r\n          to: '',\r\n          startDate: '',\r\n          dueDate: '',\r\n          invoice: '',\r\n          reference: '',\r\n          item: '',\r\n          description:'',\r\n          qty: '',\r\n          unitPrice: '',\r\n          disc: '',\r\n          account:'',\r\n          taxRate: '',\r\n          amountPkr: '',\r\n          name: '',\r\n          total:'',\r\n          accountPaid: '',\r\n          amountCredit: '',\r\n          amountDuePaid:'',\r\n          amountTotalDebit:'',\r\n          transactionType: '',\r\n          amountPaidAmountValue: '',\r\n          amountPaid:'',\r\n          datePaid:'',\r\n          paidTo: '',\r\n          referencePaid: '',\r\n          datePurchaseOrSalesTaxVat:'',\r\n          accountNamePurchaseOrSalesTaxVat:'',\r\n          valuePurchaseTaxVatDebit:'',\r\n          valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert to handle what happens to data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n\r\n        //5 Make validation property\r\n\r\n        validate: values => {\r\n            \r\n            let errors = {}\r\n\r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.accountType){\r\n                errors.accountType = \"Please select Account Type\"\r\n            }else if(values.tax == \"selectAccountType\"){\r\n              errors.tax = \"Please choose an Account type\"\r\n            }\r\n\r\n          if(!values.code){\r\n              errors.code = \"Please create a code\"\r\n          }\r\n\r\n            if(!values.name){\r\n                errors.name = \"Please enter a name\"\r\n            }\r\n\r\n            if(!values.description){\r\n                errors.description = \"Please fill in description\"\r\n            }\r\n            if(!values.tax){\r\n              errors.tax = \"Please fill in your tax\"\r\n          }else if(values.tax == \"selectTaxType\"){\r\n            errors.tax = \"Please choose a Tax type\"\r\n          }\r\n            \r\n            \r\n            return errors\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n\r\n    console.log(\"Form errors\", formik.errors)\r\n    return (\r\n        <div>\r\n             <form onSubmit={formik.handleSubmit} className=\"contact-form\">\r\n              <fieldset>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"rating_from\">Account type</label>\r\n                          <select name=\"accountType\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.accountType} className=\"form-control\" required>\r\n                            <option value=\"selectAccountType\">Select Account Type</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >ASSETS</option>\r\n                            <option value=\"Current Asset\">Current Asset</option>\r\n                            <option value=\"Fixed Asset\">Fixed Asset</option>\r\n                            <option value=\"Inventory\">Inventory</option>\r\n                            <option value=\"Non - Current Asset\">Non - Current Asset</option>\r\n                            <option value=\"Pre Payment\">Pre Payment</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >EQUITY</option>\r\n                            <option value=\"Equity\">Equity</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >EXPENSES</option>\r\n                            <option value=\"Depreciation\">Depreciation</option>\r\n                            <option value=\"Direct Costs\">Direct Costs</option>\r\n                            <option value=\"Expense\">Expense</option>\r\n                            <option value=\"Overhead\">Overhead</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >LIABILITY</option>\r\n                            <option value=\"Current Liability\">Current Liability</option>\r\n                            <option value=\"Non-Current Liability\">Non-Current Liability</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >REVENUE</option>\r\n                            <option value=\"Other Income\">Other Income</option>\r\n                            <option value=\"Revenue\">Revenue</option>\r\n                            <option value=\"Sales\">Sales</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >D & A</option>\r\n                            <option >Depreciation</option>\r\n                            <option >Amortization</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >Interest</option>\r\n                            <option >Interest</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >Tax</option>\r\n                            <option >Tax</option>\r\n                          </select>\r\n                          {formik.touched.accountType ? (<div className='error'>{formik.errors.accountType}</div>) : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"rating_from\">Code</label>\r\n                          <p>A unique code/number for this account (limited to 10 characters)</p>\r\n                          <input type=\"text\" name=\"code\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.code} className=\"form-control\"  />\r\n                          {formik.errors.code && formik.touched.code ? (<div className='error'>{formik.errors.code}</div>) : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"rating_from\">Name</label>\r\n                          <p>A short title for this account (limited to 150 characters)</p>\r\n                          <input type=\"text\" name=\"name\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.name} className=\"form-control\"  />\r\n                          {formik.errors.name && formik.touched.name ? (<div className='error'>{formik.errors.name}</div>) : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"rating_from\">Description  (Optional)</label>\r\n                          <p>A description of how this account should be used</p>\r\n                          <input type=\"text\" name=\"description\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.description} className=\"form-control\"  />\r\n                          {formik.errors.description && formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor=\"rating_from\">Tax</label>\r\n                          <p>The default tax setting for this account</p>\r\n                          <select name=\"tax\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.tax} className=\"form-control\" required>\r\n                            <option value=\"selectTaxType\">Select Tax Type</option>\r\n                            <option value=\"Sales Tax On Imports\">Sales Tax On Imports</option>\r\n                            <option value=\"Tax Exemptt\">Tax Exempt</option>\r\n                            <option value=\"Tax On Purchases\">Tax On Purchases</option>\r\n                            <option value=\"Tax On Saless\">Tax On Sales</option>\r\n                          </select>\r\n                          {formik.touched.tax ? (<div className='error'>{formik.errors.tax}</div>) : null}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group\">\r\n                          <input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" defaultValue=\"Bike\" />\r\n                          <label htmlFor=\"vehicle1\">Show on Dashboard Watchlist</label><br />\r\n                          <input type=\"checkbox\" id=\"vehicle2\" name=\"vehicle2\" defaultValue=\"Car\" />\r\n                          <label htmlFor=\"vehicle2\">Show in Expense Claims</label><br />\r\n                          <input type=\"checkbox\" id=\"vehicle3\" name=\"vehicle3\" defaultValue=\"Boat\" />\r\n                          <label htmlFor=\"vehicle3\">Enable payments to this account</label><br /><br />\r\n                          {formik.touched.tax ? (<div className='error'>{formik.errors.tax}</div>) : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n              </fieldset>\r\n              <hr />\r\n                    <center>\r\n                      <button type=\"submit\" id=\"save_staff\" className=\"btn btn-dark\">\r\n                        Submit\r\n                      </button>\r\n                    </center>\r\n             </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAccount\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport AddAccount from '../AddAccount';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n  \r\n\r\nexport default props => {\r\n  const {\r\n    title, isOpen, askToClose,\r\n    onAfterOpen, onRequestClose, onChangeInput\r\n  } = props;\r\n\r\n  return (\r\n    <Modal\r\n      id=\"test\"\r\n      contentLabel=\"modalA\"\r\n      closeTimeoutMS={150}\r\n      isOpen={isOpen}\r\n      style={customStyles}\r\n      onAfterOpen={onAfterOpen}\r\n      onRequestClose={onRequestClose}>\r\n      <AddAccount />\r\n      <button className = \"mt-2\" onClick={askToClose}>close</button>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Modal from 'react-modal';\r\nimport MyModal from './modal';\r\n\r\nconst MODAL_A = 'modal_a';\r\nconst MODAL_B = 'modal_b';\r\n\r\nconst DEFAULT_TITLE = 'Default title';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n  };\r\n  \r\n\r\nexport default class ModalTest extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          title1: DEFAULT_TITLE,\r\n          currentModal: null\r\n        };\r\n      }\r\n    \r\n      toggleModal = key => event => {\r\n        event.preventDefault();\r\n        if (this.state.currentModal) {\r\n          this.handleModalCloseRequest();\r\n          return;\r\n        }\r\n    \r\n        this.setState({\r\n          ...this.state,\r\n          currentModal: key,\r\n          title1: DEFAULT_TITLE\r\n        });\r\n      }\r\n    \r\n      handleModalCloseRequest = () => {\r\n        // opportunity to validate something and keep the modal open even if it\r\n        // requested to be closed\r\n        this.setState({\r\n          ...this.state,\r\n          currentModal: null\r\n        });\r\n      }\r\n    \r\n      handleInputChange = e => {\r\n        let text = e.target.value;\r\n        if (text == '') {\r\n          text = DEFAULT_TITLE;\r\n        }\r\n        this.setState({ ...this.state, title1: text });\r\n      }\r\n    \r\n      handleOnAfterOpenModal = () => {\r\n        // when ready, we can access the available refs.\r\n        this.heading && (this.heading.style.color = '#F00');\r\n      }\r\n    render() {\r\n        const { currentModal } = this.state;\r\n    \r\n        return (\r\n          <div>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.toggleModal(MODAL_A)}>Add Account</button>\r\n            <MyModal\r\n              title={this.state.title1}\r\n              isOpen={currentModal == MODAL_A}\r\n              onAfterOpen={this.handleOnAfterOpenModal}\r\n              onRequestClose={this.handleModalCloseRequest}\r\n              askToClose={this.toggleModal(MODAL_A)}\r\n              onChangeInput={this.handleInputChange} />\r\n            <Modal\r\n              ref=\"mymodal2\"\r\n              id=\"test2\"\r\n              aria={{\r\n                labelledby: \"heading\",\r\n                describedby: \"fulldescription\"\r\n              }}\r\n              closeTimeoutMS={150}\r\n              contentLabel=\"modalB\"\r\n              isOpen={currentModal == MODAL_B}\r\n              shouldCloseOnOverlayClick={false}\r\n              onAfterOpen={this.handleOnAfterOpenModal}\r\n              style={customStyles}\r\n              onRequestClose={this.toggleModal(MODAL_B)}>\r\n              <h1 id=\"heading\" ref={h1 => this.heading = h1}>This is the modal 2!</h1>\r\n              <div id=\"fulldescription\" tabIndex=\"0\" role=\"document\">\r\n               <button onClick={this.toggleModal(MODAL_B)}>close</button>\r\n              </div>\r\n            </Modal>\r\n          </div>\r\n        );\r\n      }\r\n  }\r\n  \r\n","import React, { useState, useEffect } from 'react'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\n\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAddAccounts } from '../../../../Apis/ApiForAddAccount'\r\nimport ModalTest from './Modals/ModalTest'\r\n\r\nfunction AllAccounts() {\r\n    const location = useLocation();\r\n    \r\n    const history = useHistory()\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(() => {\r\n      const fetchItems = async function() {\r\n        const accounts = await getAddAccounts()\r\n        setItems(accounts)\r\n      }\r\n      fetchItems()\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <button>\r\n                <ModalTest /> \r\n            </button>\r\n            <div>\r\n            <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader></CardHeader>\r\n              <CardBody>\r\n                    <div className=\"mt-3\">\r\n                        <table className=\"table table-striped mt-3 text-center\">\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Code</th>\r\n                              <th>Name</th>\r\n                              <th>Type</th>\r\n                              <th>Tax Rate</th>\r\n                              <th>YTD</th>\r\n                              <th colSpan=\"3\">Action</th>\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                            {\r\n                            items.map(accounts => (\r\n                                <tr key={accounts._id}>\r\n                                <td>\r\n                                    {accounts.code}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.name}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.accountType}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.tax}\r\n                                </td>\r\n                                <td>\r\n                                <Link to={{\r\n                                        pathname: '/ledger',\r\n                                        state: accounts,\r\n                                      }} className = \"text-dark\">{accounts.total}\r\n                                </Link>\r\n                                </td>\r\n                                <td>\r\n                                     \r\n                                  </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                    </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllAccounts\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllPurchaseInvoiceAccountsValuesController } from '../../../Apis/ApiForPurchaseInvoice';\r\n\r\nfunction PurchaseOverview() {\r\n    const [items, setItems] = useState([])\r\n    var count = 0\r\n    useEffect(() => {\r\n        const fetchPurchase = async () => {\r\n            const contents = await getAllPurchaseInvoiceAccountsValuesController()\r\n            setItems(contents)\r\n        }\r\n        fetchPurchase()\r\n    }, []);\r\n    \r\n    const timerId = setTimeout(() => {\r\n        sumOfValues()\r\n      }, 2000);\r\n\r\n      const sumOfValues = () => {\r\n        var arrForTotalSales = [];\r\n        var totForFixedAssets = 0;\r\n        \r\n        \r\n        for(var i=0;i<items.length;i++){\r\n            count = count + i\r\n        }\r\n       console.log(count)\r\n       console.log(items.length)\r\n        //setGrossProfit(totForSales - totForPurchase)\r\n    }\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              <th>Type</th>\r\n                              <th>Transaction</th>\r\n                              <th>Reference</th>\r\n                              <th>Debit</th>\r\n                              <th>Credit</th>\r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Purchase Overview</h3></CardHeader>\r\n              <CardBody>\r\n                    <b>Bills</b>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div>\r\n                    <Link className = \"btn btn-primary\" to = \"/new-purchase-invoice\">New</Link>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <button className = \"btn btn-info border\">Draft <br/></button>\r\n                            <button className = \"btn btn-info border\"><Link to = \"/purchase-overview-detail\" style = {{textDecoration : \"none\"}} className = \"text-dark\">Awaiting Approval ({items.length})</Link> <br/></button>\r\n                            <button className = \"btn btn-info border\">Awaiting Payment<br/></button>\r\n                            <button className = \"btn btn-info border\">Overdue<br/></button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseOverview\r\n","//getting API for showing all the data\r\nexport const getAmountControls = () => fetch(\"https://313.com.pk/amount-control\").then(res => res.json())\r\n\r\n//getting API for inserting the data\r\nexport const createAmountControls = (todo) => fetch(\"https://313.com.pk/amount-control/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for updating specific data\r\nexport const updateAmountControl = (todo, id) => fetch(`https://313.com.pk/amount-control/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for getting specific data\r\nexport const getAmountControl = (id) => fetch(`https://313.com.pk/amount-control/${id}`).then(res => res.json())","//getting API for showing all the data\r\nexport const getInterests = () => fetch(\"https://313.com.pk/purchase-sales-interest\").then(res => res.json())\r\n\r\n//getting API for inserting the data\r\nexport const createInterests = (todo) => fetch(\"https://313.com.pk/purchase-sales-interest/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for updating specific data\r\nexport const updateInterest = (todo, id) => fetch(`https://313.com.pk/purchase-sales-interest/${id}`, {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n\r\n//getting API for getting specific data\r\nexport const getInterest = (id) => fetch(`https://313.com.pk/purchase-sales-interest/${id}`).then(res => res.json())","import axios from \"axios\"\r\n\r\nexport const getAllSalesAndPurchaseInvoiceAccountsValuesController = id => (\r\n\taxios.post(`https://313.com.pk/all-sales-purchase-accounts`)\r\n\t\t.then(res => res.data, )\r\n)\r\nexport const getAllSalesAndPurchaseInvoiceAccountsSpecificValuesController = id => (\r\n\tconsole.log(id),\r\n\taxios.post(`https://313.com.pk/all-sales-purchase-accounts/specific/${id}`)\r\n\t\t.then(res => res.data, )\r\n)\r\n\r\nexport const createAllSalesAndPurchaseInvoiceAccountsValues = (todo) => fetch(\"https://313.com.pk/all-sales-purchase-accounts/create\", {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\"\r\n  },\r\n  body: JSON.stringify(todo)\r\n})  \r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getAddAccounts } from '../../../Apis/ApiForAddAccount';\r\nimport { createSalesInvoice, createAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\nimport { createTestingAmountSend } from '../../../Apis/ApiForTestingAmountSend';\r\nimport { createAgedPayableReferences } from '../../../Apis/ApiForAgedPayableReference';\r\nimport { getTaxRates } from '../../../Apis/ApiForTaxRate';\r\nimport { createLedgers } from '../../../Apis/ApiForLedgerControl';\r\nimport ModalTest from '../../Accounting/Advanced/Chart Of Accounts/Modals/ModalTest';\r\nimport { createAmountControls } from '../../../Apis/ApiForAmountControl';\r\nimport { getAmountControls } from '../../../Apis/ApiForAmountControl';\r\nimport { createPurchaseOrSalesTaxVatValueAfterDiscounts } from '../../../Apis/ApiForPurchaseSalesControl';\r\nimport { createCurrentLiabilityInvoice } from '../../../Apis/ApiForSalesInvoice';\r\nimport { createNonCurrentLiabilityInvoice } from '../../../Apis/ApiForSalesInvoice';\r\nimport { createEquityInvoice } from '../../../Apis/ApiForSalesInvoice';\r\nimport { createInterests } from '../../../Apis/ApiForInterest';\r\nimport { createAllSalesAndPurchaseInvoiceAccountsValues } from '../../../Apis/ApiForAllSalesAndPurchase';\r\n\r\nfunction PurchaseInvoice() {\r\n    \r\n    const location = useLocation();\r\n    const editorRef = useRef(null);\r\n    const history = useHistory()\r\n    const [taxTotalArray, setTaxTotalArray] = useState([])\r\n    const [taxSingleValue, settingTaxSingleValue] = useState()\r\n    const [items, setItems] = useState([])\r\n    const [accountValues, setAccountValues] = useState([])\r\n    const [taxRates, setTaxRates] = useState()\r\n\r\n\r\n    const [valueForDescription1, setValueForDescription1] = useState(\"\");\r\n    const [valueForDescription2, setValueForDescription2] = useState(\"\");\r\n    const [valueForDescription3, setValueForDescription3] = useState(\"\");\r\n\r\n    const [valueForAccount1, setValueForAccount1] = useState(\"\");\r\n    const [valueForAccount2, setValueForAccount2] = useState(\"\");\r\n    const [valueForAccount3, setValueForAccount3] = useState(\"\");\r\n\r\n    const [valueForQTY1, setValueForQTY1] = useState(\"\");\r\n    const [valueForQTY2, setValueForQTY2] = useState(\"\");\r\n    const [valueForQTY3, setValueForQTY3] = useState(\"\");\r\n\r\n    const [valueForPricePerUnitWithoutSalesTaxVAT1, setValueForPricePerUnitWithoutSalesTaxVAT1] = useState(\"\");\r\n    const [valueForPricePerUnitWithoutSalesTaxVAT2, setValueForPricePerUnitWithoutSalesTaxVAT2] = useState(\"\");\r\n    const [valueForPricePerUnitWithoutSalesTaxVAT3, setValueForPricePerUnitWithoutSalesTaxVAT3] = useState(\"\");\r\n\r\n    const [valueForPriceTotalUnitsWithoutSalesTaxVAT1, setValueForPriceTotalUnitsWithoutSalesTaxVAT1] = useState(\"\");\r\n    const [valueForPriceTotalUnitsWithoutSalesTaxVAT2, setValueForPriceTotalUnitsWithoutSalesTaxVAT2] = useState(\"\");\r\n    const [valueForPriceTotalUnitsWithoutSalesTaxVAT3, setValueForPriceTotalUnitsWithoutSalesTaxVAT3] = useState(\"\");\r\n\r\n    const [valueForDiscount1, setValueForDiscount1] = useState(\"\");\r\n    const [valueForDiscount2, setValueForDiscount2] = useState(\"\");\r\n    const [valueForDiscount3, setValueForDiscount3] = useState(\"\");\r\n\r\n    const [valueForDiscountInValue1, setValueForDiscountInValue1] = useState(\"\");\r\n    const [valueForDiscountInValue2, setValueForDiscountInValue2] = useState(\"\");\r\n    const [valueForDiscountInValue3, setValueForDiscountInValue3] = useState(\"\");\r\n    \r\n    const [valueForPriceTotalUnitsWithoutSalesTaxVATAfterDiscount1, setValueForPriceTotalUnitsWithoutSalesTaxVATAfterDiscount1] = useState(\"\");\r\n    const [valueForPriceTotalUnitsWithoutSalesTaxVATAfterDiscount2, setValueForPriceTotalUnitsWithoutSalesTaxVATAfterDiscount2] = useState(\"\");\r\n    const [valueForPriceTotalUnitsWithoutSalesTaxVATAfterDiscount3, setValueForPriceTotalUnitsWithoutSalesTaxVATAfterDiscount3] = useState(\"\");\r\n\r\n    const [valueForSalesTaxVAT1, setValueForSalesTaxVAT1] = useState(\"\");\r\n    const [valueForSalesTaxVAT2, setValueForSalesTaxVAT2] = useState(\"\");\r\n    const [valueForSalesTaxVAT3, setValueForSalesTaxVAT3] = useState(\"\");\r\n    \r\n    const [valueForSalesTaxVATinValue1, setValueForSalesTaxVATinValue1] = useState(\"\");\r\n    const [valueForSalesTaxVATinValue2, setValueForSalesTaxVATinValue2] = useState(\"\");\r\n    const [valueForSalesTaxVATinValue3, setValueForSalesTaxVATinValue3] = useState(\"\");\r\n\r\n\r\n    const [valueForSalesPriceAfterDiscountandInclusiveofSalesTaxVAT1, setForSalesPriceAfterDiscountandInclusiveofSalesTaxVAT1] = useState(\"\");\r\n    const [valueForSalesPriceAfterDiscountandInclusiveofSalesTaxVAT2, setForSalesPriceAfterDiscountandInclusiveofSalesTaxVAT2] = useState(\"\");\r\n    const [valueForSalesPriceAfterDiscountandInclusiveofSalesTaxVAT3, setForSalesPriceAfterDiscountandInclusiveofSalesTaxVAT3] = useState(\"\");\r\n\r\n\r\n    const [valueForunitPrice1, setValueForunitPrice1] = useState();\r\n    const [valueForunitPrice2, setValueForunitPrice2] = useState();\r\n    const [valueForunitPrice3, setValueForunitPrice3] = useState();\r\n    //const [valueForTotal,]\r\n\r\n\r\n    const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n    const addDecimal = num => Number(num).toFixed(2)\r\n\r\n    useEffect(() => {\r\n      const fetchItems = async function() {\r\n        const contents = await getAddAccounts()\r\n        setItems(contents)\r\n      }\r\n      const fetchTax = async function() {\r\n        const tax = await getTaxRates()\r\n        setTaxRates(tax)\r\n      }\r\n      const fetchAccountValues = async function() {\r\n        const amountValue = await getAmountControls()\r\n        setAccountValues(amountValue)\r\n      }\r\n      fetchItems()\r\n      fetchTax()\r\n      fetchAccountValues()\r\n    }, []);\r\n\r\n    const findTotal = () => {\r\n      /*\r\n\r\n      (/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\")\r\n\r\n\r\n      e.preventDefault()\r\n      var table = document.getElementById(\"table\"), sumVal = 0;\r\n      console.log (table.rows[3].cells[2].innerHTML)\r\n      console.log(table + \"works\")\r\n      \r\n      if (table.rows.length == null){\r\n        document.getElementById(\"val\").innerHTML = \"No values\"\r\n      }else{\r\n        for(var i = 1; i < table.rows.length; i++)\r\n      {\r\n          sumVal = sumVal + parseInt(table.rows[i].cells[2].innerHTML);\r\n      }\r\n      \r\n      document.getElementById(\"val\").innerHTML = \"Sum Value = \" + sumVal;\r\n      console.log(sumVal);\r\n      }\r\n     */ \r\n    }\r\n        \r\n    const sumOfValues = (e) => {\r\n      e.preventDefault()\r\n      console.log('checking')\r\n      var arrQty = document.getElementsByName('qty');\r\n      var taxValue = \"\"\r\n      var arrUnitPrice = document.getElementsByName('unitPrice');\r\n      var arrPriceTotalUnits = document.getElementsByName('priceTotalUnits');\r\n      var arrDiscPercentage = document.getElementsByName('discPercentage');\r\n      var arrDiscInValue = document.getElementsByName('discInValue');\r\n      var arrPriceTotalUnitsWithDiscount = document.getElementsByName('priceTotalUnits');\r\n      var arrPurchaseTaxVat = \"\"\r\n      var arrPurchaseTaxVatValue = document.getElementsByName('salesTaxVatValue');\r\n      var arrPurchasePriceAfterDiscount = document.getElementsByName('priceTotalUnits');\r\n      var multForUnitPrice=0;\r\n      var perc = 0;\r\n      var arrayForMult = [];\r\n      var arrayForNumb = []\r\n      var arrayForPercentageBefore = [];\r\n      var arrayForPercentage = [];\r\n      var arrayForTotalUnitsWithDiscount= [];\r\n      var arrayForPurchaseTaxVatVal = [];\r\n      var arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal = []\r\n      var totForQty=0;\r\n      var totFoUnitPrice=0;\r\n      var totPriceTotalUnits=0;\r\n      var totDiscPercentage=0;\r\n      var totDiscInValue=0;\r\n      var totPriceTotalUnitsWithDiscount=0;\r\n      var totPurchaseTaxVatValue=0;\r\n      var totPurchasePriceAfterDiscount=0;\r\n\r\n      if (taxSingleValue != null){\r\n        arrPurchaseTaxVat = taxSingleValue  \r\n      }\r\n      \r\n      for(var i=0;i<arrQty.length;i++){\r\n        arrayForNumb.push(arrQty[i].value)\r\n        arrayForNumb[i] = arrayForNumb[i].replace(/,/g, '');\r\n        if(parseInt(arrayForNumb[i]))\r\n              totForQty += parseInt(arrayForNumb[i]);\r\n      }\r\n      document.getElementById(\"quantityTotal\").innerHTML = addDecimal(totForQty);\r\n      var testing = document.getElementById(\"quantityTotal\").innerHTML\r\n      document.getElementById(\"quantityTotal\").innerHTML = testing.toLocaleString();\r\n      //document.getElementById('total').value = \"hi\";\r\n      for(var i=0;i<arrQty.length;i++){\r\n          if(arrUnitPrice[i].value == \"\"){\r\n          var multForUnitPriceValue1 = 0\r\n          var multForUnitPriceValue2 = 0\r\n          multForUnitPrice = multForUnitPriceValue1 * multForUnitPriceValue2;\r\n          arrayForMult.push(multForUnitPrice)\r\n          }\r\n          else{\r\n            var multForUnitPriceValue1 = parseInt(arrQty[i].value);\r\n            var multForUnitPriceValue2 = parseInt(arrUnitPrice[i].value);\r\n            multForUnitPrice = multForUnitPriceValue1 * multForUnitPriceValue2;\r\n            arrayForMult.push(multForUnitPrice)\r\n          }\r\n      }\r\n    document.getElementById(\"priceForTotalUnitsID1\").innerHTML = arrayForMult[0];\r\n    document.getElementById(\"priceForTotalUnitsID2\").innerHTML = arrayForMult[1];\r\n    document.getElementById(\"priceForTotalUnitsID3\").innerHTML = arrayForMult[2];\r\n    arrayForPercentageBefore.push(arrayForMult[0])\r\n    arrayForPercentageBefore.push(arrayForMult[1])\r\n    arrayForPercentageBefore.push(arrayForMult[2])\r\n    //document.getElementById(\"val\").innerHTML = \"Total Quantity = \" + tot;\r\n    //document.getElementById('total').value = \"hi\";\r\n    for(var i=0;i<arrDiscPercentage.length;i++){\r\n      if((arrayForPercentageBefore[i] == \"\") || (arrayForPercentageBefore[i] == null)){\r\n        var percVal1 = 0\r\n        var percVal2 =  0\r\n        perc = (percVal2 / 100) * percVal1;\r\n        arrayForPercentage.push(perc)\r\n        }\r\n      else if((arrDiscPercentage[i].value == \"\") || (arrDiscPercentage[i].value == null)){\r\n        var percVal1 = 0\r\n        var percVal2 =  0\r\n        perc = (percVal2 / 100) * percVal1;\r\n        arrayForPercentage.push(perc)\r\n        console.log(arrayForPercentage)\r\n      }\r\n      else{\r\n          var percVal1 = parseInt(arrayForPercentageBefore[i]);\r\n          var percVal2 = parseInt(arrDiscPercentage[i].value);\r\n          perc = (percVal2 / 100) * percVal1;\r\n          arrayForPercentage.push(perc)\r\n      }\r\n    }\r\n    document.getElementById(\"descperc1\").innerHTML = arrayForPercentage[0];\r\n    document.getElementById(\"descperc2\").innerHTML = arrayForPercentage[1];\r\n    document.getElementById(\"descperc3\").innerHTML = arrayForPercentage[2];\r\n \r\n    for(var i=0;i<arrDiscPercentage.length;i++){\r\n      if(parseInt(arrDiscPercentage[i].value)){\r\n        if((arrayForMult[i] == 0) || (arrayForMult[i] == null)) {\r\n          var percVal1 = 0\r\n          var percVal2 = 0\r\n          perc = percVal1 - percVal2;\r\n          arrayForTotalUnitsWithDiscount.push(perc)\r\n          console.log(arrayForTotalUnitsWithDiscount, \"testing, start work from here\")   \r\n        }\r\n        else if((arrayForPercentage[i] == 0) || (arrayForPercentage[i] == null)) {\r\n          var percVal1 = 0\r\n          var percVal2 = 0\r\n          perc = percVal1 - percVal2;\r\n          arrayForTotalUnitsWithDiscount.push(perc)\r\n          console.log(arrayForTotalUnitsWithDiscount, \"testing, start work from here\")   \r\n        }\r\n        else{\r\n          var percVal1 = parseInt(arrayForMult[i]);\r\n          var percVal2 = parseInt(arrayForPercentage[i]);\r\n          perc = percVal1 - percVal2;\r\n          arrayForTotalUnitsWithDiscount.push(perc)\r\n          console.log(arrayForTotalUnitsWithDiscount, \"testing, start work from here\")   \r\n        }\r\n      }\r\n      /*\r\n      if(parseInt(arrDiscPercentage[i].value))\r\n          var percVal1 = parseInt(arrayForMult[i]);\r\n          var percVal2 = parseInt(arrayForPercentage[i]);\r\n          perc = percVal1 - percVal2;\r\n          arrayForTotalUnitsWithDiscount.push(perc)\r\n          console.log(arrayForTotalUnitsWithDiscount, \"testing, start work from here\")   \r\n          */\r\n    }\r\n    \r\n    document.getElementById(\"withDisc1\").innerHTML = arrayForTotalUnitsWithDiscount[0];\r\n    document.getElementById(\"withDisc2\").innerHTML = arrayForTotalUnitsWithDiscount[1];\r\n    document.getElementById(\"withDisc3\").innerHTML = arrayForTotalUnitsWithDiscount[2];\r\n\r\n    for(var i=0;i<arrQty.length;i++){\r\n      if((arrPurchaseTaxVat == \"\") || (arrPurchaseTaxVat == null)){\r\n        var percVal1 = 0\r\n        var percVal2 =  0\r\n        perc = (percVal2 / 100) * percVal1;\r\n        arrayForPercentage.push(perc)\r\n        }\r\n      else if((arrayForTotalUnitsWithDiscount[i] == \"\") || (arrayForTotalUnitsWithDiscount[i] == null)){\r\n        var percVal1 = 0\r\n        var percVal2 =  0\r\n        perc = (percVal2 / 100) * percVal1;\r\n        arrayForPercentage.push(perc)\r\n      }\r\n      else{\r\n        var percVal1 = parseInt(arrPurchaseTaxVat);\r\n        var percVal2 = parseInt(arrayForTotalUnitsWithDiscount[i]);\r\n        perc = (percVal1 / 100) * percVal2;\r\n        arrayForPurchaseTaxVatVal.push(perc)\r\n        console.log(arrayForPurchaseTaxVatVal)\r\n      }\r\n          \r\n    }\r\n    \r\n    document.getElementById(\"salesTaxVat1\").innerHTML = arrayForPurchaseTaxVatVal[0];\r\n    document.getElementById(\"salesTaxVat2\").innerHTML = arrayForPurchaseTaxVatVal[1];\r\n    document.getElementById(\"salesTaxVat3\").innerHTML = arrayForPurchaseTaxVatVal[2];\r\n\r\n    for(var i=0;i<arrQty.length;i++){\r\n      if((arrayForPurchaseTaxVatVal[i] == \"\") || (arrayForPurchaseTaxVatVal[i] == null)){\r\n        var percVal1 = 0\r\n        console.log(arrayForPurchaseTaxVatVal, \"hit First val\")\r\n        var percVal2 = 0\r\n        console.log(arrayForTotalUnitsWithDiscount, \"hit second\")\r\n        console.log(percVal1)\r\n        console.log(percVal2)\r\n        perc = percVal1 + percVal2;\r\n        arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.push(perc)\r\n        console.log(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal, \"pushed\")\r\n        console.log(arrayForPurchaseTaxVatVal,  \"pushed\")\r\n        }\r\n      else if((arrayForTotalUnitsWithDiscount[i] == \"\") || (arrayForTotalUnitsWithDiscount[i] == null)){\r\n        var percVal1 = 0\r\n        console.log(arrayForPurchaseTaxVatVal, \"hit First val\")\r\n        var percVal2 = 0\r\n        console.log(arrayForTotalUnitsWithDiscount, \"hit second\")\r\n        console.log(percVal1)\r\n        console.log(percVal2)\r\n        perc = percVal1 + percVal2;\r\n        arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.push(perc)\r\n        console.log(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal, \"pushed\")\r\n        console.log(arrayForPurchaseTaxVatVal,  \"pushed\")\r\n      }\r\n      else{\r\n        var percVal1 = parseInt(arrayForPurchaseTaxVatVal[i]);\r\n        console.log(arrayForPurchaseTaxVatVal, \"hit First val\")\r\n        var percVal2 = parseInt(arrayForTotalUnitsWithDiscount[i]);\r\n        console.log(arrayForTotalUnitsWithDiscount, \"hit second\")\r\n        console.log(percVal1)\r\n        console.log(percVal2)\r\n        perc = percVal1 + percVal2;\r\n        arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.push(perc)\r\n        console.log(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal, \"pushed\")\r\n        console.log(arrayForPurchaseTaxVatVal,  \"pushed\")\r\n        \r\n      }\r\n    }\r\n    document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML = arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[0];\r\n    document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML = arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[1];\r\n    document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML = arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[2];\r\n    \r\n    for(var i=0;i<arrayForMult.length;i++){\r\n      console.log(arrayForMult[i])\r\n      totPriceTotalUnits += parseInt(arrayForMult[i]);\r\n    }\r\n    document.getElementById(\"prcTotalUnits\").innerHTML = totPriceTotalUnits;\r\n    \r\n    for(var i=0;i<arrayForPercentage.length;i++){\r\n      console.log(arrayForPercentage[i])\r\n      totDiscInValue += parseInt(arrayForPercentage[i]);\r\n    }\r\n    document.getElementById(\"dscInValue\").innerHTML = totDiscInValue;    \r\n\r\n    for(var i=0;i<arrayForTotalUnitsWithDiscount.length;i++){\r\n      console.log(arrayForTotalUnitsWithDiscount[i])\r\n      totPriceTotalUnitsWithDiscount += parseInt(arrayForTotalUnitsWithDiscount[i]);\r\n    }\r\n    document.getElementById(\"prcTotalUnitsWithDiscount\").innerHTML = totPriceTotalUnitsWithDiscount;\r\n    \r\n    for(var i=0;i<arrayForPurchaseTaxVatVal.length;i++){\r\n      console.log(arrayForPurchaseTaxVatVal[i], \"taxTotalArray Hit\", arrayForPurchaseTaxVatVal)\r\n      totPurchaseTaxVatValue += parseInt(arrayForPurchaseTaxVatVal[i]);\r\n    }\r\n    document.getElementById(\"slsTaxVat\").innerHTML = totPurchaseTaxVatValue;\r\n    document.getElementById(\"subtotalTax\").innerHTML = \"Tax = \" + totPurchaseTaxVatValue;\r\n\r\n    for(var i=0;i<arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.length;i++){\r\n      console.log(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[i])\r\n      totPurchasePriceAfterDiscount += parseInt(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[i]);\r\n    }\r\n    document.getElementById(\"slsPriceAfterDiscount\").innerHTML = totPurchasePriceAfterDiscount;\r\n    document.getElementById(\"subtotal\").innerHTML = \"Subtotal = \" + totPurchasePriceAfterDiscount;\r\n    var TotalOverall = totPurchaseTaxVatValue + totPurchasePriceAfterDiscount\r\n    document.getElementById(\"totalOverall\").innerHTML = TotalOverall;\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n      console.log(data)\r\n      \r\n      //history.push(\"/placement-question-details\")\r\n    }\r\n    const handleChange = (e) => {\r\n      e.preventDefault()\r\n      var totalOverall = document.getElementById(\"totalOverall\").innerHTML\r\n      formik.values.total = totalOverall\r\n      console.log(formik.values)\r\n      createSalesInvoice(formik.values)\r\n    }\r\n\r\n\r\n    const handleValueOnChange1 = (event) => {\r\n      //var addingComma = event.target.value\r\n     setValueForQTY1(addDecimal(event.target.value));\r\n    }\r\n    const Description1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDescription1(addDecimal(event.target.value));\r\n    }\r\n    const Account1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForAccount1(addDecimal(event.target.value));\r\n    }\r\n    const PricePerUnitWithoutSalesTaxVAT1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPricePerUnitWithoutSalesTaxVAT1(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutSalesTaxVAT1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutSalesTaxVAT1(addDecimal(event.target.value));\r\n    }\r\n    const Discount1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscount1(addDecimal(event.target.value));\r\n    }\r\n    const DiscountInValue1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscountInValue1(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutSalesTaxVATAfterDiscount1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutSalesTaxVATAfterDiscount1(addDecimal(event.target.value));\r\n    }\r\n    const SalesTaxVAT1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForSalesTaxVAT1(addDecimal(event.target.value));\r\n    }\r\n    const SalesPriceAfterDiscountandInclusiveofSalesTaxVAT1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setForSalesPriceAfterDiscountandInclusiveofSalesTaxVAT1(addDecimal(event.target.value));\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n    const handleValueOnChange2 = (event) => {\r\n      //var addingComma = event.target.value\r\n     setValueForQTY2(addDecimal(event.target.value));\r\n    \r\n    }\r\n    const Description2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDescription2(addDecimal(event.target.value));\r\n    }\r\n    const Account2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForAccount2(addDecimal(event.target.value));\r\n    }\r\n    const PricePerUnitWithoutSalesTaxVAT2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPricePerUnitWithoutSalesTaxVAT2(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutSalesTaxVAT2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutSalesTaxVAT2(addDecimal(event.target.value));\r\n    }\r\n    const Discount2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscount2(addDecimal(event.target.value));\r\n    }\r\n    const DiscountInValue2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscountInValue2(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutSalesTaxVATAfterDiscount2(addDecimal(event.target.value));\r\n    }\r\n    const SalesTaxVAT2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForSalesTaxVAT2(addDecimal(event.target.value));\r\n    }\r\n    const PriceAfterDiscountandInclusiveofSalesTaxVAT2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setForSalesPriceAfterDiscountandInclusiveofSalesTaxVAT2(addDecimal(event.target.value));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleValueOnChange3 = (event) => {\r\n      //var addingComma = event.target.value\r\n     setValueForQTY3(addDecimal(event.target.value));\r\n    \r\n    }\r\n\r\n    const Description3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDescription3(addDecimal(event.target.value));\r\n    }\r\n    const Account3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForAccount3(addDecimal(event.target.value));\r\n    }\r\n    const PricePerUnitWithoutSalesTaxVAT3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPricePerUnitWithoutSalesTaxVAT3(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutSalesTaxVAT3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutSalesTaxVAT3(addDecimal(event.target.value));\r\n    }\r\n    const Discount3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscount3(addDecimal(event.target.value));\r\n    }\r\n    const DiscountInValue3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscountInValue3(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutSalesTaxVATAfterDiscount3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutSalesTaxVATAfterDiscount3(addDecimal(event.target.value));\r\n    }\r\n    const SalesTaxVAT3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForSalesTaxVAT3(addDecimal(event.target.value));\r\n    }\r\n    const PriceAfterDiscountandInclusiveofSalesTaxVAT3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setForSalesPriceAfterDiscountandInclusiveofSalesTaxVAT3(addDecimal(event.target.value));\r\n    }\r\n\r\n\r\n      //console.log(removeNonNumeric(event.target.value))\r\n\r\n      const handleValueOnBlur1 = (event) => {\r\n        setValueForQTY1(addCommas(event.target.value));\r\n     }\r\n     \r\n     const handleValueOnBlur2 = (event) => {\r\n       setValueForQTY2(addCommas(event.target.value));\r\n    }\r\n    \r\n    const handleValueOnBlur3 = (event) => {\r\n     setValueForQTY3(addCommas(event.target.value));\r\n  }\r\n     \r\n    const handleAmountSend = (e) => {\r\n      e.preventDefault()\r\n      var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n      formik.values.amountDebit = amountToSend\r\n      console.log(formik.values)\r\n      //createTestingAmountSend(formik.values)\r\n  }\r\n\r\n\r\n     const handleSendingAccountValues = () => {\r\n/*\r\n       if (document.getElementById(\"account1\").innerHTML == null){\r\n         console.log(\"sasas\")\r\n       }\r\n\r\n       if (document.getElementById(\"account1\").innerHTML != null) {\r\n          var testingSending = document.getElementById(\"account1\").value\r\n          console.log(testingSending)\r\n          //console.log(document.getElementById(\"withDisc1\").value)\r\n       }\r\n   */\r\n     }\r\n  \r\n    const handleAmountPaidWith = (e) => {\r\n      e.preventDefault()\r\n\r\n      if (accountValues === undefined || accountValues.length == 0) {\r\n        var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n        //var amountToSendDate = document.getElementById(\"amountPaidOnDate\").value\r\n        //formik.values.amountPaid = document.getElementById(\"amountPaidWith\").value\r\n        //formik.values.datePaid = document.getElementById(\"amountPaidOnDate\").value\r\n        //document.getElementById(\"totalPaid\").innerHTML = amountToSend;\r\n        //document.getElementById(\"totalDate\").innerHTML = amountToSendDate;\r\n        var amountTotal = document.getElementById(\"totalOverall\").innerHTML\r\n        var amountDue = amountTotal - amountToSend\r\n        //document.getElementById(\"totalDue\").innerHTML = amountDue;\r\n       \r\n        //formik.values.amountPaid = amountToSend\r\n        formik.values.paidTo = formik.values.accountPaid\r\n        formik.values.amountDuePaid = amountDue\r\n        formik.values.datePaid = document.getElementById(\"amountPaidOnDate\").value\r\n        formik.values.amountPaidAmountValue = amountToSend\r\n        formik.values.referencePaid = document.getElementById(\"referenceFor\").value\r\n        console.log(formik.values)\r\n        //createTestingAmountSend(formik.values)\r\n        createAmountControls(formik.values)\r\n      }\r\n      else{\r\n        var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n        var amountTotal = Number(accountValues[accountValues.length - 1].amountDuePaid)\r\n        console.log(amountTotal)\r\n        amountDue = amountTotal - amountToSend\r\n        formik.values.amountDuePaid = amountDue\r\n        formik.values.paidTo = formik.values.accountPaid\r\n        formik.values.datePaid = document.getElementById(\"amountPaidOnDate\").value\r\n        formik.values.amountPaidAmountValue = amountToSend\r\n        formik.values.referencePaid = document.getElementById(\"referenceFor\").value\r\n        console.log(formik.values)\r\n        //createTestingAmountSend(formik.values)\r\n        createAmountControls(formik.values)\r\n        \r\n      }\r\n      \r\n    }\r\n    const handleApprovePurchase = (e) => {\r\n      e.preventDefault()\r\n      var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n      var totalOverall = document.getElementById(\"totalOverall\").innerHTML\r\n      formik.values.amountDebit = amountToSend\r\n      formik.values.total = totalOverall\r\n      console.log(formik.values)\r\n      createAgedPayableReferences(formik.values)\r\n    }\r\n\r\n    const handleChangeTaxRate = (e) => {\r\n   \r\n      console.log(e.target.value)\r\n      var valueCompare = e.target.value\r\n      var valueToSend = \"\"\r\n      console.log(taxRates)\r\n      for (var i=0;i<taxRates.length;i++){\r\n        if ( taxRates[i].taxRateName == valueCompare ) {\r\n          valueToSend = taxRates[i].taxRateAmount\r\n          settingTaxSingleValue(valueToSend)\r\n        }\r\n      }\r\n      console.log (valueToSend)\r\n      /*\r\n      if (valueCompare in taxRates){\r\n        \r\n      }\r\n      */\r\n     \r\n    }\r\n\r\n    const handleSendingLedger = (e) => {\r\n      e.preventDefault()\r\n      console.log(document.getElementById(\"slsTaxVat\").innerHTML)\r\n      formik.values.amountTotalDebit = document.getElementById(\"slsTaxVat\").innerHTML\r\n      formik.values.transactionType = \"Purchase Invoice\"\r\n      createLedgers(formik.values)\r\n    }\r\n\r\n    const handleOnClickPurchaseSalesTaxVatValue = (e) => {\r\n     e.preventDefault()\r\n     if (document.getElementById(\"account1\").innerHTML != null) {\r\n        formik.values.accountNamePurchaseOrSalesTaxVat = document.getElementById(\"account1\").value\r\n        formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n        formik.values.transactionType = \"Purchase Invoice\"\r\n        console.log(formik.values)\r\n        createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n\r\n\r\n     }\r\n     else if (document.getElementById(\"account2\").innerHTML != null) {\r\n      formik.values.accountNamePurchaseOrSalesTaxVat = document.getElementById(\"account2\").value\r\n      formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc2\").innerHTML\r\n      formik.values.transactionType = \"Purchase Invoice\"\r\n      console.log(formik.values)\r\n      createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n\r\n   }\r\n    else if (document.getElementById(\"account3\").innerHTML != null) {\r\n      formik.values.accountNamePurchaseOrSalesTaxVat = document.getElementById(\"account3\").value\r\n      formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc3\").innerHTML\r\n      formik.values.transactionType = \"Purchase Invoice\"\r\n      console.log(formik.values)\r\n      createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n\r\n  }\r\n    }\r\n\r\n  \r\n    const handleSave = (e) => {\r\n      e.preventDefault()\r\n      if (document.getElementById(\"account1\").innerHTML != null) {\r\n          formik.values.accountName = document.getElementById(\"account1\").value\r\n         for(var i=0;i<items.length;i++){\r\n           console.log(\"test for\")\r\n           if(items[i].name == formik.values.accountName){\r\n             formik.values.accountType = items[i].accountType\r\n           }\r\n         }\r\n         if(formik.values.accountType == \"Sales\"){\r\n          console.log(valueForQTY1, \"testing QTY1\")\r\n          console.log(valueForQTY2, \"testing QTY2\")\r\n          console.log(valueForQTY3, \"testing QTY3\")\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            \r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            \r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutSalesTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            formik.values.salesTaxVATinValue3 = document.getElementById(\"salesTaxVat3\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            \r\n          }\r\n         \r\n         }\r\n\r\n         else if(formik.values.accountType == \"Current Liability\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            \r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createCurrentLiabilityInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            \r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutSalesTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            formik.values.salesTaxVATinValue3 = document.getElementById(\"salesTaxVat3\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            \r\n          }\r\n         \r\n         }\r\n         \r\n         else if(formik.values.accountType == \"Non-Current Liability\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            createNonCurrentLiabilityInvoice(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            \r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutSalesTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            formik.values.salesTaxVATinValue3 = document.getElementById(\"salesTaxVat3\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            \r\n          }\r\n         \r\n         }\r\n\r\n         else if(formik.values.accountType == \"Equity\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createEquityInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            \r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n\r\n            \r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutSalesTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            formik.values.salesTaxVATinValue3 = document.getElementById(\"salesTaxVat3\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            \r\n          }\r\n         \r\n         }\r\n         else if(formik.values.accountType == \"Interest\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            createInterests(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            \r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            formik.values.accountName = document.getElementById(\"account1\").value\r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutSalesTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutSalesTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat1\").innerHTML\r\n            formik.values.salesTaxVATinValue2 = document.getElementById(\"salesTaxVat2\").innerHTML\r\n            formik.values.salesTaxVATinValue3 = document.getElementById(\"salesTaxVat3\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = \"Sales Invoice\"\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createSalesInvoice(formik.values)\r\n            createAllSalesInvoiceAccountsValuesController(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            \r\n          }\r\n         \r\n         }\r\n      }\r\n      else if (document.getElementById(\"account2\").innerHTML != null) {\r\n       formik.values.accountName = document.getElementById(\"account2\").value\r\n       for(var i=0;i<items.length;i++){\r\n        if(items[i].name == formik.values.accountName){\r\n          formik.values.accountType = items[i].accountType\r\n        }\r\n      }\r\n       formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc2\").innerHTML\r\n       formik.values.transactionType = \"Purchase Invoice\"\r\n       console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n       formik.values.total = formik.values.valuePurchaseTaxVatDebit\r\n       console.log(formik.values)\r\n       //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n       createSalesInvoice(formik.values)\r\n \r\n    }\r\n     else if (document.getElementById(\"account3\").innerHTML != null) {\r\n       formik.values.accountName = document.getElementById(\"account3\").value\r\n       for(var i=0;i<items.length;i++){\r\n        if(items[i].name == formik.values.accountName){\r\n          formik.values.accountType = items[i].accountType\r\n        }\r\n      }\r\n       formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc3\").innerHTML\r\n       formik.values.transactionType = \"Purchase Invoice\"\r\n       console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n       formik.values.total = formik.values.valuePurchaseTaxVatDebit\r\n       console.log(formik.values)\r\n       //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n       createSalesInvoice(formik.values)\r\n \r\n   }\r\n  }\r\n/*\r\n\r\n  const createSendingData1 = (data) => {\r\n    console.log(\"data sent to 1\")\r\n    formik.values.description = valueForDescription2\r\n    formik.values.accountName = document.getElementById(\"account2\").value\r\n    formik.values.qty = valueForQTY2\r\n    formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT2\r\n    formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n    formik.values.discPercentage = valueForDiscount1\r\n    formik.values.discInDigits = document.getElementById(\"descperc2\").innerHTML\r\n    formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc2\").innerHTML\r\n    formik.values.taxRate = document.getElementById(\"taxRate2\").value\r\n    formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat2\").innerHTML\r\n    formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n    \r\n\r\n    //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n    formik.values.transactionType = \"Sales Invoice\"\r\n    console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n    formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n    console.log(formik.values)\r\n    //createSalesInvoice(formik.values)\r\n    \r\n  }\r\n\r\n  const createSendingData2 = (data) => {\r\n    console.log(\"data sent to 2\")\r\n    formik.values.description = valueForDescription3\r\n    formik.values.accountName = document.getElementById(\"account3\").value\r\n    formik.values.qty = valueForQTY3\r\n    formik.values.unitPrice = valueForPricePerUnitWithoutSalesTaxVAT3\r\n    formik.values.priceTotalUnitsWithoutSalesTaxVAT = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n    formik.values.discPercentage = valueForDiscount1\r\n    formik.values.discInDigits = document.getElementById(\"descperc3\").innerHTML\r\n    formik.values.priceTotalUnitsWithoutSalesTaxVATAfterDiscount = document.getElementById(\"withDisc3\").innerHTML\r\n    formik.values.taxRate = document.getElementById(\"taxRate3\").value\r\n    formik.values.salesTaxVATinValue = document.getElementById(\"salesTaxVat3\").innerHTML\r\n    formik.values.salesPriceAfterDiscountandInclusiveofSalesTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n    \r\n\r\n    //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n    formik.values.transactionType = \"Sales Invoice\"\r\n    console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n    formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n    console.log(formik.values)\r\n    //createSalesInvoice(formik.values)\r\n    \r\n  }\r\n\r\n    */\r\n\r\n      const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            accountName1:'',\r\n            accountName2:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n\r\n            priceTotalUnitsWithoutSalesTaxVAT:'',\r\n          \r\n\r\n            discPercentage: '',\r\n\r\n            discInDigits:'',\r\n            priceTotalUnitsWithoutSalesTaxVATAfterDiscount:'',\r\n            \r\n            taxRate: '',\r\n\r\n            salesTaxVATinValue: '',\r\n            salesPriceAfterDiscountandInclusiveofSalesTaxVAT: '',\r\n\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n\r\n    return (\r\n        <div>\r\n        <>\r\n        <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader>Sales Invoice</CardHeader>\r\n              <CardBody>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                  <h2 className=\"cart-area-title text-center pt-3\">Sales Invoice</h2>\r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To</label>\r\n                          <input type=\"text\" name=\"to\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.to} className=\"form-control\"  />\r\n                          {formik.errors.to && formik.touched.to  ? (<div className='error'>{formik.errors.to}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Due Date</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"endDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.endDate} />\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Invoice</label>\r\n                          <input type=\"text\" name=\"invoice\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.invoice} className=\"form-control\"  />\r\n                          {formik.errors.invoice && formik.touched.invoice  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Reference</label>\r\n                          <input type=\"text\" name=\"reference\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.reference} className=\"form-control\"  />\r\n                          {formik.errors.reference && formik.touched.reference  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn btn-info text-light\" onClick = {(e) => handleApprovePurchase(e)}>Approve</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n                    <div>\r\n                        <hr />\r\n                        <form>\r\n                        <div className = \"row\">\r\n                        <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <select name=\"accountType\" placeholder = \"PKR Pakistani Rupee\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.accountType} className=\"form-control\" required>\r\n                            <option value=\"PKR Pakistani Rupee\">PKR Pakistani Rupee</option>\r\n                            <option value=\"Add Currency\">Add Currency</option>\r\n                          </select>\r\n                          {formik.touched.accountType ? (<div className='error'>{formik.errors.accountType}</div>) : null}\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Item</th>\r\n                              <th>Description</th>\r\n                              <th>Account</th>\r\n                              <th>Qty</th>\r\n                              <th>Price Per Unit Without Sales Tax/VAT </th>\r\n                              <th>Price Total Units Without Sales Tax/VAT</th>\r\n                              <th>Discount %</th>\r\n                              <th>Discount in Value</th>\r\n                              <th>Price Total Units Without Sales Tax/VAT After Discount</th>\r\n                              <th>Sales Tax/VAT</th>\r\n                              <th>Sales Tax/VAT in Value</th>\r\n                              <th>Sales Price After Discount and Inclusive of Sales Tax/VAT</th>\r\n                              {/*}\r\n                              <th>Action</th>\r\n                              */}\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                        <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" />\r\n                            {formik.touched.item ? (<div className='error'>{formik.errors.item}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" value = {valueForDescription1} onInput={(event) => Description1(event)}/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" id = \"account1\" className=\"form-control\" >\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input  type=\"text\" className = \"form-control\" name=\"qty\" value = {valueForQTY1} onInput={(event) => handleValueOnChange1(event)} onBlur = {(e) => sumOfValues(e)}    />\r\n                            {formik.touched.qty ? (<div className='error'>{formik.errors.qty}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"unitPrice\" value = {valueForPricePerUnitWithoutSalesTaxVAT1} onInput={(event) => PricePerUnitWithoutSalesTaxVAT1(event)} />\r\n                            {formik.touched.unitPrice ? (<div className='error'>{formik.errors.unitPrice}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p  id=\"priceForTotalUnitsID1\"></p>\r\n                            </td>\r\n                            {/*}\r\n                            <td>\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            <td>\r\n                              {tax == null ?\r\n                              <tr>\r\n\r\n                              </tr> :\r\n                              <tr>\r\n                                {tax}\r\n                              </tr>\r\n                              }\r\n                            </td>\r\n                            </td>\r\n                            */}\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"discPercentage\" value = {valueForDiscount1} onInput={(event) => Discount1(event)} />\r\n                            {formik.touched.discPercentage ? (<div className='error'>{formik.errors.discPercentage}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p id=\"descperc1\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"withDisc1\"></p>\r\n                            </td>\r\n                            <td>\r\n                            \r\n                            {\r\n                            taxRates != null ?   \r\n                            <select name=\"taxRate\" id = \"taxRate1\" className=\"form-control\" onBlur={e => handleChangeTaxRate(e)}>\r\n                              {\r\n                                  taxRates.map(contents => (\r\n                              <option>{contents.taxRateName}</option>\r\n                                ))}\r\n                                  \r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n                            </select>\r\n                            }\r\n                    \r\n                            </td>\r\n                            \r\n                            <td>\r\n                            <p id=\"salesTaxVat1\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\"></p>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" />\r\n                            {formik.touched.item ? (<div className='error'>{formik.errors.item}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" value = {valueForDescription2} onInput={(event) => Description2(event)}/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" id = \"account2\" className=\"form-control\" >\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input  type=\"text\" className = \"form-control\" name=\"qty\" value = {valueForQTY2} onInput={(event) => handleValueOnChange2(event)} onBlur = {(e) => sumOfValues(e)}    />\r\n                            {formik.touched.qty ? (<div className='error'>{formik.errors.qty}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"unitPrice\" value = {valueForPricePerUnitWithoutSalesTaxVAT2} onInput={(event) => PricePerUnitWithoutSalesTaxVAT2(event)} />\r\n                            {formik.touched.unitPrice ? (<div className='error'>{formik.errors.unitPrice}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p  id=\"priceForTotalUnitsID2\"></p>\r\n                            </td>\r\n                            {/*}\r\n                            <td>\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            <td>\r\n                              {tax == null ?\r\n                              <tr>\r\n\r\n                              </tr> :\r\n                              <tr>\r\n                                {tax}\r\n                              </tr>\r\n                              }\r\n                            </td>\r\n                            </td>\r\n                            */}\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"discPercentage\" value = {valueForDiscount2} onInput={(event) => Discount2(event)}/>\r\n                            {formik.touched.discPercentage ? (<div className='error'>{formik.errors.discPercentage}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p id=\"descperc2\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"withDisc2\"></p>\r\n                            </td>\r\n                            <td>\r\n                            \r\n                            {\r\n                            taxRates != null ?   \r\n                            <select name=\"taxRate\" id = \"taxRate2\" className=\"form-control\" onChange={e => handleChangeTaxRate(e)}>\r\n                              {\r\n                                  taxRates.map(contents => (\r\n                              <option>{contents.taxRateName}</option>\r\n                                ))}\r\n                                  \r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n                            </select>\r\n                            }\r\n                    \r\n                            </td>\r\n                            \r\n                            <td>\r\n                            <p id=\"salesTaxVat2\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\"></p>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" />\r\n                            {formik.touched.item ? (<div className='error'>{formik.errors.item}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"  value = {valueForDescription3} onInput={(event) => Description3(event)}/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" id = \"account3\" className=\"form-control\" >\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input  type=\"text\" className = \"form-control\" name=\"qty\" value = {valueForQTY3} onInput={(event) => handleValueOnChange3(event)} onBlur = {(e) => sumOfValues(e)}    />\r\n                            {formik.touched.qty ? (<div className='error'>{formik.errors.qty}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"unitPrice\" value = {valueForPricePerUnitWithoutSalesTaxVAT3} onInput={(event) => PricePerUnitWithoutSalesTaxVAT3(event)} />\r\n                            {formik.touched.unitPrice ? (<div className='error'>{formik.errors.unitPrice}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p  id=\"priceForTotalUnitsID3\"></p>\r\n                            </td>\r\n                            {/*}\r\n                            <td>\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            <td>\r\n                              {tax == null ?\r\n                              <tr>\r\n\r\n                              </tr> :\r\n                              <tr>\r\n                                {tax}\r\n                              </tr>\r\n                              }\r\n                            </td>\r\n                            </td>\r\n                            */}\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"discPercentage\" value = {valueForDiscount3} onInput={(event) => Discount3(event)} />\r\n                            {formik.touched.discPercentage ? (<div className='error'>{formik.errors.discPercentage}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p id=\"descperc3\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"withDisc3\"></p>\r\n                            </td>\r\n                            <td>\r\n                            {\r\n                            taxRates != null ?   \r\n                            <select name=\"taxRate\"  id = \"taxRate3\" className=\"form-control\" onChange={e => handleChangeTaxRate(e)}>\r\n                              {\r\n                                  taxRates.map(contents => (\r\n                              <option>{contents.taxRateName}</option>\r\n                                ))}\r\n                                  \r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            \r\n                            <td>\r\n                            <p id=\"salesTaxVat3\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\"></p>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              Total\r\n                            </td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td id=\"quantityTotal\" >\r\n                            </td>\r\n                            <td></td>\r\n                            <td id=\"prcTotalUnits\"  >                              \r\n                            </td>\r\n                            <td></td>\r\n                            <td id=\"dscInValue\" >\r\n                            </td>\r\n                            <td id=\"prcTotalUnitsWithDiscount\"   >\r\n                            </td>\r\n                            <td></td>\r\n                            <td id=\"slsTaxVat\" >\r\n                            </td>\r\n                            <td id=\"slsPriceAfterDiscount\"  >\r\n                            </td>\r\n                          </tr>\r\n\r\n                          \r\n                          \r\n                          \r\n                        </tbody>\r\n                        <button>Add a new line</button>\r\n                        <button onClick={(e) => sumOfValues(e)}>Sum of values</button>\r\n                        <span><p>Sub Total</p></span>\r\n                        <button className=\"btn btn-dark\" onClick={handleSendingAccountValues()}>Save</button>\r\n                        </table>\r\n                        <button className = \"btn btn-danger text-white\" onClick={(e) => handleSendingLedger(e)}>Send Tax Total To Ledger</button>\r\n                        {/*}\r\n                        <p id=\"quantityTotal\"></p>\r\n                        <p id=\"prcTotalUnits\"></p>\r\n                        <p id=\"dscInValue\"></p>\r\n                        <p id=\"prcTotalUnitsWithDiscount\"></p>\r\n                        <p id=\"slsTaxVat\"></p>\r\n                        <p id=\"slsTaxVatValue\"></p>\r\n                        <p id=\"slsPriceAfterDiscount\"></p>\r\n                          */}\r\n                        <div className = \"text-right mt-2\">\r\n                        <p id = \"subtotal\">\r\n                            Subtotal\r\n                        </p>\r\n                        <p id = \"subtotalTax\">\r\n                            Tax\r\n                        </p>\r\n                        <h3>\r\n                            Total = <span id = \"totalOverall\"></span>\r\n                        </h3>\r\n                        <hr />\r\n                 {/*}\r\n                        <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader></CardHeader>\r\n              <CardBody>\r\n                    <div className=\"mt-3\">\r\n                        <table className=\"table table-striped mt-3 text-center\">\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Date Paid</th>\r\n                              <th>Account Paid</th>\r\n                              <th>Reference ID</th>\r\n                              <th>Paid Amount</th>\r\n                              <th>Amount Due</th>\r\n                              \r\n                            </tr>\r\n                        </thead>\r\n                        \r\n                        { accountValues != null ?  \r\n                        <tbody>\r\n                            \r\n                            {\r\n                            accountValues.map(accounts => (\r\n                                <tr key={accounts._id}>\r\n                                <td>\r\n                                    {accounts.datePaid}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.paidTo}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.referencePaid}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.amountPaidAmountValue}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.amountDuePaid}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                            </tbody>\r\n                            :\r\n                            <tbody>\r\n                            <tr>\r\n                              <td></td>\r\n                            </tr>\r\n                            </tbody>\r\n                            }\r\n                          \r\n                        </table>\r\n                    </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n                          */} \r\n                       {/*}\r\n                        <h3>\r\n                            Amount Paid = <span id = \"totalPaid\"></span>\r\n                        </h3>\r\n                        <span>Paid On = <span id = \"totalDate\"></span></span>\r\n                        <hr />\r\n                        <h3>\r\n                            Amount Due = <span id = \"totalDue\"></span>\r\n                        </h3>\r\n                          */}\r\n                          \r\n                        </div>\r\n                        <div>\r\n                            <button className = \"btn btn-primary\" onClick = {(e) => handleSave(e)}>\r\n                                Save\r\n                            </button>\r\n                            {/*}\r\n                            <button type=\"submit\" className = \"btn btn-success\" onClick = {(e) => handleChange(e)} >\r\n                                Approve\r\n                            </button>\r\n                            */}\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \r\n                            \r\n                            <button className = \"btn btn-primary\" >\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                    {/*}\r\n                    <div>\r\n                    \r\n                    <Row>\r\n                    <Col md=\"12\">\r\n                      \r\n                        <Card className=\"card-plain\">\r\n                          <CardHeader>Receive A Payment</CardHeader>\r\n                          <CardBody>\r\n                          {Number(accountValues[accountValues.length - 1].amountDuePaid != 0) ? \r\n                          <div className=\"row\">\r\n                          <div className=\"col-md-2\">\r\n                \r\n                           <div className=\"form-group\">\r\n                           <label htmlFor>Amount Paid</label>\r\n                           <input type=\"text\" name=\"paidTo\"  className=\"form-control\" id=\"amountPaidWith\" />\r\n                           {formik.errors.from && formik.touched.from  ? (<div className='error'>{formik.errors.from}</div>) : null}\r\n                           </div>\r\n                         </div>\r\n                         <div className=\"col-md-2\">\r\n                           <div className=\"form-group\">\r\n                           <label htmlFor>Date Paid</label>\r\n                           <input className=\"form-control\" type=\"date\" name=\"startDate\" id = \"amountPaidOnDate\"  />\r\n                           {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                           </div>\r\n                         </div>\r\n                         <div className=\"col-md-2\">\r\n                         <div className=\"form-group\">\r\n                         <label htmlFor>Paid To</label>\r\n                         <select name=\"accountPaid\" className=\"form-control\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.accountPaid}>\r\n                         {\r\n                             items.map(contents => (\r\n                         <option>{contents.name}</option>\r\n                           ))}\r\n                         </select>\r\n                         {formik.touched.accountPaid ? (<div className='error'>{formik.errors.accountPaid}</div>) : null}\r\n                         </div>\r\n                         </div>\r\n                         <div className=\"col-md-2\">\r\n                           <div className=\"form-group\">\r\n                           <label htmlFor>Reference</label>\r\n                           <input type=\"text\" name=\"reference\" id = \"referenceFor\" className=\"form-control\"  />\r\n                           {formik.errors.reference && formik.touched.reference  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                           </div>\r\n                         </div>\r\n                         <div  className=\"col-md-2\">\r\n                         <div className=\"form-group\">\r\n                         <button className = 'btn btn-dark' onClick = {(e) => handleAmountSend(e)}>Send Amount</button>\r\n                        </div>\r\n                        </div>\r\n                        <div  className=\"col-md-2\">\r\n                         <div className=\"form-group\">\r\n                         <button className = 'btn btn-success' onClick = {(e) => handleAmountPaidWith(e)}>Pay Amount</button>\r\n                        </div>\r\n                        </div>              \r\n                        </div> \r\n                         :\r\n                       <div className=\"row\">\r\n                         <centre>All Dues Cleared</centre>           \r\n                       </div> \r\n                          } \r\n                        </CardBody>\r\n                        </Card>\r\n                        \r\n                        </Col>\r\n                        </Row>\r\n                      </div>\r\n                        */}\r\n                      <hr />       \r\n        </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoice\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\n\r\nfunction SalesOverview() {\r\n\r\n    const [items, setItems] = useState([])\r\n    var count = 0\r\n    useEffect(() => {\r\n        const fetchPurchase = async () => {\r\n            const contents = await getAllSalesInvoiceAccountsValuesController()\r\n            setItems(contents)\r\n        }\r\n        fetchPurchase()\r\n    }, []);\r\n\r\n    const timerId = setTimeout(() => {\r\n        sumOfValues()\r\n      }, 2000);\r\n      \r\n      const sumOfValues = () => {\r\n        var arrForTotalSales = [];\r\n        var totForFixedAssets = 0;\r\n        \r\n        \r\n        for(var i=0;i<items.length;i++){\r\n            count = count + i\r\n        }\r\n       console.log(count)\r\n       console.log(items.length)\r\n        //setGrossProfit(totForSales - totForPurchase)\r\n    } \r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              <th>Type</th>\r\n                              <th>Transaction</th>\r\n                              <th>Reference</th>\r\n                              <th>Debit</th>\r\n                              <th>Credit</th>\r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Sales Overview</h3></CardHeader>\r\n              <CardBody>\r\n                     <b>Invoices</b>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div>\r\n                    <Link className = \"btn btn-primary\" to = \"/new-invoice\">New</Link>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <button className = \"btn btn-info border\">Draft <br/></button>\r\n                            <button className = \"btn btn-info border\"><Link to = \"/sales-overview-detail\" style = {{textDecoration : \"none\"}} className = \"text-dark\">Awaiting Approval ({items.length})</Link> <br/></button>\r\n                            <button className = \"btn btn-info border\">Awaiting Payment<br/></button>\r\n                            <button className = \"btn btn-info border\">Overdue<br/></button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesOverview\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\nfunction SalesInvoiceDetail() {\r\n   \r\n    const [items, setItems] = useState()\r\n\r\n    useEffect(() => {\r\n        const fetchPurchase = async () => {\r\n            const contents = await getAllSalesInvoiceAccountsValuesController()\r\n            setItems(contents)\r\n        }\r\n        fetchPurchase()\r\n    }, []);\r\n\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        const dateStartDateFunction = (data) => {\r\n            const options = {\r\n             \r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric'\r\n            };\r\n            \r\n            var d = new Date(data);\r\n            var n = d.toLocaleDateString('en-EN', options);\r\n            \r\n            return(\r\n              <td>\r\n                {n}\r\n              </td>\r\n            )\r\n          }\r\n          const dateEndDateFunction = (data) => {\r\n            const options = {\r\n             \r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric'\r\n            };\r\n            \r\n            var d = new Date(data);\r\n            var n = d.toLocaleDateString('en-EN', options);\r\n            \r\n            return(\r\n              <td>\r\n                {n}\r\n              </td>\r\n            )\r\n          }\r\n        return(\r\n            <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3\" >\r\n                        <thead>\r\n                            <tr>\r\n                             <th>Number</th>\r\n                             <th>Ref</th>\r\n                             <th>To</th>\r\n                             <th>Date</th>\r\n                             <th>Due Date</th>\r\n                             <th>Overdue by</th>\r\n                             <th>Expected Date</th>\r\n                             <th>Paid</th>\r\n                             <th>Due</th>\r\n                             <th>Sent</th>\r\n                            </tr>\r\n                            \r\n                        </thead>  \r\n                        <tbody>\r\n                            {items != null ? \r\n                            items.map(contents => (\r\n                                <tr key = {contents._id}>\r\n                                    <td>\r\n                                    <Link to={{\r\n                                        pathname: '/aged-recievable-link',\r\n                                        state: contents,\r\n                                      }} className = \"text-dark\">{contents.invoice}</Link>\r\n                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        {contents.reference}\r\n                                    </td>\r\n                                    <td>\r\n                                        {contents.to}\r\n                                    </td>\r\n                                    {dateStartDateFunction(contents.startDate)}\r\n                                    {dateEndDateFunction(contents.endDate)}\r\n                                    <td>\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        \r\n                                    </td>\r\n                                    <td>\r\n                                        0.00\r\n                                    </td>\r\n                                    <td>\r\n                                        {contents.total}.00\r\n                                    </td>\r\n                                    <td>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        :\r\n                        <tr></tr>\r\n                        }\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h4>Sales overview</h4></CardHeader>\r\n              <CardBody>\r\n                  <h3>Invoice</h3>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n               \r\n                <div className=\"login-registration-field\">\r\n                    \r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                        <button className = \"btn btn-primary\">\r\n                            New Bill\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                        <button className = \"btn btn-primary\">\r\n                            New Credit Note\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col-md-2 \">\r\n                        <button className = \"btn btn-primary\">\r\n                            Import\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                        <button className = \"btn btn-primary\">\r\n                            Export\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn btn-primary\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      \r\n                    </div>\r\n                   \r\n                </div>\r\n              \r\n            </div>\r\n            \r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"pt-2\">\r\n                    <ul className=\"nav nav-tabs\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\" href=\"#\">All</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\" href=\"#\">Draft</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\"  href=\"#\">Awaiting Approval</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link active text-dark\" aria-current=\"page\" href=\"#\">Awaiting Payment</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\"  href=\"#\">Paid</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\"  href=\"#\">Repeating</a>\r\n                    </li>\r\n                    </ul>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesInvoiceDetail\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getAddAccounts, updateAddAccount } from '../../../Apis/ApiForAddAccount';\r\nimport { createPurchaseInvoice, createAllPurchaseInvoiceAccountsValues } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { createTestingAmountSend } from '../../../Apis/ApiForTestingAmountSend';\r\nimport { createAgedPayableReferences } from '../../../Apis/ApiForAgedPayableReference';\r\nimport { getTaxRates } from '../../../Apis/ApiForTaxRate';\r\nimport { createLedgers } from '../../../Apis/ApiForLedgerControl';\r\nimport ModalTest from '../../Accounting/Advanced/Chart Of Accounts/Modals/ModalTest';\r\nimport { createAmountControls } from '../../../Apis/ApiForAmountControl';\r\nimport { getAmountControls } from '../../../Apis/ApiForAmountControl';\r\nimport { createPurchaseOrSalesTaxVatValueAfterDiscounts } from '../../../Apis/ApiForPurchaseSalesControl';\r\nimport { createDirectCostsInvoice } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { createCurrentAssetsInvoice } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { createNonCurrentAssetsInvoice } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { createFixedAssetsInvoice } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { createInterests } from '../../../Apis/ApiForInterest';\r\nimport { createAllSalesAndPurchaseInvoiceAccountsValues } from '../../../Apis/ApiForAllSalesAndPurchase';\r\nfunction PurchaseInvoice() {\r\n    \r\n    const location = useLocation();\r\n    const editorRef = useRef(null);\r\n    const history = useHistory()\r\n    const [taxTotalArray, setTaxTotalArray] = useState([])\r\n    const [taxSingleValue, settingTaxSingleValue] = useState()\r\n    const [items, setItems] = useState([])\r\n    const [accountValues, setAccountValues] = useState([])\r\n    const [taxRates, setTaxRates] = useState()\r\n    const [valueForQTY1, setValueForQTY1] = useState(\"\");\r\n    const [valueForQTY2, setValueForQTY2] = useState(\"\");\r\n    const [valueForQTY3, setValueForQTY3] = useState(\"\");\r\n\r\n\r\n    const [valueForDescription1, setValueForDescription1] = useState(\"\");\r\n    const [valueForDescription2, setValueForDescription2] = useState(\"\");\r\n    const [valueForDescription3, setValueForDescription3] = useState(\"\");\r\n\r\n    const [valueForAccount1, setValueForAccount1] = useState(\"\");\r\n    const [valueForAccount2, setValueForAccount2] = useState(\"\");\r\n    const [valueForAccount3, setValueForAccount3] = useState(\"\");\r\n\r\n\r\n    const [valueForPricePerUnitWithoutPurchaseTaxVAT1, setValueForPricePerUnitWithoutPurchaseTaxVAT1] = useState(\"\");\r\n    const [valueForPricePerUnitWithoutPurchaseTaxVAT2, setValueForPricePerUnitWithoutPurchaseTaxVAT2] = useState(\"\");\r\n    const [valueForPricePerUnitWithoutPurchaseTaxVAT3, setValueForPricePerUnitWithoutPurchaseTaxVAT3] = useState(\"\");\r\n\r\n    const [valueForPriceTotalUnitsWithoutPurchaseTaxVAT1, setValueForPriceTotalUnitsWithoutPurchaseTaxVAT1] = useState(\"\");\r\n    const [valueForPriceTotalUnitsWithoutPurchaseTaxVAT2, setValueForPriceTotalUnitsWithoutPurchaseTaxVAT2] = useState(\"\");\r\n    const [valueForPriceTotalUnitsWithoutPurchaseTaxVAT3, setValueForPriceTotalUnitsWithoutPurchaseTaxVAT3] = useState(\"\");\r\n\r\n    const [valueForDiscount1, setValueForDiscount1] = useState(\"\");\r\n    const [valueForDiscount2, setValueForDiscount2] = useState(\"\");\r\n    const [valueForDiscount3, setValueForDiscount3] = useState(\"\");\r\n\r\n    const [valueForDiscountInValue1, setValueForDiscountInValue1] = useState(\"\");\r\n    const [valueForDiscountInValue2, setValueForDiscountInValue2] = useState(\"\");\r\n    const [valueForDiscountInValue3, setValueForDiscountInValue3] = useState(\"\");\r\n    \r\n    const [valueForPriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount1, setValueForPriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount1] = useState(\"\");\r\n    const [valueForPriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2, setValueForPriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2] = useState(\"\");\r\n    const [valueForPriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3, setValueForPriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3] = useState(\"\");\r\n\r\n    const [valueForPurchaseTaxVAT1, setValueForPurchaseTaxVAT1] = useState(\"\");\r\n    const [valueForPurchaseTaxVAT2, setValueForPurchaseTaxVAT2] = useState(\"\");\r\n    const [valueForPurchaseTaxVAT3, setValueForPurchaseTaxVAT3] = useState(\"\");\r\n    \r\n    const [valueForPurchaseTaxVATinValue1, setValueForPurchaseTaxVATinValue1] = useState(\"\");\r\n    const [valueForPurchaseTaxVATinValue2, setValueForPurchaseTaxVATinValue2] = useState(\"\");\r\n    const [valueForPurchaseTaxVATinValue3, setValueForPurchaseTaxVATinValue3] = useState(\"\");\r\n\r\n\r\n    const [valueForPurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT1, setValueForPurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT1] = useState(\"\");\r\n    const [valueForPurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2, setValueForPurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2] = useState(\"\");\r\n    const [valueForPurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3, setValueForPurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3] = useState(\"\");\r\n\r\n\r\n    const [valueForunitPrice1, setValueForunitPrice1] = useState();\r\n    const [valueForunitPrice2, setValueForunitPrice2] = useState();\r\n    const [valueForunitPrice3, setValueForunitPrice3] = useState();\r\n\r\n\r\n\r\n    //const [valueForTotal,]\r\n\r\n\r\n    const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n    const addDecimal = num => Number(num).toFixed(2)\r\n\r\n    useEffect(() => {\r\n      const fetchItems = async function() {\r\n        const contents = await getAddAccounts()\r\n        setItems(contents)\r\n      }\r\n      const fetchTax = async function() {\r\n        const tax = await getTaxRates()\r\n        setTaxRates(tax)\r\n      }\r\n      const fetchAccountValues = async function() {\r\n        const amountValue = await getAmountControls()\r\n        setAccountValues(amountValue)\r\n      }\r\n      fetchItems()\r\n      fetchTax()\r\n      fetchAccountValues()\r\n    }, []);\r\n\r\n    const findTotal = () => {\r\n      /*\r\n\r\n      (/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\")\r\n\r\n\r\n      e.preventDefault()\r\n      var table = document.getElementById(\"table\"), sumVal = 0;\r\n      console.log (table.rows[3].cells[2].innerHTML)\r\n      console.log(table + \"works\")\r\n      \r\n      if (table.rows.length == null){\r\n        document.getElementById(\"val\").innerHTML = \"No values\"\r\n      }else{\r\n        for(var i = 1; i < table.rows.length; i++)\r\n      {\r\n          sumVal = sumVal + parseInt(table.rows[i].cells[2].innerHTML);\r\n      }\r\n      \r\n      document.getElementById(\"val\").innerHTML = \"Sum Value = \" + sumVal;\r\n      console.log(sumVal);\r\n      }\r\n     */ \r\n    }\r\n        \r\n    const sumOfValues = (e) => {\r\n      e.preventDefault()\r\n      console.log('checking')\r\n      var arrQty = document.getElementsByName('qty');\r\n      var taxValue = \"\"\r\n      var arrUnitPrice = document.getElementsByName('unitPrice');\r\n      var arrPriceTotalUnits = document.getElementsByName('priceTotalUnits');\r\n      var arrDiscPercentage = document.getElementsByName('discPercentage');\r\n      var arrDiscInValue = document.getElementsByName('discInValue');\r\n      var arrPriceTotalUnitsWithDiscount = document.getElementsByName('priceTotalUnits');\r\n      var arrPurchaseTaxVat = \"\"\r\n      var arrPurchaseTaxVatValue = document.getElementsByName('purchaseTaxVatValue');\r\n      var arrPurchasePriceAfterDiscount = document.getElementsByName('priceTotalUnits');\r\n      var multForUnitPrice=0;\r\n      var perc = 0;\r\n      var arrayForMult = [];\r\n      var arrayForNumb = []\r\n      var arrayForPercentageBefore = [];\r\n      var arrayForPercentage = [];\r\n      var arrayForTotalUnitsWithDiscount= [];\r\n      var arrayForPurchaseTaxVatVal = [];\r\n      var arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal = []\r\n      var totForQty=0;\r\n      var totFoUnitPrice=0;\r\n      var totPriceTotalUnits=0;\r\n      var totDiscPercentage=0;\r\n      var totDiscInValue=0;\r\n      var totPriceTotalUnitsWithDiscount=0;\r\n      var totPurchaseTaxVatValue=0;\r\n      var totPurchasePriceAfterDiscount=0;\r\n\r\n      if (taxSingleValue != null){\r\n        arrPurchaseTaxVat = taxSingleValue  \r\n      }\r\n      \r\n      for(var i=0;i<arrQty.length;i++){\r\n        arrayForNumb.push(arrQty[i].value)\r\n        arrayForNumb[i] = arrayForNumb[i].replace(/,/g, '');\r\n        if(parseInt(arrayForNumb[i]))\r\n              totForQty += parseInt(arrayForNumb[i]);\r\n      }\r\n      document.getElementById(\"quantityTotal\").innerHTML = addDecimal(totForQty);\r\n      var testing = document.getElementById(\"quantityTotal\").innerHTML\r\n      document.getElementById(\"quantityTotal\").innerHTML = testing.toLocaleString();\r\n      //document.getElementById('total').value = \"hi\";\r\n      for(var i=0;i<arrQty.length;i++){\r\n          if(arrUnitPrice[i].value == \"\"){\r\n          var multForUnitPriceValue1 = 0\r\n          var multForUnitPriceValue2 = 0\r\n          multForUnitPrice = multForUnitPriceValue1 * multForUnitPriceValue2;\r\n          arrayForMult.push(multForUnitPrice)\r\n          }\r\n          else{\r\n            var multForUnitPriceValue1 = parseInt(arrQty[i].value);\r\n            var multForUnitPriceValue2 = parseInt(arrUnitPrice[i].value);\r\n            multForUnitPrice = multForUnitPriceValue1 * multForUnitPriceValue2;\r\n            arrayForMult.push(multForUnitPrice)\r\n          }\r\n      }\r\n    document.getElementById(\"priceForTotalUnitsID1\").innerHTML = arrayForMult[0];\r\n    document.getElementById(\"priceForTotalUnitsID2\").innerHTML = arrayForMult[1];\r\n    document.getElementById(\"priceForTotalUnitsID3\").innerHTML = arrayForMult[2];\r\n    arrayForPercentageBefore.push(arrayForMult[0])\r\n    arrayForPercentageBefore.push(arrayForMult[1])\r\n    arrayForPercentageBefore.push(arrayForMult[2])\r\n    //document.getElementById(\"val\").innerHTML = \"Total Quantity = \" + tot;\r\n    //document.getElementById('total').value = \"hi\";\r\n    for(var i=0;i<arrDiscPercentage.length;i++){\r\n      if((arrayForPercentageBefore[i] == \"\") || (arrayForPercentageBefore[i] == null)){\r\n        var percVal1 = 0\r\n        var percVal2 =  0\r\n        perc = (percVal2 / 100) * percVal1;\r\n        arrayForPercentage.push(perc)\r\n        }\r\n      else if((arrDiscPercentage[i].value == \"\") || (arrDiscPercentage[i].value == null)){\r\n        var percVal1 = 0\r\n        var percVal2 =  0\r\n        perc = (percVal2 / 100) * percVal1;\r\n        arrayForPercentage.push(perc)\r\n        console.log(arrayForPercentage)\r\n      }\r\n      else{\r\n          var percVal1 = parseInt(arrayForPercentageBefore[i]);\r\n          var percVal2 = parseInt(arrDiscPercentage[i].value);\r\n          perc = (percVal2 / 100) * percVal1;\r\n          arrayForPercentage.push(perc)\r\n      }\r\n    }\r\n    document.getElementById(\"descperc1\").innerHTML = arrayForPercentage[0];\r\n    document.getElementById(\"descperc2\").innerHTML = arrayForPercentage[1];\r\n    document.getElementById(\"descperc3\").innerHTML = arrayForPercentage[2];\r\n \r\n    for(var i=0;i<arrDiscPercentage.length;i++){\r\n      if(parseInt(arrDiscPercentage[i].value)){\r\n        if((arrayForMult[i] == 0) || (arrayForMult[i] == null)) {\r\n          var percVal1 = 0\r\n          var percVal2 = 0\r\n          perc = percVal1 - percVal2;\r\n          arrayForTotalUnitsWithDiscount.push(perc)\r\n          console.log(arrayForTotalUnitsWithDiscount, \"testing, start work from here\")   \r\n        }\r\n        else if((arrayForPercentage[i] == 0) || (arrayForPercentage[i] == null)) {\r\n          var percVal1 = 0\r\n          var percVal2 = 0\r\n          perc = percVal1 - percVal2;\r\n          arrayForTotalUnitsWithDiscount.push(perc)\r\n          console.log(arrayForTotalUnitsWithDiscount, \"testing, start work from here\")   \r\n        }\r\n        else{\r\n          var percVal1 = parseInt(arrayForMult[i]);\r\n          var percVal2 = parseInt(arrayForPercentage[i]);\r\n          perc = percVal1 - percVal2;\r\n          arrayForTotalUnitsWithDiscount.push(perc)\r\n          console.log(arrayForTotalUnitsWithDiscount, \"testing, start work from here\")   \r\n        }\r\n      }\r\n      /*\r\n      if(parseInt(arrDiscPercentage[i].value))\r\n          var percVal1 = parseInt(arrayForMult[i]);\r\n          var percVal2 = parseInt(arrayForPercentage[i]);\r\n          perc = percVal1 - percVal2;\r\n          arrayForTotalUnitsWithDiscount.push(perc)\r\n          console.log(arrayForTotalUnitsWithDiscount, \"testing, start work from here\")   \r\n          */\r\n    }\r\n    \r\n    document.getElementById(\"withDisc1\").innerHTML = arrayForTotalUnitsWithDiscount[0];\r\n    document.getElementById(\"withDisc2\").innerHTML = arrayForTotalUnitsWithDiscount[1];\r\n    document.getElementById(\"withDisc3\").innerHTML = arrayForTotalUnitsWithDiscount[2];\r\n\r\n    for(var i=0;i<arrQty.length;i++){\r\n      if((arrPurchaseTaxVat == \"\") || (arrPurchaseTaxVat == null)){\r\n        var percVal1 = 0\r\n        var percVal2 =  0\r\n        perc = (percVal2 / 100) * percVal1;\r\n        arrayForPercentage.push(perc)\r\n        }\r\n      else if((arrayForTotalUnitsWithDiscount[i] == \"\") || (arrayForTotalUnitsWithDiscount[i] == null)){\r\n        var percVal1 = 0\r\n        var percVal2 =  0\r\n        perc = (percVal2 / 100) * percVal1;\r\n        arrayForPercentage.push(perc)\r\n      }\r\n      else{\r\n        var percVal1 = parseInt(arrPurchaseTaxVat);\r\n        var percVal2 = parseInt(arrayForTotalUnitsWithDiscount[i]);\r\n        perc = (percVal1 / 100) * percVal2;\r\n        arrayForPurchaseTaxVatVal.push(perc)\r\n        console.log(arrayForPurchaseTaxVatVal)\r\n      }\r\n          \r\n    }\r\n    \r\n    document.getElementById(\"purchaseTaxVat1\").innerHTML = arrayForPurchaseTaxVatVal[0];\r\n    document.getElementById(\"purchaseTaxVat2\").innerHTML = arrayForPurchaseTaxVatVal[1];\r\n    document.getElementById(\"purchaseTaxVat3\").innerHTML = arrayForPurchaseTaxVatVal[2];\r\n\r\n    for(var i=0;i<arrQty.length;i++){\r\n      if((arrayForPurchaseTaxVatVal[i] == \"\") || (arrayForPurchaseTaxVatVal[i] == null)){\r\n        var percVal1 = 0\r\n        console.log(arrayForPurchaseTaxVatVal, \"hit First val\")\r\n        var percVal2 = 0\r\n        console.log(arrayForTotalUnitsWithDiscount, \"hit second\")\r\n        console.log(percVal1)\r\n        console.log(percVal2)\r\n        perc = percVal1 + percVal2;\r\n        arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.push(perc)\r\n        console.log(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal, \"pushed\")\r\n        console.log(arrayForPurchaseTaxVatVal,  \"pushed\")\r\n        }\r\n      else if((arrayForTotalUnitsWithDiscount[i] == \"\") || (arrayForTotalUnitsWithDiscount[i] == null)){\r\n        var percVal1 = 0\r\n        console.log(arrayForPurchaseTaxVatVal, \"hit First val\")\r\n        var percVal2 = 0\r\n        console.log(arrayForTotalUnitsWithDiscount, \"hit second\")\r\n        console.log(percVal1)\r\n        console.log(percVal2)\r\n        perc = percVal1 + percVal2;\r\n        arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.push(perc)\r\n        console.log(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal, \"pushed\")\r\n        console.log(arrayForPurchaseTaxVatVal,  \"pushed\")\r\n      }\r\n      else{\r\n        var percVal1 = parseInt(arrayForPurchaseTaxVatVal[i]);\r\n        console.log(arrayForPurchaseTaxVatVal, \"hit First val\")\r\n        var percVal2 = parseInt(arrayForTotalUnitsWithDiscount[i]);\r\n        console.log(arrayForTotalUnitsWithDiscount, \"hit second\")\r\n        console.log(percVal1)\r\n        console.log(percVal2)\r\n        perc = percVal1 + percVal2;\r\n        arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.push(perc)\r\n        console.log(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal, \"pushed\")\r\n        console.log(arrayForPurchaseTaxVatVal,  \"pushed\")\r\n        \r\n      }\r\n    }\r\n    document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML = arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[0];\r\n    document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML = arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[1];\r\n    document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML = arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[2];\r\n    \r\n    for(var i=0;i<arrayForMult.length;i++){\r\n      console.log(arrayForMult[i])\r\n      totPriceTotalUnits += parseInt(arrayForMult[i]);\r\n    }\r\n    document.getElementById(\"prcTotalUnits\").innerHTML = totPriceTotalUnits;\r\n    \r\n    for(var i=0;i<arrayForPercentage.length;i++){\r\n      console.log(arrayForPercentage[i])\r\n      totDiscInValue += parseInt(arrayForPercentage[i]);\r\n    }\r\n    document.getElementById(\"dscInValue\").innerHTML = totDiscInValue;    \r\n\r\n    for(var i=0;i<arrayForTotalUnitsWithDiscount.length;i++){\r\n      console.log(arrayForTotalUnitsWithDiscount[i])\r\n      totPriceTotalUnitsWithDiscount += parseInt(arrayForTotalUnitsWithDiscount[i]);\r\n    }\r\n    document.getElementById(\"prcTotalUnitsWithDiscount\").innerHTML = totPriceTotalUnitsWithDiscount;\r\n    \r\n    for(var i=0;i<arrayForPurchaseTaxVatVal.length;i++){\r\n      console.log(arrayForPurchaseTaxVatVal[i], \"taxTotalArray Hit\", arrayForPurchaseTaxVatVal)\r\n      totPurchaseTaxVatValue += parseInt(arrayForPurchaseTaxVatVal[i]);\r\n    }\r\n    document.getElementById(\"slsTaxVat\").innerHTML = totPurchaseTaxVatValue;\r\n    document.getElementById(\"subtotalTax\").innerHTML = \"Tax = \" + totPurchaseTaxVatValue;\r\n\r\n    for(var i=0;i<arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal.length;i++){\r\n      console.log(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[i])\r\n      totPurchasePriceAfterDiscount += parseInt(arrayForTotalUnitsWithDiscountMergePurchaseTaxVatVal[i]);\r\n    }\r\n    document.getElementById(\"slsPriceAfterDiscount\").innerHTML = totPurchasePriceAfterDiscount;\r\n    document.getElementById(\"subtotal\").innerHTML = \"Subtotal = \" + totPurchasePriceAfterDiscount;\r\n    var TotalOverall = totPurchaseTaxVatValue + totPurchasePriceAfterDiscount\r\n    document.getElementById(\"totalOverall\").innerHTML = TotalOverall;\r\n    }\r\n\r\n    const onSubmit = async (data) => {\r\n      console.log(data)\r\n      \r\n      //history.push(\"/placement-question-details\")\r\n    }\r\n    const handleChange = (e) => {\r\n      e.preventDefault()\r\n      var totalOverall = document.getElementById(\"totalOverall\").innerHTML\r\n      formik.values.total = totalOverall\r\n      console.log(formik.values, \"hello\")\r\n      //createPurchaseInvoice(formik.values)\r\n    }\r\n\r\n\r\n    const handleValueOnChange1 = (event) => {\r\n      //var addingComma = event.target.value\r\n     setValueForQTY1(addDecimal(event.target.value));\r\n    }\r\n    const Description1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDescription1(addDecimal(event.target.value));\r\n    }\r\n    const Account1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForAccount1(addDecimal(event.target.value));\r\n    }\r\n    const PricePerUnitWithoutPurchaseTaxVAT1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPricePerUnitWithoutPurchaseTaxVAT1(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutPurchaseTaxVAT1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutPurchaseTaxVAT1(addDecimal(event.target.value));\r\n    }\r\n    const Discount1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscount1(addDecimal(event.target.value));\r\n    }\r\n    const DiscountInValue1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscountInValue1(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount1(addDecimal(event.target.value));\r\n    }\r\n    const PurchaseTaxVAT1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPurchaseTaxVAT1(addDecimal(event.target.value));\r\n    }\r\n    const PurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT1 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT1(addDecimal(event.target.value));\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n    const handleValueOnChange2 = (event) => {\r\n      //var addingComma = event.target.value\r\n     setValueForQTY2(addDecimal(event.target.value));\r\n    \r\n    }\r\n    const Description2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDescription2(addDecimal(event.target.value));\r\n    }\r\n    const Account2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForAccount2(addDecimal(event.target.value));\r\n    }\r\n    const PricePerUnitWithoutPurchaseTaxVAT2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPricePerUnitWithoutPurchaseTaxVAT2(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutPurchaseTaxVAT2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutPurchaseTaxVAT2(addDecimal(event.target.value));\r\n    }\r\n    const Discount2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscount2(addDecimal(event.target.value));\r\n    }\r\n    const DiscountInValue2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscountInValue2(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2(addDecimal(event.target.value));\r\n    }\r\n    const PurchaseTaxVAT2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPurchaseTaxVAT2(addDecimal(event.target.value));\r\n    }\r\n    const PurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2(addDecimal(event.target.value));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleValueOnChange3 = (event) => {\r\n      //var addingComma = event.target.value\r\n     setValueForQTY3(addDecimal(event.target.value));\r\n    \r\n    }\r\n\r\n    const Description3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDescription3(addDecimal(event.target.value));\r\n    }\r\n    const Account3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForAccount3(addDecimal(event.target.value));\r\n    }\r\n    const PricePerUnitWithoutPurchaseTaxVAT3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPricePerUnitWithoutPurchaseTaxVAT3(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutPurchaseTaxVAT3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutPurchaseTaxVAT3(addDecimal(event.target.value));\r\n    }\r\n    const Discount3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscount3(addDecimal(event.target.value));\r\n    }\r\n    const DiscountInValue3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForDiscountInValue3(addDecimal(event.target.value));\r\n    }\r\n    const PriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPriceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3(addDecimal(event.target.value));\r\n    }\r\n    const PurchaseTaxVAT3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPurchaseTaxVAT3(addDecimal(event.target.value));\r\n    }\r\n    const PurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3 = (event) => {\r\n      //var addingComma = event.target.value\r\n      setValueForPurchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3(addDecimal(event.target.value));\r\n    }\r\n\r\n\r\n\r\n      const handleValueOnBlur1 = (event) => {\r\n        setValueForQTY1(addCommas(event.target.value));\r\n     }\r\n     \r\n     const handleValueOnBlur2 = (event) => {\r\n       setValueForQTY2(addCommas(event.target.value));\r\n    }\r\n    \r\n    const handleValueOnBlur3 = (event) => {\r\n     setValueForQTY3(addCommas(event.target.value));\r\n  }\r\n     \r\n    const handleAmountSend = (e) => {\r\n      e.preventDefault()\r\n      var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n      formik.values.amountDebit = amountToSend\r\n      console.log(formik.values)\r\n      //createTestingAmountSend(formik.values)\r\n  }\r\n\r\n\r\n     const handleSendingAccountValues = () => {\r\n/*\r\n       if (document.getElementById(\"account1\").innerHTML == null){\r\n         console.log(\"sasas\")\r\n       }\r\n\r\n       if (document.getElementById(\"account1\").innerHTML != null) {\r\n          var testingSending = document.getElementById(\"account1\").value\r\n          console.log(testingSending)\r\n          //console.log(document.getElementById(\"withDisc1\").value)\r\n       }\r\n   */\r\n     }\r\n  \r\n    const handleAmountPaidWith = (e) => {\r\n      e.preventDefault()\r\n\r\n      if (accountValues === undefined || accountValues.length == 0) {\r\n        var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n        //var amountToSendDate = document.getElementById(\"amountPaidOnDate\").value\r\n        //formik.values.amountPaid = document.getElementById(\"amountPaidWith\").value\r\n        //formik.values.datePaid = document.getElementById(\"amountPaidOnDate\").value\r\n        //document.getElementById(\"totalPaid\").innerHTML = amountToSend;\r\n        //document.getElementById(\"totalDate\").innerHTML = amountToSendDate;\r\n        var amountTotal = document.getElementById(\"totalOverall\").innerHTML\r\n        var amountDue = amountTotal - amountToSend\r\n        //document.getElementById(\"totalDue\").innerHTML = amountDue;\r\n       \r\n        //formik.values.amountPaid = amountToSend\r\n        formik.values.paidTo = formik.values.accountPaid\r\n        formik.values.amountDuePaid = amountDue\r\n        formik.values.datePaid = document.getElementById(\"amountPaidOnDate\").value\r\n        formik.values.amountPaidAmountValue = amountToSend\r\n        formik.values.referencePaid = document.getElementById(\"referenceFor\").value\r\n        console.log(formik.values)\r\n        //createTestingAmountSend(formik.values)\r\n        createAmountControls(formik.values)\r\n      }\r\n      else{\r\n        var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n        var amountTotal = Number(accountValues[accountValues.length - 1].amountDuePaid)\r\n        console.log(amountTotal)\r\n        amountDue = amountTotal - amountToSend\r\n        formik.values.amountDuePaid = amountDue\r\n        formik.values.paidTo = formik.values.accountPaid\r\n        formik.values.datePaid = document.getElementById(\"amountPaidOnDate\").value\r\n        formik.values.amountPaidAmountValue = amountToSend\r\n        formik.values.referencePaid = document.getElementById(\"referenceFor\").value\r\n        console.log(formik.values)\r\n        //createTestingAmountSend(formik.values)\r\n        createAmountControls(formik.values)\r\n        \r\n      }\r\n      \r\n    }\r\n    const handleApprovePurchase = (e) => {\r\n      e.preventDefault()\r\n      var amountToSend = document.getElementById(\"amountPaidWith\").value\r\n      var totalOverall = document.getElementById(\"totalOverall\").innerHTML\r\n      formik.values.amountDebit = amountToSend\r\n      formik.values.total = totalOverall\r\n      console.log(formik.values)\r\n      createAgedPayableReferences(formik.values)\r\n    }\r\n\r\n    const handleChangeTaxRate = (e) => {\r\n   \r\n      console.log(e.target.value)\r\n      var valueCompare = e.target.value\r\n      var valueToSend = \"\"\r\n      console.log(taxRates)\r\n      for (var i=0;i<taxRates.length;i++){\r\n        if ( taxRates[i].taxRateName == valueCompare ) {\r\n          valueToSend = taxRates[i].taxRateAmount\r\n          settingTaxSingleValue(valueToSend)\r\n        }\r\n      }\r\n      console.log (valueToSend)\r\n      /*\r\n      if (valueCompare in taxRates){\r\n        \r\n      }\r\n      */\r\n     \r\n    }\r\n\r\n    const handleSendingLedger = (e) => {\r\n      e.preventDefault()\r\n      console.log(document.getElementById(\"slsTaxVat\").innerHTML)\r\n      formik.values.amountTotalDebit = document.getElementById(\"slsTaxVat\").innerHTML\r\n      formik.values.transactionType = formik.values.from\r\n      createLedgers(formik.values)\r\n    }\r\n\r\n    const handleOnClickPurchaseSalesTaxVatValue = (e) => {\r\n     e.preventDefault()\r\n     if (document.getElementById(\"account1\").innerHTML != null) {\r\n        formik.values.accountNamePurchaseOrSalesTaxVat = document.getElementById(\"account1\").value\r\n        formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n        formik.values.transactionType = formik.values.from\r\n        console.log(formik.values)\r\n        createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n\r\n\r\n     }\r\n     else if (document.getElementById(\"account2\").innerHTML != null) {\r\n      formik.values.accountNamePurchaseOrSalesTaxVat = document.getElementById(\"account2\").value\r\n      formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc2\").innerHTML\r\n      formik.values.transactionType = formik.values.from\r\n      console.log(formik.values)\r\n      createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n\r\n   }\r\n    else if (document.getElementById(\"account3\").innerHTML != null) {\r\n      formik.values.accountNamePurchaseOrSalesTaxVat = document.getElementById(\"account3\").value\r\n      formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc3\").innerHTML\r\n      formik.values.transactionType = formik.values.from\r\n      console.log(formik.values)\r\n      createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n\r\n  }\r\n    }\r\n\r\n  \r\n    const handleSave = (e) => {\r\n      e.preventDefault()\r\n        var gettingID = document.getElementById(\"account1\").value\r\n        var gettingName = ''\r\n        for (var i=0;i<items.length;i++){\r\n          if ( items[i]._id == gettingID ) {\r\n            formik.values.accountType = items[i].accountType\r\n            formik.values.accountName1 = items[i].name\r\n            formik.values.code = items[i].code\r\n            formik.values.descriptionFromAccount = items[i].descriptionFromAccount\r\n            formik.values.tax = items[i].tax\r\n            formik.values.reference = gettingID\r\n            \r\n          }\r\n        }\r\n\r\n         console.log(formik.values.accountType)\r\n         if(formik.values.accountType == \"Expense\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n           \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            \r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            formik.values.name = formik.values.accountName1\r\n            formik.values.dueDate = formik.values.endDate\r\n            console.log(formik.values)\r\n            updateAddAccount(formik.values, gettingID)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            \r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            //createPurchaseInvoice(formik.values)\r\n            //createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutPurchaseTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            formik.values.purchaseTaxVATinValue3 = document.getElementById(\"purchaseTaxVat3\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            //createPurchaseInvoice(formik.values)\r\n            //createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n         \r\n         }\r\n         else if(formik.values.accountType == \"Direct Costs\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            formik.values.name = formik.values.accountName1\r\n            formik.values.dueDate = formik.values.endDate\r\n            updateAddAccount(formik.values, gettingID)\r\n            createDirectCostsInvoice(formik.values)\r\n            //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            //createPurchaseInvoice(formik.values)\r\n            //createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            \r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutPurchaseTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            formik.values.purchaseTaxVATinValue3 = document.getElementById(\"purchaseTaxVat3\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n         }\r\n         else if(formik.values.accountType == \"Current Asset\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            formik.values.name = formik.values.accountName1\r\n            formik.values.dueDate = formik.values.endDate\r\n            console.log(\"hi\")\r\n            //updateAddAccount(formik.values, gettingID)\r\n            //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            //createPurchaseInvoice(formik.values)\r\n            //createCurrentAssetsInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            //createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            \r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutPurchaseTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            formik.values.purchaseTaxVATinValue3 = document.getElementById(\"purchaseTaxVat3\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n         }\r\n         else if(formik.values.accountType == \"Non - Current Asset\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            formik.values.taxAmount = document.getElementById(\"slsTaxVat\").innerHTML\r\n            formik.values.name = formik.values.accountName1\r\n            formik.values.dueDate = formik.values.endDate\r\n            console.log(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            //createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n            //updateAddAccount(formik.values, gettingID)\r\n            //createNonCurrentAssetsInvoice(formik.values)\r\n            \r\n            \r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            \r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutPurchaseTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            formik.values.purchaseTaxVATinValue3 = document.getElementById(\"purchaseTaxVat3\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n         }\r\n         else if(formik.values.accountType == \"Fixed Asset\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            createFixedAssetsInvoice(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            \r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutPurchaseTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            formik.values.purchaseTaxVATinValue3 = document.getElementById(\"purchaseTaxVat3\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n         }\r\n         else if(formik.values.accountType == \"Interest\"){\r\n          if ((valueForQTY1 != \"\")  && (valueForQTY2 == \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n            createInterests(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 == \"\")){\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            \r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            \r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            \r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            \r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            \r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            \r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            \r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            \r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            \r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            \r\n           \r\n\r\n            \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            //createSendingData1(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n          else if((valueForQTY1 != \"\")  && (valueForQTY2 != \"\") && (valueForQTY3 != \"\")){\r\n            console.log(\"hit third\")\r\n            formik.values.description = valueForDescription1\r\n            formik.values.description2 = valueForDescription2\r\n            formik.values.description3 = valueForDescription3\r\n            \r\n            formik.values.accountName2 = document.getElementById(\"account2\").value\r\n            formik.values.accountName3 = document.getElementById(\"account3\").value\r\n            formik.values.qty = valueForQTY1\r\n            formik.values.qty2 = valueForQTY2\r\n            formik.values.qty3 = valueForQTY3\r\n            formik.values.unitPrice = valueForPricePerUnitWithoutPurchaseTaxVAT1\r\n            formik.values.unitPrice2 = valueForPricePerUnitWithoutPurchaseTaxVAT2\r\n            formik.values.unitPrice3 = valueForPricePerUnitWithoutPurchaseTaxVAT3\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT = document.getElementById(\"priceForTotalUnitsID1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT2 = document.getElementById(\"priceForTotalUnitsID2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVAT3 = document.getElementById(\"priceForTotalUnitsID3\").innerHTML\r\n            formik.values.discPercentage = valueForDiscount1\r\n            formik.values.discPercentage2 = valueForDiscount2\r\n            formik.values.discPercentage3 = valueForDiscount3\r\n            formik.values.discInDigits = document.getElementById(\"descperc1\").innerHTML\r\n            formik.values.discInDigits2 = document.getElementById(\"descperc2\").innerHTML\r\n            formik.values.discInDigits3 = document.getElementById(\"descperc3\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount2 = document.getElementById(\"withDisc2\").innerHTML\r\n            formik.values.priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount3 = document.getElementById(\"withDisc3\").innerHTML\r\n            formik.values.taxRate = document.getElementById(\"taxRate1\").value\r\n            formik.values.taxRate2 = document.getElementById(\"taxRate2\").value\r\n            formik.values.taxRate3 = document.getElementById(\"taxRate3\").value\r\n            formik.values.purchaseTaxVATinValue = document.getElementById(\"purchaseTaxVat1\").innerHTML\r\n            formik.values.purchaseTaxVATinValue2 = document.getElementById(\"purchaseTaxVat2\").innerHTML\r\n            formik.values.purchaseTaxVATinValue3 = document.getElementById(\"purchaseTaxVat3\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT2 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\").innerHTML\r\n            formik.values.purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT3 = document.getElementById(\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\").innerHTML\r\n           \r\n\r\n            //formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc1\").innerHTML\r\n            formik.values.transactionType = formik.values.from\r\n            console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n            formik.values.total = document.getElementById(\"totalOverall\").innerHTML\r\n            console.log(formik.values)\r\n            createPurchaseInvoice(formik.values)\r\n            createAllPurchaseInvoiceAccountsValues(formik.values)\r\n            createAllSalesAndPurchaseInvoiceAccountsValues(formik.values)\r\n          }\r\n         }\r\n      \r\n      else if (document.getElementById(\"account2\").innerHTML != null) {\r\n       formik.values.accountName = document.getElementById(\"account2\").value\r\n       for(var i=0;i<items.length;i++){\r\n        if(items[i].name == formik.values.accountName){\r\n          formik.values.accountType = items[i].accountType\r\n        }\r\n      }\r\n       formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc2\").innerHTML\r\n       formik.values.transactionType = formik.values.from\r\n       console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n       formik.values.total = formik.values.valuePurchaseTaxVatDebit\r\n       console.log(formik.values)\r\n       //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n       createPurchaseInvoice(formik.values)\r\n \r\n    }\r\n     else if (document.getElementById(\"account3\").innerHTML != null) {\r\n       formik.values.accountName = document.getElementById(\"account3\").value\r\n       for(var i=0;i<items.length;i++){\r\n        if(items[i].name == formik.values.accountName){\r\n          formik.values.accountType = items[i].accountType\r\n        }\r\n      }\r\n       formik.values.valuePurchaseTaxVatDebit = document.getElementById(\"withDisc3\").innerHTML\r\n       formik.values.transactionType = formik.values.from\r\n       console.log(document.getElementById(\"totalOverall\").innerHTML)\r\n       formik.values.total = formik.values.valuePurchaseTaxVatDebit\r\n       console.log(formik.values)\r\n       //createPurchaseOrSalesTaxVatValueAfterDiscounts(formik.values)\r\n       createPurchaseInvoice(formik.values)\r\n \r\n   }\r\n  }\r\n    \r\n\r\n      const formik = useFormik({\r\n        initialValues: {\r\n          \r\n\r\n\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            accountName1:'',\r\n            accountName2:'',\r\n            qty: '',\r\n            qty2: '',\r\n            qty3: '',\r\n            unitPrice: '',\r\n\r\n            priceTotalUnitsWithoutPurchaseTaxVAT:'',\r\n          \r\n\r\n            discPercentage: '',\r\n\r\n            discInDigits:'',\r\n            priceTotalUnitsWithoutPurchaseTaxVATAfterDiscount:'',\r\n            \r\n            taxRate: '',\r\n\r\n            purchaseTaxVATinValue: '',\r\n            purchasePriceAfterDiscountandInclusiveofPurchaseTaxVAT: '',\r\n\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }                               \r\n        \r\n\r\n\r\n    })\r\n    const handleAccountName1 = (data) => {\r\n      console.log(data.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n        <>\r\n        <form onSubmit={formik.handleSubmit}>\r\n        <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader>New Invoice</CardHeader>\r\n              <CardBody>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                  <h2 className=\"cart-area-title text-center pt-3\">Purchase Invoice</h2>\r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From</label>\r\n                          <input type=\"text\" name=\"from\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.from} className=\"form-control\"  />\r\n                          {formik.errors.from && formik.touched.from  ? (<div className='error'>{formik.errors.from}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Due Date</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"endDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.endDate} />\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Invoice</label>\r\n                          <input type=\"text\" name=\"invoice\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.invoice} className=\"form-control\"  />\r\n                          {formik.errors.invoice && formik.touched.invoice  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Reference</label>\r\n                          <input type=\"text\" name=\"reference\" onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.reference} className=\"form-control\"  />\r\n                          {formik.errors.reference && formik.touched.reference  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn btn-info text-light\" onClick = {(e) => handleApprovePurchase(e)}>Approve</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n                    <div>\r\n                        <hr />\r\n                        <form>\r\n                        <div className = \"row\">\r\n                        <div className=\"col-md-3\">\r\n                        <div className=\"form-group\">\r\n                          <select name=\"accountType\" placeholder = \"PKR Pakistani Rupee\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.accountType} className=\"form-control\" required>\r\n                            <option value=\"PKR Pakistani Rupee\">PKR Pakistani Rupee</option>\r\n                            <option value=\"Add Currency\">Add Currency</option>\r\n                          </select>\r\n                          {formik.touched.accountType ? (<div className='error'>{formik.errors.accountType}</div>) : null}\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"mt-3\">\r\n                        <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Item</th>\r\n                              <th>Description</th>\r\n                              <th>Account</th>\r\n                              <th>Qty</th>\r\n                              <th>Price Per Unit Without Purchase Tax/VAT </th>\r\n                              <th>Price Total Units Without Purchase Tax/VAT</th>\r\n                              <th>Discount %</th>\r\n                              <th>Discount in Value</th>\r\n                              <th>Price Total Units Without Purchase Tax/VAT After Discount</th>\r\n                              <th>Purchase Tax/VAT</th>\r\n                              <th>Purchase Tax/VAT in Value</th>\r\n                              <th>Purchase Price After Discount and Inclusive of Purchase Tax/VAT</th>\r\n                              <th>Action</th>\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" />\r\n                            {formik.touched.item ? (<div className='error'>{formik.errors.item}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" value = {valueForDescription1} onInput={(event) => Description1(event)}/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                             \r\n                            { items != null ?\r\n                            <select name=\"name\" id = \"account1\" className=\"form-control\" onBlur = {(e) => handleAccountName1(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option value = {contents._id}>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n                            </select>\r\n                            }\r\n                      \r\n                            </td>\r\n                            <td>\r\n                            <input  type=\"text\" className = \"form-control\" name=\"qty\" value = {valueForQTY1} onInput={(event) => handleValueOnChange1(event)} onBlur = {(e) => sumOfValues(e)}  />\r\n                            {formik.touched.qty ? (<div className='error'>{formik.errors.qty}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            <input className=\"form-control\" type=\"text\" name=\"unitPrice\" value = {valueForPricePerUnitWithoutPurchaseTaxVAT1} onInput={(event) => PricePerUnitWithoutPurchaseTaxVAT1(event)} />\r\n                            {formik.touched.unitPrice ? (<div className='error'>{formik.errors.unitPrice}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p id=\"priceForTotalUnitsID1\"></p>\r\n                            </td>\r\n                            {/*}\r\n                            <td>\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            <td>\r\n                              {tax == null ?\r\n                              <tr>\r\n\r\n                              </tr> :\r\n                              <tr>\r\n                                {tax}\r\n                              </tr>\r\n                              }\r\n                            </td>\r\n                            </td>\r\n                            */}\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"discPercentage\" value = {valueForDiscount1} onInput={(event) => Discount1(event)} />\r\n                            {formik.touched.discPercentage ? (<div className='error'>{formik.errors.discPercentage}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p id=\"descperc1\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"withDisc1\"></p>\r\n                            </td>\r\n                            <td>\r\n                            {\r\n                            taxRates != null ?   \r\n                            <select name=\"taxRate\" id = \"taxRate1\" className=\"form-control\" onBlur={e => handleChangeTaxRate(e)}>\r\n                              {\r\n                                  taxRates.map(contents => (\r\n                              <option>{contents.taxRateName}</option>\r\n                                ))}\r\n                                  \r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            \r\n                            <td>\r\n                            <p id=\"purchaseTaxVat1\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"TotalUnitsWithDiscountMergePurchaseTaxVatVal1\"></p>\r\n                            </td>\r\n                            {/*}\r\n                            <td>\r\n                             <button className = \"btn btn-warning\" onClick = {(e) => handleOnClickPurchaseSalesTaxVatValue(e)}>Save</button>\r\n                            </td>\r\n                            */}\r\n                            </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" />\r\n                            {formik.touched.item ? (<div className='error'>{formik.errors.item}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n      \r\n                            <input className=\"form-control\" type=\"text\" value = {valueForDescription2} onInput={(event) => Description2(event)}/>\r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" id = \"account2\" className=\"form-control\" >\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input  type=\"text\" className = \"form-control\" name=\"qty\" value = {valueForQTY2} onInput={handleValueOnChange2} onInput={(event) => handleValueOnChange2(event)} onBlur = {(e) => sumOfValues(e)}    />\r\n                            {formik.touched.qty ? (<div className='error'>{formik.errors.qty}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"unitPrice\" value = {valueForPricePerUnitWithoutPurchaseTaxVAT2} onInput={(event) => PricePerUnitWithoutPurchaseTaxVAT2(event)} />\r\n                            {formik.touched.unitPrice ? (<div className='error'>{formik.errors.unitPrice}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p  id=\"priceForTotalUnitsID2\"></p>\r\n                            </td>\r\n                            {/*}\r\n                            <td>\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            <td>\r\n                              {tax == null ?\r\n                              <tr>\r\n\r\n                              </tr> :\r\n                              <tr>\r\n                                {tax}\r\n                              </tr>\r\n                              }\r\n                            </td>\r\n                            </td>\r\n                            */}\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"discPercentage\" value = {valueForDiscount2} onInput={(event) => Discount2(event)}/>\r\n                            {formik.touched.discPercentage ? (<div className='error'>{formik.errors.discPercentage}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p id=\"descperc2\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"withDisc2\"></p>\r\n                            </td>\r\n                            <td>\r\n                            \r\n                            {\r\n                            taxRates != null ?   \r\n                            <select name=\"taxRate\" id = \"taxRate2\" className=\"form-control\" onChange={e => handleChangeTaxRate(e)}>\r\n                              {\r\n                                  taxRates.map(contents => (\r\n                              <option>{contents.taxRateName}</option>\r\n                                ))}\r\n                                  \r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n                            </select>\r\n                            }\r\n                    \r\n                            </td>\r\n                            \r\n                            <td>\r\n                            <p id=\"purchaseTaxVat2\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"TotalUnitsWithDiscountMergePurchaseTaxVatVal2\"></p>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" />\r\n                            {formik.touched.item ? (<div className='error'>{formik.errors.item}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\"  value = {valueForDescription3} onInput={(event) => Description3(event)}/>\r\n                            {formik.touched.description ? (<div className='error'>{formik.errors.description}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            { items != null ?\r\n                            <select name=\"name\" id = \"account3\" className=\"form-control\" >\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            <td>\r\n                            <input  type=\"text\" className = \"form-control\" name=\"qty\" value = {valueForQTY3} onInput={handleValueOnChange3} onInput={(event) => handleValueOnChange3(event)} onBlur = {(e) => sumOfValues(e)}    />\r\n                            {formik.touched.qty ? (<div className='error'>{formik.errors.qty}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"unitPrice\" value = {valueForPricePerUnitWithoutPurchaseTaxVAT3} onInput={(event) => PricePerUnitWithoutPurchaseTaxVAT3(event)} />\r\n                            {formik.touched.unitPrice ? (<div className='error'>{formik.errors.unitPrice}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p  id=\"priceForTotalUnitsID3\"></p>\r\n                            </td>\r\n                            {/*}\r\n                            <td>\r\n                            <select name=\"name\" className=\"form-control\" onChange={e => handleChange(e)}>\r\n                              {\r\n                                  items.map(contents => (\r\n                              <option>{contents.name}</option>\r\n                                ))}\r\n                            </select>\r\n                            <td>\r\n                              {tax == null ?\r\n                              <tr>\r\n\r\n                              </tr> :\r\n                              <tr>\r\n                                {tax}\r\n                              </tr>\r\n                              }\r\n                            </td>\r\n                            </td>\r\n                            */}\r\n                            <td>\r\n                            <input className=\"form-control\" type=\"text\" name=\"discPercentage\" value = {valueForDiscount3} onInput={(event) => Discount3(event)} />\r\n                            {formik.touched.discPercentage ? (<div className='error'>{formik.errors.discPercentage}</div>) : null}  \r\n                            </td>\r\n                            <td>\r\n                            <p id=\"descperc3\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"withDisc3\"></p>\r\n                            </td>\r\n                            <td>\r\n                            {\r\n                            taxRates != null ?   \r\n                            <select name=\"taxRate\" id = \"taxRate3\" className=\"form-control\" onChange={e => handleChangeTaxRate(e)}>\r\n                              {\r\n                                  taxRates.map(contents => (\r\n                              <option>{contents.taxRateName}</option>\r\n                                ))}\r\n                                  \r\n                            </select>\r\n                            :\r\n                            <select style={{display:\"none\"}}>\r\n                            </select>\r\n                            }\r\n                            </td>\r\n                            \r\n                            <td>\r\n                            <p id=\"purchaseTaxVat3\"></p>\r\n                            </td>\r\n                            <td>\r\n                            <p id=\"TotalUnitsWithDiscountMergePurchaseTaxVatVal3\"></p>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                            <td>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              Total\r\n                            </td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td id=\"quantityTotal\" >\r\n                            </td>\r\n                            <td></td>\r\n                            <td id=\"prcTotalUnits\"  >                              \r\n                            </td>\r\n                            <td></td>\r\n                            <td id=\"dscInValue\" >\r\n                            </td>\r\n                            <td id=\"prcTotalUnitsWithDiscount\"   >\r\n                            </td>\r\n                            <td></td>\r\n                            <td id=\"slsTaxVat\" >\r\n                              \r\n                            </td>\r\n                            <td id=\"slsPriceAfterDiscount\"  >\r\n                            </td>\r\n                            <td></td>\r\n                          </tr>\r\n\r\n                          \r\n                          \r\n                          \r\n                        </tbody>\r\n                        <button>Add a new line</button>\r\n                        <button onClick={(e) => sumOfValues(e)}>Sum of values</button>\r\n                        <span><p>Sub Total</p></span>\r\n                        <button className=\"btn btn-dark\" onClick={handleSendingAccountValues()}>Save</button>\r\n                        </table>\r\n                        <button className = \"btn btn-danger text-white\" onClick={(e) => handleSendingLedger(e)}>Send Tax Total To Ledger</button>\r\n                        {/*}\r\n                        <p id=\"quantityTotal\"></p>\r\n                        <p id=\"prcTotalUnits\"></p>\r\n                        <p id=\"dscInValue\"></p>\r\n                        <p id=\"prcTotalUnitsWithDiscount\"></p>\r\n                        <p id=\"slsTaxVat\"></p>\r\n                        <p id=\"slsTaxVatValue\"></p>\r\n                        <p id=\"slsPriceAfterDiscount\"></p>\r\n                          */}\r\n                        <div className = \"text-right mt-2\">\r\n                        <p id = \"subtotal\">\r\n                            Subtotal\r\n                        </p>\r\n                        <p id = \"subtotalTax\">\r\n                            Tax\r\n                        </p>\r\n                        <h3>\r\n                            Total = <span id = \"totalOverall\"></span>\r\n                        </h3>\r\n                        <hr />\r\n                 {/*}\r\n                        <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader></CardHeader>\r\n              <CardBody>\r\n                    <div className=\"mt-3\">\r\n                        <table className=\"table table-striped mt-3 text-center\">\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Date Paid</th>\r\n                              <th>Account Paid</th>\r\n                              <th>Reference ID</th>\r\n                              <th>Paid Amount</th>\r\n                              <th>Amount Due</th>\r\n                              \r\n                            </tr>\r\n                        </thead>\r\n                        \r\n                        { accountValues != null ?  \r\n                        <tbody>\r\n                            \r\n                            {\r\n                            accountValues.map(accounts => (\r\n                                <tr key={accounts._id}>\r\n                                <td>\r\n                                    {accounts.datePaid}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.paidTo}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.referencePaid}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.amountPaidAmountValue}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.amountDuePaid}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                            </tbody>\r\n                            :\r\n                            <tbody>\r\n                            <tr>\r\n                              <td></td>\r\n                            </tr>\r\n                            </tbody>\r\n                            }\r\n                          \r\n                        </table>\r\n                    </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n                          */} \r\n                       {/*}\r\n                        <h3>\r\n                            Amount Paid = <span id = \"totalPaid\"></span>\r\n                        </h3>\r\n                        <span>Paid On = <span id = \"totalDate\"></span></span>\r\n                        <hr />\r\n                        <h3>\r\n                            Amount Due = <span id = \"totalDue\"></span>\r\n                        </h3>\r\n                          */}\r\n                          \r\n                        </div>\r\n                        <div>\r\n                            <button className = \"btn btn-primary\" onClick = {(e) => handleSave(e)}>\r\n                                Save\r\n                            </button>\r\n                            {/*}\r\n                            <button type=\"submit\" className = \"btn btn-success\" onClick = {(e) => handleChange(e)} >\r\n                                Approve\r\n                            </button>\r\n                            */}\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \r\n                            \r\n                            <button className = \"btn btn-primary\" >\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                    {/*}\r\n                    <div>\r\n                    \r\n                    <Row>\r\n                    <Col md=\"12\">\r\n                      \r\n                        <Card className=\"card-plain\">\r\n                          <CardHeader>Receive A Payment</CardHeader>\r\n                          <CardBody>\r\n                          {Number(accountValues[accountValues.length - 1].amountDuePaid != 0) ? \r\n                          <div className=\"row\">\r\n                          <div className=\"col-md-2\">\r\n                \r\n                           <div className=\"form-group\">\r\n                           <label htmlFor>Amount Paid</label>\r\n                           <input type=\"text\" name=\"paidTo\"  className=\"form-control\" id=\"amountPaidWith\" />\r\n                           {formik.errors.from && formik.touched.from  ? (<div className='error'>{formik.errors.from}</div>) : null}\r\n                           </div>\r\n                         </div>\r\n                         <div className=\"col-md-2\">\r\n                           <div className=\"form-group\">\r\n                           <label htmlFor>Date Paid</label>\r\n                           <input className=\"form-control\" type=\"date\" name=\"startDate\" id = \"amountPaidOnDate\"  />\r\n                           {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                           </div>\r\n                         </div>\r\n                         <div className=\"col-md-2\">\r\n                         <div className=\"form-group\">\r\n                         <label htmlFor>Paid To</label>\r\n                         <select name=\"accountPaid\" className=\"form-control\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.accountPaid}>\r\n                         {\r\n                             items.map(contents => (\r\n                         <option>{contents.name}</option>\r\n                           ))}\r\n                         </select>\r\n                         {formik.touched.accountPaid ? (<div className='error'>{formik.errors.accountPaid}</div>) : null}\r\n                         </div>\r\n                         </div>\r\n                         <div className=\"col-md-2\">\r\n                           <div className=\"form-group\">\r\n                           <label htmlFor>Reference</label>\r\n                           <input type=\"text\" name=\"reference\" id = \"referenceFor\" className=\"form-control\"  />\r\n                           {formik.errors.reference && formik.touched.reference  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                           </div>\r\n                         </div>\r\n                         <div  className=\"col-md-2\">\r\n                         <div className=\"form-group\">\r\n                         <button className = 'btn btn-dark' onClick = {(e) => handleAmountSend(e)}>Send Amount</button>\r\n                        </div>\r\n                        </div>\r\n                        <div  className=\"col-md-2\">\r\n                         <div className=\"form-group\">\r\n                         <button className = 'btn btn-success' onClick = {(e) => handleAmountPaidWith(e)}>Pay Amount</button>\r\n                        </div>\r\n                        </div>              \r\n                        </div> \r\n                         :\r\n                       <div className=\"row\">\r\n                         <centre>All Dues Cleared</centre>           \r\n                       </div> \r\n                          } \r\n                        </CardBody>\r\n                        </Card>\r\n                        \r\n                        </Col>\r\n                        </Row>\r\n                      </div>\r\n                        */}\r\n                      <hr />       \r\n        </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoice\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllPurchaseInvoiceAccountsValuesController } from '../../../Apis/ApiForPurchaseInvoice';\r\n\r\nfunction PurchaseInvoiceDetail() {\r\n\r\n    const [items, setItems] = useState()\r\n\r\n    useEffect(() => {\r\n        const fetchPurchase = async () => {\r\n            const contents = await getAllPurchaseInvoiceAccountsValuesController()\r\n            setItems(contents)\r\n        }\r\n        fetchPurchase()\r\n    }, []);\r\n\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        const dateStartDateFunction = (data) => {\r\n            const options = {\r\n             \r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric'\r\n            };\r\n            \r\n            var d = new Date(data);\r\n            var n = d.toLocaleDateString('en-EN', options);\r\n            \r\n            return(\r\n              <td>\r\n                {n}\r\n              </td>\r\n            )\r\n          }\r\n          const dateEndDateFunction = (data) => {\r\n            const options = {\r\n             \r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric'\r\n            };\r\n            \r\n            var d = new Date(data);\r\n            var n = d.toLocaleDateString('en-EN', options);\r\n            \r\n            return(\r\n              <td>\r\n                {n}\r\n              </td>\r\n            )\r\n          }\r\n        return(\r\n            <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3\" >\r\n                        <thead>\r\n                            <tr>\r\n                             <th>Ref</th>\r\n                             <th>From</th>\r\n                             <th>Date</th>\r\n                             <th>Due Date</th>\r\n                             <th>Planned Date</th>\r\n                             <th>Paid</th>\r\n                             <th>Due</th>\r\n                            </tr>\r\n                            \r\n                        </thead>  \r\n                        <tbody>\r\n                            {items != null ? \r\n                            items.map(contents => (\r\n                                <tr key = {contents._id}>\r\n                                    <td>\r\n                                        {contents.reference}\r\n                                    </td>\r\n                                    <td>\r\n                                        {contents.from}\r\n                                    </td>\r\n                                    {dateStartDateFunction(contents.startDate)}\r\n                                    {dateEndDateFunction(contents.endDate)}\r\n                                    <td>\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        0.00\r\n                                    </td>\r\n                                    <td>\r\n                                        0.00\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        :\r\n                        <tr></tr>\r\n                        }\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h4>Purchase overview</h4></CardHeader>\r\n              <CardBody>\r\n                  <h3>Bills</h3>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n               \r\n                <div className=\"login-registration-field\">\r\n                    \r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                        <button className = \"btn btn-primary\">\r\n                            New Bill\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                        <button className = \"btn btn-primary\">\r\n                            New Credit Note\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col-md-2 \">\r\n                        <button className = \"btn btn-primary\">\r\n                            Import\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                        <button className = \"btn btn-primary\">\r\n                            Export\r\n                        </button>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn btn-primary\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      \r\n                    </div>\r\n                   \r\n                </div>\r\n              \r\n            </div>\r\n            \r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"pt-2\">\r\n                    <ul className=\"nav nav-tabs\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\" href=\"#\">All</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\" href=\"#\">Draft</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\"  href=\"#\">Awaiting Approval</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link active text-dark\" aria-current=\"page\" href=\"#\">Awaiting Payment</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\"  href=\"#\">Paid</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link text-dark\"  href=\"#\">Repeating</a>\r\n                    </li>\r\n                    </ul>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseInvoiceDetail\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getPurchaseInvoices } from '../../Apis/ApiForPurchaseInvoice';\r\nimport { getSalesInvoices } from '../../Apis/ApiForSalesInvoice';\r\nimport { getDirectCostsInvoices } from '../../Apis/ApiForPurchaseInvoice';\r\nimport { getInterests } from '../../Apis/ApiForInterest';\r\n//import { getAgedPayableReferences } from '../Apis/ApiForAgedPayableReference';\r\n\r\nfunction ProfitAndLoss() {\r\n    const location = useLocation();\r\n    const editorRef = useRef(null);\r\n    const history = useHistory()\r\n    const [items, setItems] = useState([])\r\n    const [sales, setSales] = useState()\r\n    const [expenses, setExpenses] = useState([])\r\n    const [purchaseValues, setPurchaseValues] = useState([])\r\n    const [salesValues, setSalesValues] = useState([])\r\n    const [directCosts, setDirectCosts] = useState([])\r\n    const [interestValues, setInterestValues] = useState([])\r\n    const [amortizationValues, setAmortizationValues] = useState([])\r\n    const [depreciationValues, setDepreciationValues] = useState([])\r\n    const [totalPurchase, setTotalPurchase] = useState()\r\n    const [totalSales, setTotalSales] = useState()\r\n    const [totalDirectCosts, setTotalDirectCosts] = useState()\r\n    const [totalInterest, setTotalInterest] = useState()\r\n    const [totalAmortization, setTotalAmortization] = useState()\r\n    const [totalDepreciation, setTotalDepreciation] = useState()\r\n    const [totalDA, setTotalDA] = useState()\r\n    const [grossProfit, setGrossProfit] = useState()\r\n    const [ebitda, setEbitda] = useState()\r\n    const [taxRates, setTaxRates] = useState()\r\n   \r\n    \r\n\r\n   \r\n    useEffect(() => {\r\n      const fetchPurchase = async () => {\r\n        const contents = await getPurchaseInvoices()\r\n        setPurchaseValues(contents);\r\n      }\r\n      const fetchSales = async () => {\r\n        const contents = await getSalesInvoices()\r\n        setSalesValues(contents);\r\n      }\r\n      const fetchDirectCosts = async () => {\r\n        const contents = await getDirectCostsInvoices()\r\n        setDirectCosts(contents);\r\n      }\r\n      const fetchInterest = async () => {\r\n        const contents = await getInterests()\r\n        setInterestValues(contents);\r\n      }\r\n      fetchPurchase()\r\n      fetchSales()\r\n      fetchDirectCosts()\r\n      fetchInterest()\r\n    }, []);\r\n\r\n    var count = 0\r\n    const timerId = setTimeout(() => {\r\n      sumOfValues()\r\n      }, 4000);\r\n      const gettingDate = () => {\r\n        console.log(\"test\")\r\n          const options = {\r\n           \r\n            year: 'numeric',\r\n            month: 'long',\r\n            \r\n          };\r\n          const options2 = {\r\n           \r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric'\r\n          };\r\n          var d = new Date();\r\n          var n = d.toLocaleDateString('en-EN', options);\r\n          //setCurrentDate(n)\r\n          var newD = new Date();\r\n          newD.toLocaleDateString('en-EN', options);\r\n          var pastYear = newD.getFullYear() -1;\r\n          newD.setFullYear(pastYear);\r\n          console.log(pastYear);\r\n          var newMonth = new Date();\r\n          var prevMonth1 = newMonth.getMonth() -1\r\n          var prevYear = newMonth.getFullYear()\r\n          var prevDay = newMonth.getDay()\r\n          var prevMonth2 = newMonth.getMonth() -2\r\n          var prevYear2 = newMonth.getFullYear()\r\n          var prevDay2 = newMonth.getDay()\r\n          var prevMonth3 = newMonth.getMonth() -3\r\n          var prevYear3 = newMonth.getFullYear()\r\n          var prevDay3 = newMonth.getDay()\r\n          var finalDatePrevMonth = new Date(prevYear, prevMonth1, prevDay)\r\n          var finalDatePrevMonth2 = new Date(prevYear2, prevMonth2, prevDay2)\r\n          var finalDatePrevMonth3 = new Date(prevYear3, prevMonth3, prevDay3)\r\n          var finalDatePrevMonthString = finalDatePrevMonth.toLocaleDateString('en-EN', options2);\r\n          var finalDatePrevMonthString2 = finalDatePrevMonth2.toLocaleDateString('en-EN', options2);\r\n          var finalDatePrevMonthString3 = finalDatePrevMonth3.toLocaleDateString('en-EN', options2);\r\n          console.log(prevYear,prevMonth1,prevDay)\r\n          {/*}\r\n          var prevMonth2 =\r\n          var prevMonth3 =\r\n        */}\r\n          //x.setMonth(x.getMonth()-1)\r\n          return(\r\n            <div>\r\n              <div>\r\n                 <p style={{textAlign: 'right'}}>{n}</p>\r\n                 &nbsp;\r\n                 {finalDatePrevMonthString}\r\n                 &nbsp;\r\n                 {finalDatePrevMonthString2}\r\n                 &nbsp;\r\n                 {finalDatePrevMonthString3}\r\n                 &nbsp;\r\n              </div>\r\n            </div>\r\n          )\r\n       \r\n      }\r\n    const sumOfValues = () => {\r\n        var arrForTotalSales = [];\r\n        var arrForTotalPurchase = [];\r\n        var arrForTotalDirectCosts = []\r\n        var arrForTotalInterest = []\r\n        var arrForTotalDepreciation = []\r\n        var arrForTotalAmortization = []\r\n        var totForPurchase = 0;\r\n        var totForSales = 0;\r\n        var totForDirectCosts = 0;\r\n        var totForInterest = 0;\r\n        var totForAmortization = 0;\r\n        var totForDepreciation = 0;\r\n        var arrForExpense = []\r\n        console.log(salesValues)\r\n        for(var i=0;i<purchaseValues.length;i++){\r\n            arrForTotalPurchase.push(purchaseValues[i].total)\r\n        }\r\n        for(var i=0;i<salesValues.length;i++){\r\n          arrForTotalSales.push(salesValues[i].total)\r\n        }\r\n        for(var i=0;i<directCosts.length;i++){\r\n          arrForTotalDirectCosts.push(directCosts[i].total)\r\n        }\r\n        for(var i=0;i<interestValues.length;i++){\r\n          arrForTotalInterest.push(interestValues[i].total)\r\n        }\r\n        for(var i=0;i<purchaseValues.length;i++){\r\n            totForPurchase +=  parseInt(arrForTotalPurchase[i]);\r\n        }\r\n        for(var i=0;i<salesValues.length;i++){\r\n          totForSales +=  parseInt(arrForTotalSales[i]);\r\n        }\r\n        for(var i=0;i<directCosts.length;i++){\r\n          totForDirectCosts +=  parseInt(arrForTotalDirectCosts[i]);\r\n        }\r\n        for(var i=0;i<interestValues.length;i++){\r\n          totForInterest +=  parseInt(arrForTotalInterest[i]);\r\n        }\r\n        for(var i=0;i<amortizationValues.length;i++){\r\n          totForAmortization +=  parseInt(arrForTotalAmortization[i]);\r\n        }\r\n        for(var i=0;i<depreciationValues.length;i++){\r\n          totForDepreciation +=  parseInt(arrForTotalDepreciation[i]);\r\n        }\r\n        //document.getElementById(\"totalSales\").innerHTML = totForPurchase;\r\n        setTotalPurchase(totForPurchase)\r\n        setTotalSales(totForSales)\r\n        setTotalDirectCosts(totForDirectCosts)\r\n        setTotalInterest(totForInterest)\r\n        setTotalAmortization(totForAmortization)\r\n        setTotalDepreciation(totForDepreciation)\r\n        setTotalDA(totForAmortization + totForDepreciation )\r\n        setGrossProfit(totForSales - totForDirectCosts)\r\n        var totForGrossProfit = grossProfit\r\n        console.log(grossProfit)\r\n        setEbitda(totForGrossProfit - totForPurchase)\r\n\r\n    }\r\n    const onSubmit = async (data) => {\r\n        console.log(data)\r\n        \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n        {/*<button onClick={(e) =>  sumOfValues(e)}>Trial</button>*/}\r\n        \r\n        <div className=\"content mt-4\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card className=\"card-plain\">\r\n                <CardHeader>Reports</CardHeader>\r\n                <CardBody>\r\n                    \r\n             <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                  <h2 className=\"cart-area-title pt-3\">Profit and Loss</h2>\r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                    <form>\r\n                      <div className=\"row\">\r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date Range</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                        <div className=\"form-group\">\r\n                          <label htmlFor>This month</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                    \r\n                     </div>  \r\n                      <hr />\r\n                      </form>\r\n   \r\n                      <div className=\"row2-container\">\r\n                      <div className=\"box green\">\r\n                      <div>\r\n                      <div>\r\n                        {gettingDate()}\r\n                          <hr />\r\n                          <h2 style = {{textAlign: \"left\"}}><b>Trading Income</b></h2>\r\n                          <hr />\r\n                      </div>\r\n                      <div>\r\n                      <table>\r\n                        <tbody>\r\n                            {\r\n                            salesValues.map(salesValues => (\r\n                                <tr key={salesValues._id}>\r\n                                <td align =\"left\">\r\n                                    {salesValues.accountName}\r\n                                </td>\r\n                                <td align =\"left\">\r\n                                    {salesValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                          <hr />  \r\n                        <p style = {{textAlign: \"left\"}}>Total Sales {totalSales}</p>    \r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"row2-container\">\r\n                      <div className=\"box green\">\r\n                      <div>\r\n                      <div>\r\n                          <h2 style = {{textAlign: \"left\"}}><b>Cost of Sales</b></h2>\r\n                          <hr />\r\n                        <table>\r\n                        <tbody>\r\n                            {\r\n                            directCosts.map(directCosts => (\r\n                                <tr key={directCosts._id}>\r\n                                <td align =\"left\">\r\n                                    {directCosts.accountName}\r\n                                </td>\r\n                                <td align =\"left\">\r\n                                    {directCosts.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table> \r\n                        <hr />   \r\n                          <p style = {{textAlign: \"left\"}}><b>Total Cost of Sales</b> {totalDirectCosts}</p>\r\n                          <hr />                         \r\n                          <p style = {{textAlign: \"left\"}}><b>Gross Profit</b> {grossProfit}</p>                         \r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row2-container\">\r\n                      <div className=\"box green\">\r\n                      <div>\r\n                      <div>\r\n                          <hr />\r\n                          <h2 style = {{textAlign: \"left\"}}><b>Operating Expenses</b></h2>\r\n                          <hr />\r\n                      </div>\r\n                      <div>\r\n                      <table>\r\n                        <tbody>\r\n                            {\r\n                            purchaseValues.map(purchaseValues => (\r\n                                <tr key={purchaseValues._id}>\r\n                                <td align =\"left\">\r\n                                    {purchaseValues.accountName}\r\n                                </td>\r\n                                <td align =\"left\">\r\n                                    {purchaseValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                        <hr />\r\n                        <p style = {{textAlign: \"left\"}}><b>Total Operating Expenses</b> {totalPurchase}</p>   \r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    \r\n\r\n                    <div className=\"row2-container\">\r\n                      <div className=\"box green\">\r\n                      <div>\r\n                      <div>\r\n                          <hr />\r\n                          <h2 style = {{textAlign: \"left\"}}><b>EBITDA</b></h2>\r\n                          <hr />\r\n                      </div>\r\n                      <div>\r\n                      <table>\r\n                        <tbody>\r\n                           \r\n                        </tbody>\r\n                        </table>\r\n                        <hr />\r\n                        <div>\r\n                          <p style = {{textAlign: \"left\"}}><b>EBITDA</b> {ebitda}</p>\r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                      \r\n\r\n                    <div className=\"row2-container\">\r\n                      <div className=\"box green\">\r\n                      <div>\r\n                      <div>\r\n                          <hr />\r\n                          <h2 style = {{textAlign: \"left\"}}><b>Interest</b></h2>\r\n                          <hr />\r\n                      </div>\r\n                      <div>\r\n                      <table>\r\n                        <tbody>\r\n                            {\r\n                            interestValues.map(interestValues => (\r\n                                <tr key={interestValues._id}>\r\n                                <td align =\"left\">\r\n                                    {interestValues.accountName}\r\n                                </td>\r\n                                <td align =\"left\">\r\n                                    {interestValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                        <hr />\r\n                        <p style = {{textAlign: \"left\"}}><b>Total Interest</b> {totalInterest}</p>   \r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n           \r\n\r\n                    <div className=\"row2-container\">\r\n                      <div className=\"box green\">\r\n                      <div>\r\n                      <div>\r\n                          <hr />\r\n                          <h2 style = {{textAlign: \"left\"}}><b>D & A</b></h2>\r\n                          <hr />\r\n                      </div>\r\n                      <p style = {{textAlign: \"left\"}}><b>Depreciation</b></p>   \r\n                      <div>\r\n                      <table>\r\n                        <tbody>\r\n                            {\r\n                            depreciationValues.map(depreciationValues => (\r\n                                <tr key={depreciationValues._id}>\r\n                                <td align =\"left\">\r\n                                    {depreciationValues.accountName}\r\n                                </td>\r\n                                <td align =\"left\">\r\n                                    {depreciationValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                      \r\n                      </div>\r\n                      <p style = {{textAlign: \"left\"}}><b>Amortization</b></p>   \r\n                      <div>\r\n                      <table>\r\n                        <tbody>\r\n                            {\r\n                            amortizationValues.map(amortizationValues => (\r\n                                <tr key={amortizationValues._id}>\r\n                                <td align =\"left\">\r\n                                    {amortizationValues.accountName}\r\n                                </td>\r\n                                <td align =\"left\">\r\n                                    {amortizationValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                        \r\n                        <hr />\r\n                        <p style = {{textAlign: \"left\"}}><b>Total Depreciation</b> {totalDepreciation}</p>   \r\n                        <p style = {{textAlign: \"left\"}}><b>Total Amortization</b> {totalAmortization}</p>   \r\n                      </div>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                  \r\n                      <div>\r\n                          <p style = {{textAlign: \"left\"}}><b>EBITDA 1</b></p>\r\n                      </div>\r\n                      <div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>     \r\n       \r\n    )\r\n}\r\n\r\nexport default ProfitAndLoss\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getPurchaseInvoices } from '../../Apis/ApiForPurchaseInvoice';\r\nimport { getSalesInvoices } from '../../Apis/ApiForSalesInvoice';\r\nimport { getCurrentAssetsInvoices } from '../../Apis/ApiForPurchaseInvoice';\r\nimport { getNonCurrentAssetsInvoices } from '../../Apis/ApiForPurchaseInvoice';\r\nimport { getFixedAssetsInvoices } from '../../Apis/ApiForPurchaseInvoice';\r\nimport { getCurrentLiabilityInvoices } from '../../Apis/ApiForSalesInvoice';\r\nimport { getNonCurrentLiabilityInvoices } from '../../Apis/ApiForSalesInvoice';\r\nimport { getEquityInvoices } from '../../Apis/ApiForSalesInvoice';\r\n//import { getAgedPayableReferences } from '../Apis/ApiForAgedPayableReference';\r\n\r\nfunction BalanceSheet() {\r\n\r\n    const location = useLocation();\r\n    const editorRef = useRef(null);\r\n    const history = useHistory()\r\n    const [items, setItems] = useState([])\r\n    const [sales, setSales] = useState()\r\n    const [purchaseValues, setPurchaseValues] = useState([])\r\n    const [salesValues, setSalesValues] = useState([])\r\n    const [currentAssetValues, setcurrentAssetValues] = useState([])\r\n    const [nonCurrentAssetValues, setNonCurrentAssetValues] = useState([])\r\n    const [fixedAssetValues, setFixedAssetValues] = useState([])\r\n    const [currentLiabilityValues, setCurrentLiabilityValues] = useState([])\r\n    const [nonCurrentLiabilityValues, setNonCurrentLiabilityValues] = useState([])\r\n    const [equityValues, setEquityValues] = useState([])\r\n    const [totalPurchase, setTotalPurchase] = useState()\r\n    const [totalSales, setTotalSales] = useState()\r\n    const [totalCurrentAssetValues, setTotalCurrentAssetValues] = useState()\r\n    const [totalNonCurrentAssetValues, setTotalNonCurrentAssetValues] = useState()\r\n    const [totalFixedAssetValues, setTotalFixedAssetValues] = useState()\r\n    const [totalOfAllAssetsValues, setTotalOfAllAssetsValues] = useState()\r\n    const [totalCurrentLiabilityValues, setTotalCurrentLiabilityValues] = useState()\r\n    const [totalNonCurrentLiabilityValues, setTotalNonCurrentLiabilityValues] = useState()\r\n    const [totalOfAllLiabilityValues, setTotalOfAllLiabilityValues] = useState()\r\n    const [totalEquityValues, setTotalEquityValues] = useState()\r\n    const [grossProfit, setGrossProfit] = useState()\r\n    const [taxRates, setTaxRates] = useState()\r\n    const [currentDatre, setCurrentDate] = useState('')\r\n\r\n   \r\n    useEffect(() => {\r\n      const fetchPurchase = async () => {\r\n        const contents = await getPurchaseInvoices()\r\n        setPurchaseValues(contents);\r\n      }\r\n      const fetchSales = async () => {\r\n        const contents = await getSalesInvoices()\r\n        setSalesValues(contents);\r\n      }\r\n      const fetchCurrentAssets = async () => {\r\n        const contents = await getCurrentAssetsInvoices()\r\n        setcurrentAssetValues(contents);\r\n      }\r\n      const fetchNonCurrentAssets = async () => {\r\n        const contents = await getNonCurrentAssetsInvoices()\r\n        setNonCurrentAssetValues(contents);\r\n      }\r\n      const fetchFixedAssets = async () => {\r\n        const contents = await getFixedAssetsInvoices()\r\n        setFixedAssetValues(contents);\r\n      }\r\n      const fetchCurrentLiability = async () => {\r\n        const contents = await getCurrentLiabilityInvoices()\r\n        setCurrentLiabilityValues(contents);\r\n      }\r\n      const fetchNonCurrentLiability = async () => {\r\n        const contents = await getNonCurrentLiabilityInvoices()\r\n        setNonCurrentLiabilityValues(contents);\r\n      }\r\n      const fetchEquityValues = async () => {\r\n        const contents = await getEquityInvoices()\r\n        setEquityValues(contents);\r\n      }\r\n\r\n      fetchPurchase()\r\n      fetchSales()\r\n      fetchCurrentAssets()\r\n      fetchNonCurrentAssets()\r\n      fetchFixedAssets()\r\n      fetchCurrentLiability()\r\n      fetchNonCurrentLiability()\r\n      fetchEquityValues()\r\n\r\n    }, []);\r\n\r\n    var count = 0\r\n    const timerId = setTimeout(() => {\r\n        sumOfValues()\r\n      }, 2000);\r\n\r\n    const sumOfValues = () => {\r\n        var arrForTotalSales = [];\r\n        var arrForTotalPurchase = [];\r\n        var arrForTotalFixedAssets = [];\r\n        var arrForTotalCurrentAssets = [];\r\n        var arrForTotalNonCurrentAssets = [];\r\n        var arrForTotalCurrentLiability = [];\r\n        var arrForTotalNonCurrentLiability = [];\r\n        var arrForTotalEquity = [];\r\n        var totForFixedAssets = 0;\r\n        var totForCurrentAssets = 0;\r\n        var totForNonCurrentAssets = 0;\r\n        var totForPurchase = 0;\r\n        var totForSales = 0;\r\n        var totForCurrentLiability = 0;\r\n        var totForNonCurrentLiability = 0;\r\n        var totForEquity = 0;\r\n        \r\n        for(var i=0;i<purchaseValues.length;i++){\r\n            arrForTotalPurchase.push(purchaseValues[i].total)\r\n        }\r\n        for(var i=0;i<salesValues.length;i++){\r\n          arrForTotalSales.push(salesValues[i].total)\r\n        }\r\n        for(var i=0;i<currentAssetValues.length;i++){\r\n          arrForTotalCurrentAssets.push(currentAssetValues[i].total)\r\n        }\r\n        for(var i=0;i<nonCurrentAssetValues.length;i++){\r\n          arrForTotalNonCurrentAssets.push(nonCurrentAssetValues[i].total)\r\n        }\r\n        for(var i=0;i<fixedAssetValues.length;i++){\r\n          arrForTotalFixedAssets.push(fixedAssetValues[i].total)\r\n        }\r\n        for(var i=0;i<currentLiabilityValues.length;i++){\r\n          arrForTotalCurrentLiability.push(currentLiabilityValues[i].total)\r\n        }\r\n        for(var i=0;i<nonCurrentLiabilityValues.length;i++){\r\n          arrForTotalNonCurrentLiability.push(nonCurrentLiabilityValues[i].total)\r\n        }\r\n        for(var i=0;i<equityValues.length;i++){\r\n          arrForTotalEquity.push(equityValues[i].total)\r\n        }\r\n        for(var i=0;i<purchaseValues.length;i++){\r\n          totForPurchase +=  parseInt(arrForTotalPurchase[i]);\r\n        }\r\n        for(var i=0;i<salesValues.length;i++){\r\n          totForSales +=  parseInt(arrForTotalSales[i]);\r\n        }\r\n        for(var i=0;i<currentAssetValues.length;i++){\r\n          totForCurrentAssets +=  parseInt(arrForTotalCurrentAssets[i]);\r\n        }\r\n        for(var i=0;i<nonCurrentAssetValues.length;i++){\r\n          totForNonCurrentAssets +=  parseInt(arrForTotalNonCurrentAssets[i]);\r\n        }\r\n        for(var i=0;i<fixedAssetValues.length;i++){\r\n          totForFixedAssets +=  parseInt(arrForTotalFixedAssets[i]);\r\n        }\r\n        for(var i=0;i<currentLiabilityValues.length;i++){\r\n          totForCurrentLiability +=  parseInt(arrForTotalCurrentLiability[i]);\r\n        }\r\n        for(var i=0;i<nonCurrentLiabilityValues.length;i++){\r\n          totForNonCurrentLiability +=  parseInt(arrForTotalNonCurrentLiability[i]);\r\n        }\r\n        for(var i=0;i<equityValues.length;i++){\r\n          totForEquity +=  parseInt(arrForTotalEquity[i]);\r\n        }\r\n        //document.getElementById(\"totalSales\").innerHTML = totForPurchase;\r\n        setTotalPurchase(totForPurchase)\r\n        setTotalSales(totForSales)\r\n        setTotalCurrentAssetValues(totForCurrentAssets)\r\n        setTotalNonCurrentAssetValues(totForNonCurrentAssets)\r\n        setTotalFixedAssetValues(totForFixedAssets)\r\n        setTotalCurrentLiabilityValues(totForCurrentLiability)\r\n        setTotalNonCurrentLiabilityValues(totForNonCurrentLiability)\r\n        setTotalEquityValues(totForEquity)\r\n        setTotalOfAllAssetsValues(totForFixedAssets + totForCurrentAssets + totForNonCurrentAssets)\r\n        setTotalOfAllLiabilityValues(totForCurrentLiability + totForNonCurrentLiability)\r\n        setGrossProfit(totForSales - totForPurchase)\r\n    }\r\n    const onSubmit = async (data) => {\r\n        console.log(data)\r\n        \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const gettingDate = () => {\r\n      console.log(\"test\")\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          \r\n        };\r\n        \r\n        var d = new Date();\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        //setCurrentDate(n)\r\n        var newD = new Date();\r\n        newD.toLocaleDateString('en-EN', options);\r\n        var pastYear = newD.getFullYear() -1;\r\n        newD.setFullYear(pastYear);\r\n        console.log(pastYear);\r\n        \r\n        return(\r\n          <div>\r\n            <div>\r\n               <p style={{textAlign: 'right'}}>{n}</p>\r\n            </div>\r\n          </div>\r\n        )\r\n     \r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <>\r\n        {/*<button onClick={(e) =>  sumOfValues(e)}>Trial</button>*/}\r\n        \r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card className=\"card-plain\">\r\n                <CardHeader>Balance Sheet</CardHeader>\r\n                <CardBody>\r\n                    \r\n             <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                  <h2 className=\"cart-area-title text-center pt-3\"></h2>\r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                    <form>\r\n                      <div className=\"row\">\r\n                     </div>  \r\n                      <hr />\r\n                      </form>\r\n                      <div>\r\n                       {gettingDate()}\r\n                      </div>\r\n                      <div>\r\n                          <hr />\r\n                          <p style = {{textAlign: \"left\", fontSize:\"18px\"}}><b>Assets</b></p>\r\n                          <hr />\r\n                          <p style = {{textAlign: \"left\"}}>Current Assets</p>\r\n                        <table>\r\n                        <tbody>\r\n                            {\r\n                            currentAssetValues.map(currentAssetValues => (\r\n                                <tr key={currentAssetValues._id}>\r\n                                <td>\r\n                                    {currentAssetValues.accountName}\r\n                                </td>\r\n                                <td>\r\n                                    {currentAssetValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                        <hr />\r\n                        <p style = {{textAlign: \"left\",  fontSize:\"18px\"}}><b>Total Current Assets</b> {totalCurrentAssetValues}</p>\r\n                        <hr />\r\n                        <p style = {{textAlign: \"left\"}}>Non Current Assets</p>\r\n                        <table>\r\n                        <tbody>\r\n                            {\r\n                            nonCurrentAssetValues.map(nonCurrentAssetValues => (\r\n                                <tr key={nonCurrentAssetValues._id}>\r\n                                <td>\r\n                                    {nonCurrentAssetValues.accountName}\r\n                                </td>\r\n                                <td>\r\n                                    {nonCurrentAssetValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                        <hr />\r\n                        <p style = {{textAlign: \"left\",  fontSize:\"18px\"}}><b>Total Non Current Assets</b> {totalNonCurrentAssetValues}</p>\r\n                        <hr />\r\n                        <p style = {{textAlign: \"left\"}}>Fixed Assets</p>\r\n                        <table>\r\n                        <tbody>\r\n                            {\r\n                            fixedAssetValues.map(fixedAssetValues => (\r\n                                <tr key={fixedAssetValues._id}>\r\n                                <td>\r\n                                    {fixedAssetValues.accountName}\r\n                                </td>\r\n                                <td>\r\n                                    {fixedAssetValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                        <p style = {{textAlign: \"left\",  fontSize:\"18px\"}}><b>Total Fixed Assets</b> {totalFixedAssetValues}</p>\r\n                        <hr />\r\n                        <p style = {{textAlign: \"left\",  fontSize:\"18px\"}}><b>Total Assets</b> {totalOfAllAssetsValues}</p>\r\n                        <hr />\r\n                      </div>\r\n                      <div>\r\n                          <p style = {{textAlign: \"left\", fontSize:\"18px\"}}><b>Liabilities</b></p>\r\n                          <hr />\r\n                        <p style = {{textAlign: \"left\"}}>Current Liabilities</p>\r\n                        <table>\r\n                        <tbody>\r\n                            {\r\n                            currentLiabilityValues.map(currentLiabilityValues => (\r\n                                <tr key={currentLiabilityValues._id}>\r\n                                <td>\r\n                                    {currentLiabilityValues.accountName}\r\n                                </td>\r\n                                <td>\r\n                                    {currentLiabilityValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                        <p style = {{textAlign: \"left\",  fontSize:\"18px\"}}><b>Total Current Liabilities</b> {totalCurrentLiabilityValues}</p>                         \r\n                      </div>\r\n                      <div>\r\n                      <hr />\r\n                        <p style = {{textAlign: \"left\"}}>Non Current Liabilities</p>\r\n                        <table>\r\n                        <tbody>\r\n                            {\r\n                            nonCurrentLiabilityValues.map(nonCurrentLiabilityValues => (\r\n                                <tr key={nonCurrentLiabilityValues._id}>\r\n                                <td>\r\n                                    {nonCurrentLiabilityValues.accountName}\r\n                                </td>\r\n                                <td>\r\n                                    {nonCurrentLiabilityValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                        <p style = {{textAlign: \"left\",  fontSize:\"18px\"}}><b>Total Non Current Liabilities</b> {totalNonCurrentLiabilityValues}</p>                         \r\n                          <hr />\r\n                          <p style = {{textAlign: \"left\",  fontSize:\"18px\"}}><b>Total Liabilities</b> {totalOfAllLiabilityValues}</p>\r\n                          <hr />\r\n                          <p style = {{textAlign: \"left\", fontSize:\"18px\"}}><b>Equity</b></p>\r\n                          <hr />\r\n                        <table>\r\n                        <tbody>\r\n                            {\r\n                            equityValues.map(equityValues => (\r\n                                <tr key={equityValues._id}>\r\n                                <td>\r\n                                    {equityValues.accountName}\r\n                                </td>\r\n                                <td>\r\n                                    {equityValues.total}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                        </tbody>\r\n                        </table>\r\n                        <hr />\r\n                        <p style = {{textAlign: \"left\",  fontSize:\"18px\"}}><b>Total Equity</b> {totalEquityValues}</p>\r\n                      </div>\r\n                      <div>\r\n                                       \r\n                      </div>\r\n                      <div>\r\n                          <p style = {{textAlign: \"left\"}}>Net Profit</p>\r\n                      </div>\r\n                      <div>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>     \r\n       \r\n    )\r\n}\r\n\r\nexport default BalanceSheet\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\n\r\nfunction ReportMainPage() {\r\n    return (\r\n        <div>\r\n        <section className=\"ftco-section ftco-no-pt bg-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row d-flex no-gutters\">\r\n            <div className=\"col-md-6 pl-md-5 py-md-5\">\r\n                <div className=\"heading-section pt-md-5\">\r\n                \r\n                  <h3 className=\"mb-4\">Sales</h3>\r\n                </div>\r\n                \r\n      <div className=\"card\" style={{width: '18rem'}}>\r\n      \r\n        <ul className=\"list-group list-group-flush\">\r\n          <Link to = \"/aged-recievable-reports-sales\"><li className=\"list-group-item\">Age Sales</li></Link>\r\n          <Link to = \"/aged-recievable-reports-details\"><li className=\"list-group-item\">Age Receivables Detail</li></Link>\r\n          <Link to = \"/aged-recievable-reports-summary\"><li className=\"list-group-item\">Aged Receivables Summary</li></Link>\r\n          <Link to = \"/aged-recievable-reports-customerInvoice\"><li className=\"list-group-item\">Customer Invoice Report</li></Link>\r\n          <Link to = \"/aged-recievable-reports-receivableInvoiceDetail\"><li className=\"list-group-item\">Receivable Invoice Detail</li></Link>\r\n          <Link to = \"/aged-recievable-reports-receivableInvoiceSummary\"><li className=\"list-group-item\">Receivable Invoice Summary</li></Link>\r\n        </ul>\r\n      </div>\r\n              </div>\r\n              <div className=\"col-md-6 pl-md-5 py-md-5\">\r\n                <div className=\"heading-section pl-md-4 pt-md-5\">\r\n      \r\n                  <h3 className=\"mb-4\">Purchases</h3>\r\n                </div>\r\n                \r\n      <div className=\"card\" style={{width: '18rem'}}>\r\n        \r\n        <ul className=\"list-group list-group-flush\">\r\n        <Link to = \"/aged-payable-reports-details\"><li className=\"list-group-item\">Aged Payables Detail</li></Link>\r\n        <Link to = \"/aged-payable-reports-summary\"><li className=\"list-group-item\">Aged Payables Summary</li></Link>\r\n        <Link to = \"/aged-payable-reports-payableDetail\"><li className=\"list-group-item\">Payable Invoice Detail</li></Link>\r\n        <Link to = \"/aged-payable-reports-invoiceSummary\"><li className=\"list-group-item\">Payable Invoice Summary</li></Link>\r\n        <Link to = \"/aged-payable-reports-supplierInvoice\"><li className=\"list-group-item\">Supplier Invoice Report</li></Link>\r\n        </ul>\r\n      </div>\r\n\r\n\r\n      </div>\r\n              <div className=\"col-md-6 pl-md-5 py-md-5\">\r\n                <div className=\"heading-section pl-md-4 pt-md-5\">\r\n      \r\n                  <h3 className=\"mb-4\">Sales Tax</h3>\r\n                </div>\r\n                \r\n      <div className=\"card\" style={{width: '18rem'}}>\r\n        \r\n        <ul className=\"list-group list-group-flush\">\r\n        <Link to = \"/sales-tax-reports\"><li className=\"list-group-item\">Sales Tax Report</li></Link>\r\n        </ul>\r\n      </div>\r\n      \r\n              </div>\r\n              <div className=\"col-md-6 pl-md-5 py-md-5\">\r\n                <div className=\"heading-section md-5\">\r\n                \r\n                  <h3 className=\"mb-4\">Inventory Reports</h3>\r\n                </div>\r\n                \r\n      <div className=\"card\" style={{width: '18rem'}}>\r\n        \r\n        <ul className=\"list-group list-group-flush\">\r\n          <Link to = \"/inventory-details-reports\"><li className=\"list-group-item\">Inventory Item Details</li></Link>\r\n          <Link to = \"/inventory-list-reports\"><li className=\"list-group-item\">Inventory Item  List</li></Link>\r\n          <Link to = \"/inventory-summary-reports\"><li className=\"list-group-item\">Inventory Item Summary</li></Link>\r\n          <Link to = \"/inventory-summary-untracked-reports\"><li className=\"list-group-item\">Inventory Item Summary Untracked</li></Link>\r\n          <Link to = \"/inventory-sales-reports\"><li className=\"list-group-item\">Sales By Items Report</li></Link>\r\n        </ul>\r\n      </div>\r\n      \r\n              </div>\r\n              <div className=\"col-md-6 pl-md-5 py-md-5\">\r\n                <div className=\"heading-section md-5\">\r\n                \r\n                  <h3 className=\"mb-4\">Fixed Assets</h3>\r\n                </div>\r\n                \r\n      <div className=\"card\" style={{width: '18rem'}}>\r\n        \r\n        <ul className=\"list-group list-group-flush\">\r\n          <Link to = \"/fixed-assets-depreciation-schedule\"><li className=\"list-group-item\">Depreciation Schedule</li></Link>\r\n          <Link to = \"/fixed-assets-depreciation-schedule-2\"><li className=\"list-group-item\">Depreciation Schedule</li></Link>\r\n          <Link to = \"/fixed-assets-disporal-schedule\"><li className=\"list-group-item\">Disposal Schedule</li></Link>\r\n          <Link to = \"/fixed-assets-reconciliation\"><li className=\"list-group-item\">Fixed Asset Reconciliation</li></Link>\r\n          <Link to = \"/fixed-assets-reconciliation-2\"><li className=\"list-group-item\">Fixed Asset Reconciliation</li></Link>\r\n        </ul>\r\n      </div>\r\n\r\n      \r\n      \r\n              </div>\r\n              <div className=\"col-md-6 pl-md-5 py-md-5\">\r\n                <div className=\"heading-section md-5\">\r\n                \r\n                  <h3 className=\"mb-4\">Financial</h3>\r\n                </div>\r\n                \r\n      <div className=\"card\" style={{width: '18rem'}}>\r\n        \r\n        <ul className=\"list-group list-group-flush\">\r\n        \r\n        <Link to = \"/balance-sheet\"><li className=\"list-group-item\">Balance Sheet</li></Link>\r\n        <Link to = \"/financial-balance-sheet-report\"><li className=\"list-group-item\">Balance Sheet</li></Link>\r\n        <Link to = \"/financial-budget-manager-report\"><li className=\"list-group-item\">Budget Manager</li></Link>\r\n        <Link to = \"/financial-budget-summary-report\"><li className=\"list-group-item\">Budget Summary</li></Link>\r\n        <Link to = \"/financial-budget-variance-report\"><li className=\"list-group-item\">Budget Variance</li></Link>\r\n        <Link to = \"/financial-business-perfomance-report\"><li className=\"list-group-item\">Business Perfomance</li></Link>\r\n        <Link to = \"/financial-cash-summary-report\"><li className=\"list-group-item\">Cash Summary</li></Link>\r\n        <Link to = \"/financial-executive-summary-report\"><li className=\"list-group-item\">Executive Summary</li></Link>\r\n        <Link to = \"/financial-movements-in-equity-report\"><li className=\"list-group-item\">Movements in Equity</li></Link>\r\n        <Link to = \"/financial-movements-in-equity-report-2\"><li className=\"list-group-item\">Movements in Equity</li></Link>\r\n        <Link to = \"/profit-loss\"><li className=\"list-group-item\">Profit and Loss</li></Link>\r\n        <Link to = \"/financial-profit-loss-report\"><li className=\"list-group-item\">Profit and Loss</li></Link>\r\n        <Link to = \"/financial-statement-cash-flows-report\"><li className=\"list-group-item\">Statement of Cash Flows - Direct Method</li></Link>\r\n        <Link to = \"/financial-tracking-summary-report\"><li className=\"list-group-item\">Tracking Summary</li></Link>\r\n\r\n        \r\n        </ul>\r\n      </div>\r\n\r\n      \r\n      \r\n              </div>\r\n\r\n              <div className=\"col-md-6 pl-md-5 py-md-5\">\r\n                <div className=\"heading-section md-5\">\r\n                \r\n                  <h3 className=\"mb-4\">Accounting</h3>\r\n                </div>\r\n                \r\n      <div className=\"card\" style={{width: '18rem'}}>\r\n        \r\n        <ul className=\"list-group list-group-flush\">\r\n        \r\n        <Link to = \"/accounting-account-summary-report\"><li className=\"list-group-item\">Account Summary</li></Link>\r\n        <Link to = \"/accounting-account-transactions-report\"><li className=\"list-group-item\">Account Transactions</li></Link>\r\n        <Link to = \"/accounting-account-transactions-report-2\"><li className=\"list-group-item\">Account Transactions</li></Link>\r\n        <Link to = \"/accounting-account-bank-reconciliation-report\"><li className=\"list-group-item\">Bank Reconciliation Summary</li></Link>\r\n        <Link to = \"/accounting-account-bank-summary-report\"><li className=\"list-group-item\">Bank Sumamry</li></Link>\r\n        <Link to = \"/accounting-account-cash-validation-report\"><li className=\"list-group-item\">Cash Validation Customer Report</li></Link>\r\n        <Link to = \"/accounting-account-contact-transaction-report\"><li className=\"list-group-item\">Contact Transactions - Summary</li></Link>\r\n        <Link to = \"/accounting-account-detailed-account-transaction-report\"><li className=\"list-group-item\">Detailed Account Transactions</li></Link>\r\n        <Link to = \"/accounting-account-duplicate-statement-report\"><li className=\"list-group-item\">Duplicate Statement Lines</li></Link>\r\n        <Link to = \"/accounting-account-foreign-currency-gains-report\"><li className=\"list-group-item\">Foreign Currency Gains And Losses</li></Link>\r\n        <Link to = \"/accounting-account-general-ledger-report\"><li className=\"list-group-item\">General Ledger</li></Link>\r\n        <Link to = \"/accounting-account-income-expenses-report\"><li className=\"list-group-item\">Income And Expenses By Contact</li></Link>\r\n        <Link to = \"/accounting-account-journal-report\"><li className=\"list-group-item\">Journal Report</li></Link>\r\n        <Link to = \"/accounting-account-trial-balance-report\"><li className=\"list-group-item\">Trial Balance</li></Link>\r\n        <Link to = \"/accounting-account-trial-balance-report-2\"><li className=\"list-group-item\">Trial Balance</li></Link>\r\n        \r\n        </ul>\r\n      </div>\r\n\r\n      \r\n      \r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportMainPage\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction AgedReceivableViewLink() {\r\n\r\n    const location = useLocation();\r\n    const editorRef = useRef(null);\r\n    const history = useHistory()\r\n\r\n\r\n\r\n   \r\n\r\n      const dateFunction = () => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(location.state.startDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n            <div className=\"col-md-2\">\r\n                <div className=\"form-group\">\r\n                <label htmlFor>Date</label>\r\n                <p className=\"form-control\"  >\r\n                    {n}\r\n                </p>\r\n                </div>\r\n            </div>\r\n        )\r\n      }\r\n\r\n\r\n      const dateDueDateFunction = () => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(location.state.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n            <div className=\"col-md-2\">\r\n            <div className=\"form-group\">\r\n            <label htmlFor>Date</label>\r\n            <p className=\"form-control\"  >\r\n                {n}\r\n            </p>\r\n            </div>\r\n        </div>\r\n        )\r\n      }\r\n\r\n\r\n      const onSubmit = async (data) => {\r\n        console.log(data)\r\n        \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n\r\n      const formik = useFormik({\r\n        initialValues: {\r\n            to: location.state.to,\r\n            from: location.state.from,\r\n            startDate: location.state.startDate,\r\n            dueDate: location.state.dueDate,\r\n            invoice: location.state.invoice,\r\n            reference: location.state.reference,\r\n            item: location.state.item,\r\n            description:location.state.description,\r\n            accountName1:location.state.accountName1,\r\n            accountName2:location.state.accountName2,\r\n            qty: location.state.qty,\r\n            unitPrice: location.state.unitPrice,\r\n\r\n            priceTotalUnitsWithoutSalesTaxVAT:location.state.priceTotalUnitsWithoutSalesTaxVAT,\r\n          \r\n\r\n            discPercentage: location.state.discPercentage,\r\n\r\n            discInDigits:location.state.discInDigits,\r\n            priceTotalUnitsWithoutSalesTaxVATAfterDiscount:location.state.priceTotalUnitsWithoutSalesTaxVATAfterDiscount,\r\n            \r\n            taxRate: location.state.taxRate,\r\n\r\n            salesTaxVATinValue: location.state.salesTaxVATinValue,\r\n            salesPriceAfterDiscountandInclusiveofSalesTaxVAT: location.state.salesPriceAfterDiscountandInclusiveofSalesTaxVAT,\r\n\r\n            amountPkr: location.state.amountPkr,\r\n            name: location.state.name,\r\n            total:location.state.total,\r\n            accountPaid: location.state.accountPaid,\r\n            amountCredit: location.state.amountCredit,\r\n            amountDuePaid:location.state.amountDuePaid,\r\n            amountTotalDebit:location.state.amountTotalDebit,\r\n            transactionType: location.state.transactionType,\r\n            amountPaidAmountValue: location.state.amountPaidAmountValue,\r\n            amountPaid:location.state.amountPaid,\r\n            datePaid:location.state.datePaid,\r\n            paidTo: location.state.paidTo,\r\n            referencePaid: location.state.referencePaid,\r\n            datePurchaseOrSalesTaxVat:location.state.datePurchaseOrSalesTaxVat,\r\n            accountNamePurchaseOrSalesTaxVat:location.state.accountNamePurchaseOrSalesTaxVat,\r\n            valuePurchaseTaxVatDebit:location.state.valuePurchaseTaxVatDebit,\r\n            valueSalesTaxVatCredit:location.state.valueSalesTaxVatCredit,\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n    \r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader>Invoice {location.state.invoice}</CardHeader>\r\n              <CardBody>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                  <h2 className=\"cart-area-title text-center pt-3\">Awaiting Payment</h2>\r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To</label>\r\n                          <p className=\"form-control\"  >\r\n                          {location.state.to}\r\n                          </p>\r\n                          </div>\r\n                        </div>\r\n                       \r\n                          {dateFunction()}\r\n                          {dateDueDateFunction()}\r\n                    \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Invoice #</label>\r\n                          <p className=\"form-control\"  >\r\n                          {location.state.invoice}\r\n                          </p>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div >\r\n                          <label htmlFor>Total</label>\r\n                          <p >\r\n                          {location.state.total}\r\n                          </p>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Item</th>\r\n                              <th>Description</th>\r\n                              <th>Account</th>\r\n                              <th>Qty</th>\r\n                              <th>Price Per Unit Without Sales Tax/VAT </th>\r\n                              <th>Price Total Units Without Sales Tax/VAT</th>\r\n                              <th>Discount %</th>\r\n                              <th>Discount in Value</th>\r\n                              <th>Price Total Units Without Sales Tax/VAT After Discount</th>\r\n                              <th>Sales Tax/VAT</th>\r\n                              <th>Sales Tax/VAT in Value</th>\r\n                              <th>Sales Price After Discount and Inclusive of Sales Tax/VAT</th>\r\n                              {/*}\r\n                              <th>Action</th>\r\n                              */}\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                              <td>\r\n                                  \r\n                              </td>\r\n                              <td>\r\n                                {location.state.description}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.accountName}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.qty}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.unitPrice}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.priceTotalUnitsWithoutSalesTaxVAT}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.discPercentage}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.discInDigits}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.priceTotalUnitsWithoutSalesTaxVATAfterDiscount}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.taxRate}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.salesTaxVATinValue}\r\n                              </td>\r\n                              <td>\r\n                                {location.state.salesPriceAfterDiscountandInclusiveofSalesTaxVAT}\r\n                              </td>\r\n                             \r\n                        </tbody>\r\n                        </table>\r\n                        <div className = \"text-right mt-2\">\r\n                        <p id = \"subtotal\">\r\n                            Subtotal\r\n                        </p>\r\n                        <p id = \"subtotalTax\">\r\n                            Tax\r\n                        </p>\r\n                        <h3>\r\n                            Total = {location.state.total}.00\r\n                        </h3>\r\n                        <hr />\r\n                 {/*}\r\n                        <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader></CardHeader>\r\n              <CardBody>\r\n                    <div className=\"mt-3\">\r\n                        <table className=\"table table-striped mt-3 text-center\">\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Date Paid</th>\r\n                              <th>Account Paid</th>\r\n                              <th>Reference ID</th>\r\n                              <th>Paid Amount</th>\r\n                              <th>Amount Due</th>\r\n                              \r\n                            </tr>\r\n                        </thead>\r\n                        \r\n                        { accountValues != null ?  \r\n                        <tbody>\r\n                            \r\n                            {\r\n                            accountValues.map(accounts => (\r\n                                <tr key={accounts._id}>\r\n                                <td>\r\n                                    {accounts.datePaid}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.paidTo}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.referencePaid}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.amountPaidAmountValue}\r\n                                </td>\r\n                                <td>\r\n                                    {accounts.amountDuePaid}\r\n                                </td>\r\n                                </tr>\r\n                            ))\r\n                            }\r\n                            </tbody>\r\n                            :\r\n                            <tbody>\r\n                            <tr>\r\n                              <td></td>\r\n                            </tr>\r\n                            </tbody>\r\n                            }\r\n                          \r\n                        </table>\r\n                    </div>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n                          */} \r\n                       {/*}\r\n                        <h3>\r\n                            Amount Paid = <span id = \"totalPaid\"></span>\r\n                        </h3>\r\n                        <span>Paid On = <span id = \"totalDate\"></span></span>\r\n                        <hr />\r\n                        <h3>\r\n                            Amount Due = <span id = \"totalDue\"></span>\r\n                        </h3>\r\n                          */}\r\n                          \r\n                        </div>\r\n                        <Row>\r\n                    <Col md=\"12\">\r\n                      \r\n                        <Card className=\"card-plain\">\r\n                          <CardHeader>Receive A Payment</CardHeader>\r\n                          <CardBody>\r\n                          \r\n                          <div className=\"row\">\r\n                          <div className=\"col-md-2\">\r\n                \r\n                           <div className=\"form-group\">\r\n                           <label htmlFor>Amount Paid</label>\r\n                           <input type=\"text\" name=\"paidTo\"  className=\"form-control\" id=\"amountPaidWith\" />\r\n                           {formik.errors.from && formik.touched.from  ? (<div className='error'>{formik.errors.from}</div>) : null}\r\n                           </div>\r\n                         </div>\r\n                         <div className=\"col-md-2\">\r\n                           <div className=\"form-group\">\r\n                           <label htmlFor>Date Paid</label>\r\n                           <input className=\"form-control\" type=\"date\" name=\"startDate\" id = \"amountPaidOnDate\"  />\r\n                           {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                           </div>\r\n                         </div>\r\n                         <div className=\"col-md-2\">\r\n                         <div className=\"form-group\">\r\n                         <label htmlFor>Paid To</label>\r\n                         {/*}\r\n                         <select name=\"accountPaid\" className=\"form-control\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.accountPaid}>\r\n                         {\r\n                             items.map(contents => (\r\n                         <option>{contents.name}</option>\r\n                           ))}\r\n                         </select>\r\n                             */}\r\n                         {formik.touched.accountPaid ? (<div className='error'>{formik.errors.accountPaid}</div>) : null}\r\n                         </div>\r\n                         </div>\r\n                         <div className=\"col-md-2\">\r\n                           <div className=\"form-group\">\r\n                           <label htmlFor>Reference</label>\r\n                           <input type=\"text\" name=\"reference\" id = \"referenceFor\" className=\"form-control\"  />\r\n                           {formik.errors.reference && formik.touched.reference  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                           </div>\r\n                         </div>\r\n                         <div  className=\"col-md-2\">\r\n                         <div className=\"form-group\">\r\n                             {/*}\r\n                         <button className = 'btn btn-dark' onClick = {(e) => handleAmountSend(e)}>Send Amount</button>\r\n                             */}\r\n                        </div>\r\n                        </div>\r\n                        <div  className=\"col-md-2\">\r\n                         <div className=\"form-group\">\r\n                             {/*}\r\n                         <button className = 'btn btn-success' onClick = {(e) => handleAmountPaidWith(e)}>Pay Amount</button>\r\n                            */}\r\n                         </div>\r\n                        </div>              \r\n                        </div> \r\n                       \r\n                        </CardBody>\r\n                        </Card>\r\n                        \r\n                        </Col>\r\n                        </Row>\r\n                        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgedReceivableViewLink\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction SalesTaxReport() {\r\n\r\n    const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3\" >\r\n                        \r\n                        <thead>\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              <th>Account</th>\r\n                              <th>Reference</th>\r\n                              <th>Details</th>\r\n                              <th>Gross</th>\r\n                              <th>Tax</th>\r\n                              <th>Net</th>\r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                       \r\n\r\n                        <tbody>\r\n                        <b>Tax on Purchases</b>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Sales Tax Audit Report</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n    \r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Sales Tax Audit Report </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesTaxReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\n\r\nfunction AgedReceivableDetailsSalesReport() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllSalesInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.startDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <td>\r\n          <b>{n}</b>\r\n        </td>\r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n            <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3 \" >\r\n                        <thead>\r\n                            <tr>\r\n                             <td>Invoice Date</td>\r\n                             <td>Due Date</td>\r\n                             <td>Invoice Number</td>\r\n                             <td>Invoice Reference</td>\r\n                             <td>Current</td>\r\n            \r\n                            <td> &lt; 1 Month</td>\r\n                            <td>2 Months</td>\r\n                            <td>3 Months</td>\r\n                            <td>\r\n                             Older\r\n                           </td>\r\n                           </tr>\r\n                        </thead>  \r\n                        {\r\n                              items.map(contents => (\r\n                                <tbody key={contents._id}>\r\n                                  <tr>\r\n                                  <td>\r\n                                      <h5><b><Link to={{\r\n                                        pathname: '/aged-recievable-link',\r\n                                        state: contents,\r\n                                      }} className = \"text-dark\">{contents.to}</Link></b></h5>\r\n                                  </td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    {dateFunction(contents)}\r\n                                    {dateDueDateFunction(contents)}\r\n                                    <td>\r\n                                      {contents.invoice}\r\n                                    </td>\r\n                                    <td>\r\n                                      {contents.reference}\r\n                                    </td>\r\n                                    {dateDifference(contents)}\r\n                               \r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td>\r\n                                      <b>Total {contents.to}</b>\r\n                                    </td>\r\n                                    <td>\r\n                                    </td>\r\n                                    <td>\r\n                                    </td>\r\n                                    <td>\r\n                                    </td>\r\n                                    {dateDifference(contents)}\r\n                                  </tr>\r\n                                  </tbody>\r\n                              ))\r\n                              }\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Aged Receivables Detail</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: </label>\r\n                          <div style = {{display:'inline-flex'}}>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                          \r\n                            <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Today</option>\r\n                             <option>End of last month</option>\r\n                             <option>End of last quarter</option>\r\n                             <option>End of last financial year</option>\r\n                            </select>\r\n                           </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Ageing By</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Due Date</option>\r\n                             <option>Invoice Date</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                     <div >\r\n                    <h4><b> Aged Receivables </b></h4>\r\n                    <h4>Name</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgedReceivableDetailsSalesReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\n\r\nfunction AgedReceivableSalesReport() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllSalesInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n    \r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.startDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <td>\r\n          <b>{n}</b>\r\n        </td>\r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n            <div>\r\n                   <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3 \" >\r\n                        <thead>\r\n                            <tr>\r\n                        \r\n                            <td></td>\r\n                            <td>Current</td>\r\n                            <td> &lt; 1 Month</td>\r\n                            <td>2 Months</td>\r\n                            <td>3 Months</td>\r\n                            <td>\r\n                             Older\r\n                           </td>\r\n                           </tr>\r\n                        </thead>\r\n                        <h4>Receivables</h4>\r\n                        <hr />  \r\n                        {\r\n                              items.map(contents => (\r\n                                <tbody key={contents._id}>\r\n                                  <tr>\r\n                                  <td>\r\n                                      <Link to={{\r\n                                        pathname: '/aged-recievable-link',\r\n                                        state: contents,\r\n                                      }} className = \"text-dark\">{contents.to}</Link>\r\n                                  </td>\r\n                                  <td>\r\n                                  {dateDifference(contents)}\r\n                                  </td>\r\n                                  </tr>\r\n                                  </tbody>\r\n                              ))\r\n                              }\r\n                         <h5>Total Receivables </h5>\r\n                        </table>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Aged Receivables</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: </label>\r\n                          <select className=\"form-control\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Shown by: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Month name</option>\r\n                             <option>Month number</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Ageing by:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Invoice date</option>\r\n                             <option>Due date</option>\r\n                            </select>\r\n                          {formik.errors.reference && formik.touched.reference  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor></label>\r\n                          <div className = \"pt-2\">\r\n                            <button className = \"btn btn-primary\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className>\r\n                    <h4><b> Aged Receivables </b></h4>\r\n                    <h4>Name</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgedReceivableSalesReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\n\r\nfunction AgedReceivableSummarySalesReport() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllSalesInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.startDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <td>\r\n          <b>{n}</b>\r\n        </td>\r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n            <div>\r\n                   <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3 \" >\r\n                        <thead>\r\n                            <tr>\r\n                        \r\n                            <td>Contact</td>\r\n                            <td>Current</td>\r\n                            <td> &lt; 1 Month</td>\r\n                            <td>1 Month</td>\r\n                            <td>2 Months</td>\r\n                            <td>3 Months</td>\r\n                            <td>\r\n                             Older\r\n                           </td>\r\n                           <td>\r\n                             Total\r\n                           </td>\r\n                           </tr>\r\n                        </thead>\r\n                        {\r\n                              items.map(contents => (\r\n                                <tbody key={contents._id}>\r\n                                  <tr>\r\n                                  <td>\r\n                                      <Link to={{\r\n                                        pathname: '/aged-recievable-link',\r\n                                        state: contents,\r\n                                      }} className = \"text-dark\">{contents.to}</Link>\r\n                                  </td>\r\n                                  <td>\r\n                                  {dateDifference(contents)}\r\n                                  </td>\r\n                                  </tr>\r\n                                  </tbody>\r\n                              ))\r\n                              }\r\n                        <hr />\r\n                        <b>Total</b>\r\n                        </table>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Aged Recievable Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: </label>\r\n                          <div style = {{display:'inline-flex'}}>\r\n                          <select className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                          \r\n                            <select className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                           </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Ageing By</label>\r\n                          <select className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Due Date</option>\r\n                             <option>Invoice Date</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                   \r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgedReceivableSummarySalesReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\n\r\nfunction CustomerInvoiceSalesReport() {\r\n\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n\r\n  const [sales, setSales] = useState()\r\n  const [expenses, setExpenses] = useState([])\r\n  const [purchaseValues, setPurchaseValues] = useState([])\r\n  const [salesValues, setSalesValues] = useState([])\r\n  const [directCosts, setDirectCosts] = useState([])\r\n  const [interestValues, setInterestValues] = useState([])\r\n  const [amortizationValues, setAmortizationValues] = useState([])\r\n  const [depreciationValues, setDepreciationValues] = useState([])\r\n  const [totalPurchase, setTotalPurchase] = useState()\r\n  const [total, setTotal] = useState()\r\n  const [totalSales, setTotalSales] = useState()\r\n  const [totalDirectCosts, setTotalDirectCosts] = useState()\r\n  const [totalInterest, setTotalInterest] = useState()\r\n  const [totalAmortization, setTotalAmortization] = useState()\r\n  const [totalDepreciation, setTotalDepreciation] = useState()\r\n  const [totalDA, setTotalDA] = useState()\r\n  const [grossProfit, setGrossProfit] = useState()\r\n  const [ebitda, setEbitda] = useState()\r\n  const [taxRates, setTaxRates] = useState()\r\n  \r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllSalesInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n\r\n  const timerId = setTimeout(() => {\r\n    sumOfValues()\r\n    }, 2000);\r\n\r\n    const sumOfValues = () => {\r\n      var arrForTotalSales = [];\r\n      var arrForTotal = [];\r\n      var arrForTotalPurchase = [];\r\n      var arrForTotalDirectCosts = []\r\n      var arrForTotalInterest = []\r\n      var arrForTotalDepreciation = []\r\n      var arrForTotalAmortization = []\r\n      var totForPurchase = 0;\r\n      var totForSales = 0;\r\n      var totForTotal = 0;\r\n      var totForDirectCosts = 0;\r\n      var totForInterest = 0;\r\n      var totForAmortization = 0;\r\n      var totForDepreciation = 0;\r\n      var arrForExpense = []\r\n      console.log(salesValues)\r\n      for(var i=0;i<items.length;i++){\r\n        arrForTotal.push(items[i].total)\r\n      }\r\n      for(var i=0;i<items.length;i++){\r\n        totForTotal +=  parseInt(arrForTotal[i]);\r\n      }\r\n      document.getElementById(\"pageTotal\").innerHTML = totForTotal;\r\n      document.getElementById(\"reportTotal\").innerHTML = totForTotal\r\n  }\r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.startDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <td>\r\n          <b>{n}</b>\r\n        </td>\r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n            <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3\" >\r\n                 <thead>\r\n                            <tr>\r\n                              <th>\r\n                              Invoice Number\r\n                              </th>\r\n                              <th>\r\n                              Reference\r\n                              </th>\r\n                              <th>\r\n                              Type\r\n                              </th>\r\n                              <th>\r\n                              To\r\n                              </th>\r\n                              <th>\r\n                              Date\r\n                              </th>\r\n                              <th>\r\n                              Due Date\r\n                              </th>\r\n                              <th>\r\n                              Expected Date\r\n                              </th>\r\n                              <th>\r\n                              Paid Date\r\n                              </th>\r\n                              <th>\r\n                              Invoice Total\r\n                              </th>\r\n                              <th>\r\n                              Paid\r\n                              </th>\r\n                              <th>\r\n                              Due\r\n                              </th>\r\n                              <th>\r\n                              Sent\r\n                              </th>\r\n                              <th>\r\n                              Status\r\n                              </th>\r\n                            </tr>\r\n                        </thead>  \r\n                     \r\n                        {\r\n                              items.map(contents => (\r\n                                <tbody key={contents._id}>\r\n                                  <tr>\r\n                                    <td>\r\n                                      {contents.invoice}\r\n                                    </td>\r\n                                    <td>\r\n                                      {contents.reference}\r\n                                    </td>\r\n                                    <td>\r\n                                    </td>\r\n                                   \r\n                                  <td>\r\n                                      <Link to={{\r\n                                        pathname: '/aged-recievable-link',\r\n                                        state: contents,\r\n                                      }} className = \"text-dark\">{contents.to}</Link>\r\n                                  </td>\r\n                                  {dateFunction(contents)}\r\n                                  {dateDueDateFunction(contents)}\r\n                                  <td>\r\n                                  </td>\r\n                                  <td>\r\n                                  </td>\r\n                                  <td>\r\n                                  {contents.total}\r\n                                  </td>\r\n                                  <td>\r\n\r\n                                  </td>\r\n                                  <td>\r\n                                    \r\n                                  </td>\r\n                                  <td>\r\n                                    \r\n                                  </td>\r\n                                  <td>\r\n                                    \r\n                                  </td>\r\n                                  </tr>\r\n                                 \r\n                                  </tbody>\r\n                              ))\r\n                              }\r\n                        <tr>\r\n                          <td>\r\n                          <b>Page Total</b>\r\n                          </td>\r\n                          <td>\r\n\r\n                          </td>\r\n                          <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td id = \"pageTotal\">\r\n                            \r\n                            </td>\r\n                        </tr>\r\n                        <hr />\r\n                        <tr>\r\n                          <td>\r\n                          <b>Report Total</b>\r\n                          </td>\r\n                          <td>\r\n\r\n                          </td>\r\n                          <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td>\r\n                            \r\n                            </td>\r\n                            <td id = \"reportTotal\">\r\n                            \r\n                            </td>\r\n                        </tr>\r\n                        <hr />\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Customer Invoice Report</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Dates: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Any Date</option>\r\n                             <option>Invoice Date</option>\r\n                             <option>Due Date</option>\r\n                             <option>Expected Date</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.errors.reference && formik.touched.reference  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Status: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Show All</option>\r\n                             <option>Draft</option>\r\n                             <option>Awaiting Approval</option>\r\n                             <option>Awaiting Payment</option>\r\n                             <option>Paid</option>\r\n                             <option>Void</option>\r\n                             <option>Deleted</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Sort By: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Invoice Number</option>\r\n                             <option>Reference</option>\r\n                             <option>Contact</option>\r\n                             <option>Invoice Date</option>\r\n                             <option>Due Date</option>\r\n                             <option>Paid Date</option>\r\n                             <option>Expected Date</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Currency: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Currency</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Customer Invoice Report  </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomerInvoiceSalesReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\n\r\nfunction ReceivableInvoiceDetailSalesReport() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n\r\n  const [sales, setSales] = useState()\r\n  const [expenses, setExpenses] = useState([])\r\n  const [purchaseValues, setPurchaseValues] = useState([])\r\n  const [salesValues, setSalesValues] = useState([])\r\n  const [directCosts, setDirectCosts] = useState([])\r\n  const [interestValues, setInterestValues] = useState([])\r\n  const [amortizationValues, setAmortizationValues] = useState([])\r\n  const [depreciationValues, setDepreciationValues] = useState([])\r\n  const [totalPurchase, setTotalPurchase] = useState()\r\n  const [total, setTotal] = useState()\r\n  const [totalSales, setTotalSales] = useState()\r\n  const [totalDirectCosts, setTotalDirectCosts] = useState()\r\n  const [totalInterest, setTotalInterest] = useState()\r\n  const [totalAmortization, setTotalAmortization] = useState()\r\n  const [totalDepreciation, setTotalDepreciation] = useState()\r\n  const [totalDA, setTotalDA] = useState()\r\n  const [grossProfit, setGrossProfit] = useState()\r\n  const [ebitda, setEbitda] = useState()\r\n  const [taxRates, setTaxRates] = useState()\r\n  \r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllSalesInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n\r\n  const timerId = setTimeout(() => {\r\n    sumOfValues()\r\n    }, 2000);\r\n\r\n    const sumOfValues = () => {\r\n      var arrForTotalSales = [];\r\n      var arrForTotal = [];\r\n      var arrForQuantityTotal = [];\r\n      var arrForTaxTotal = [];\r\n      var arrForGross = [];\r\n      var arrForTotalPurchase = [];\r\n      var arrForTotalDirectCosts = []\r\n      var arrForTotalInterest = []\r\n      var arrForTotalDepreciation = []\r\n      var arrForTotalAmortization = []\r\n      var totForPurchase = 0;\r\n      var totForSales = 0;\r\n      var totForTotal = 0;\r\n      var totForQuantityTotal = 0;\r\n      var totForTaxTotal = 0;\r\n      var totForGross = 0;\r\n      var totForDirectCosts = 0;\r\n      var totForInterest = 0;\r\n      var totForAmortization = 0;\r\n      var totForDepreciation = 0;\r\n      var arrForExpense = []\r\n      console.log(salesValues)\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        if((items[i].total == null) || (items[i].total == \"\") ){\r\n          arrForTotal.push(0)\r\n        }\r\n        else{\r\n          arrForTotal.push(items[i].total)\r\n        }\r\n      }\r\n\r\n      for(var i=0;i<items.length;i++){\r\n         if((items[i].qty == null) || (items[i].total == \"\")){\r\n          arrForQuantityTotal.push(0)\r\n        }\r\n        else{\r\n          arrForQuantityTotal.push(items[i].qty)\r\n        }\r\n      }\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        if((items[i].taxAmount == null) || (items[i].taxAmount == \"\")){\r\n          arrForTaxTotal.push(0)\r\n       }\r\n       else{\r\n        arrForTaxTotal.push(items[i].taxAmount)\r\n       }\r\n     }\r\n\r\n\r\n     for(var i=0;i<items.length;i++){\r\n      if((items[i].gross == null) || (items[i].gross == \"\")){\r\n        arrForGross.push(0)\r\n     }\r\n     else{\r\n      arrForGross.push(items[i].gross)\r\n     }\r\n   }\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        totForTotal +=  parseInt(arrForTotal[i]);\r\n      }\r\n      for(var i=0;i<items.length;i++){\r\n        totForQuantityTotal +=  parseInt(arrForQuantityTotal[i]);\r\n      }\r\n      for(var i=0;i<items.length;i++){\r\n        totForGross +=  parseInt(arrForGross[i]);\r\n      }\r\n      \r\n      document.getElementById(\"quantityTotal\").innerHTML = totForQuantityTotal;\r\n      document.getElementById(\"taxTotal\").innerHTML = totForTaxTotal;\r\n      document.getElementById(\"grossTotal\").innerHTML = totForTaxTotal;\r\n\r\n      //document.getElementById(\"reportTotal\").innerHTML = totForTotal\r\n  }\r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.startDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <td>\r\n          <b>{n}</b>\r\n        </td>\r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n          <div>\r\n          <table id=\"table\" className=\"table table-striped mt-3\" >\r\n          <thead>\r\n                     <tr>\r\n                       <th>\r\n                       Invoice Number\r\n                       </th>\r\n                       <th>\r\n                       Invoice Date\r\n                       </th>\r\n                       <th>\r\n                       Source\r\n                       </th>\r\n                       <th>\r\n                       Reference\r\n                       </th>\r\n                       <th>\r\n                       Item Code\r\n                       </th>\r\n                       <th>\r\n                       Description\r\n                       </th>\r\n                       <th>\r\n                       Quantity\r\n                       </th>\r\n                       <th>\r\n                       Unit Price\r\n                       </th>\r\n                       <th>\r\n                       Discount\r\n                       </th>\r\n                       <th>\r\n                       Tax\r\n                       </th>\r\n                       <th>\r\n                       Gross\r\n                       </th>\r\n                       <th>\r\n                       Invoice Total\r\n                       </th>\r\n                      \r\n                     </tr>\r\n                 </thead>  \r\n              \r\n                 {\r\n                       items.map(contents => (\r\n                         <tbody key={contents._id}>\r\n                           <tr>\r\n                             <td>\r\n                               {contents.to}\r\n                               <hr />\r\n                               <b>Total {contents.to}</b>\r\n                             </td>\r\n                             {dateFunction(contents)}\r\n                             <td>\r\n                             </td>\r\n                             <td>\r\n                               {contents.reference}\r\n                             </td>\r\n                             <td>\r\n                               \r\n                             </td>\r\n                             <td>\r\n                               {contents.description}\r\n                             </td>\r\n                             <td>\r\n                               {contents.qty}\r\n                             </td>\r\n                             <td>\r\n                               {contents.unitPrice}\r\n                             </td>\r\n                             <td>\r\n                              \r\n                             </td>\r\n                             <td>\r\n                              \r\n                              </td>\r\n                              <td>\r\n                              \r\n                              </td>\r\n                              <td>\r\n                              {contents.total}\r\n                              </td>\r\n                           \r\n                           </tr>\r\n                          \r\n                           </tbody>\r\n                       ))\r\n                       }\r\n                 <tr>\r\n                   <td>\r\n                   <b>Total</b>\r\n                   </td>\r\n                   <td>\r\n\r\n                   </td>\r\n                   <td>\r\n                     \r\n                     </td>\r\n                     <td>\r\n                     \r\n                     </td>\r\n                     <td>\r\n                     \r\n                     </td>\r\n                     <td>\r\n                     \r\n                     </td>\r\n                     <td id = \"quantityTotal\">\r\n                     \r\n                     </td>\r\n                     <td>\r\n                     \r\n                     </td>\r\n                     <td>\r\n                     \r\n                     </td>\r\n                     <td id = \"taxTotal\">\r\n                     \r\n                     </td>\r\n                     <td id = \"grossTotal\">\r\n                     \r\n                     </td>\r\n                 </tr>\r\n                 <hr />\r\n                \r\n                 <hr />\r\n                 </table>\r\n     </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Receivable Invoice Detail</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Dates range: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date Search: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Created Date</option>\r\n                             <option>Due Date</option>\r\n                             <option>Expected Date</option>\r\n                             <option>Invoice Date</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                  \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Receivable Invoice Detail </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date range</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivableInvoiceDetailSalesReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\n\r\nfunction ReceivableInvoiceSummarySalesReport() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n\r\n  const [sales, setSales] = useState()\r\n  const [expenses, setExpenses] = useState([])\r\n  const [purchaseValues, setPurchaseValues] = useState([])\r\n  const [salesValues, setSalesValues] = useState([])\r\n  const [directCosts, setDirectCosts] = useState([])\r\n  const [interestValues, setInterestValues] = useState([])\r\n  const [amortizationValues, setAmortizationValues] = useState([])\r\n  const [depreciationValues, setDepreciationValues] = useState([])\r\n  const [totalPurchase, setTotalPurchase] = useState()\r\n  const [total, setTotal] = useState()\r\n  const [totalSales, setTotalSales] = useState()\r\n  const [totalDirectCosts, setTotalDirectCosts] = useState()\r\n  const [totalInterest, setTotalInterest] = useState()\r\n  const [totalAmortization, setTotalAmortization] = useState()\r\n  const [totalDepreciation, setTotalDepreciation] = useState()\r\n  const [totalDA, setTotalDA] = useState()\r\n  const [grossProfit, setGrossProfit] = useState()\r\n  const [ebitda, setEbitda] = useState()\r\n  const [taxRates, setTaxRates] = useState()\r\n  \r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllSalesInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n\r\n  const timerId = setTimeout(() => {\r\n    sumOfValues()\r\n    }, 2000);\r\n\r\n    const sumOfValues = () => {\r\n      var arrForTotalSales = [];\r\n      var arrForTotalBalance = [];\r\n      var arrForQuantityTotal = [];\r\n      var arrForTaxTotal = [];\r\n      var arrForGross = [];\r\n      var arrForTotalPurchase = [];\r\n      var arrForTotalDirectCosts = []\r\n      var arrForTotalInterest = []\r\n      var arrForTotalDepreciation = []\r\n      var arrForTotalAmortization = []\r\n      var totForPurchase = 0;\r\n      var totForSales = 0;\r\n      var totForTotalBalance = 0;\r\n      var totForQuantityTotal = 0;\r\n      var totForTaxTotal = 0;\r\n      var totForGross = 0;\r\n      var totForDirectCosts = 0;\r\n      var totForInterest = 0;\r\n      var totForAmortization = 0;\r\n      var totForDepreciation = 0;\r\n      var arrForExpense = []\r\n      console.log(salesValues)\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        if((items[i].balance == null) || (items[i].balance == \"\") ){\r\n          arrForTotalBalance.push(0)\r\n        }\r\n        else{\r\n          arrForTotalBalance.push(items[i].balance)\r\n        }\r\n      }\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        totForTotalBalance +=  parseInt(arrForTotalBalance[i]);\r\n      }\r\n\r\n      document.getElementById(\"totalBalance\").innerHTML = totForTotalBalance;\r\n      //document.getElementById(\"taxTotal\").innerHTML = totForTaxTotal;\r\n      //document.getElementById(\"grossTotal\").innerHTML = totForTaxTotal;\r\n\r\n      //document.getElementById(\"reportTotal\").innerHTML = totForTotal\r\n  }\r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.startDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <td>\r\n          <b>{n}</b>\r\n        </td>\r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n          <div>\r\n          <table id=\"table\" className=\"table table-striped mt-3\" >\r\n          <thead>\r\n                     <tr>\r\n                       <th>\r\n                       Invoice Number\r\n                       </th>\r\n                       <th>\r\n                       Contact\r\n                       </th>\r\n                       <th>\r\n                       Invoice Date\r\n                       </th>\r\n                       <th>\r\n                       Expected Date\r\n                       </th>\r\n                       <th>\r\n                       Reference\r\n                       </th>\r\n                       <th>\r\n                       Balance\r\n                       </th>\r\n                       <th>\r\n                       Source\r\n                       </th>\r\n                       <th>\r\n                       Invoice Sent\r\n                       </th>\r\n                     \r\n                      \r\n                     </tr>\r\n                 </thead>  \r\n              \r\n                 {\r\n                       items.map(contents => (\r\n                         <tbody key={contents._id}>\r\n                           <tr>\r\n                             <td>\r\n                               {contents.invoice}\r\n                             </td>\r\n                             <td>\r\n                               {contents.to}\r\n                             </td>\r\n                                {dateFunction(contents)} \r\n                             <td>\r\n                               \r\n                             </td>\r\n                             <td>\r\n                               {contents.reference}\r\n                             </td>\r\n                             <td>\r\n                               \r\n                             </td>\r\n                             <td>\r\n                               \r\n                             </td>\r\n                             <td>\r\n                              \r\n                             </td>\r\n                            \r\n                           </tr>\r\n                          \r\n                           </tbody>\r\n                       ))\r\n                       }\r\n                 <tr>\r\n                   <td>\r\n                   <b>Total</b>\r\n                   </td>\r\n                  <td>\r\n\r\n                  </td>\r\n                  <td>\r\n                    \r\n                  </td>\r\n                  <td>\r\n                    \r\n                  </td>\r\n                  <td>\r\n                    \r\n                  </td>\r\n                  <td id = \"totalBalance\">\r\n                    \r\n                  </td>\r\n                 </tr>\r\n                 <hr />\r\n                \r\n                 <hr />\r\n                 </table>\r\n     </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Receivable Invoice Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Dates range: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date Search: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Created Date</option>\r\n                             <option>Due Date</option>\r\n                             <option>Expected Date</option>\r\n                             <option>Invoice Date</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Receivable Invoice Summary </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date range</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReceivableInvoiceSummarySalesReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllPurchaseInvoiceAccountsValuesController } from '../../../Apis/ApiForPurchaseInvoice';\r\n\r\nfunction AgedPayablesDetailsPurchaseReport() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllPurchaseInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n  \r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n\r\n  const timerId = setTimeout(() => {\r\n    sumOfValues()\r\n    }, 2000);\r\n\r\n    const sumOfValues = () => {\r\n      var arrForTotalSales = [];\r\n      var arrForTotal = [];\r\n      var arrForTotalPurchase = [];\r\n      var arrForTotalDirectCosts = []\r\n      var arrForTotalInterest = []\r\n      var arrForTotalDepreciation = []\r\n      var arrForTotalAmortization = []\r\n      var totForPurchase = 0;\r\n      var totForSales = 0;\r\n      var totForTotal = 0;\r\n      var totForDirectCosts = 0;\r\n      var totForInterest = 0;\r\n      var totForAmortization = 0;\r\n      var totForDepreciation = 0;\r\n      var arrForExpense = []\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        arrForTotal.push(items[i].total)\r\n      }\r\n      for(var i=0;i<items.length;i++){\r\n        totForTotal +=  parseInt(arrForTotal[i]);\r\n      }\r\n      //document.getElementById(\"Total\").innerHTML = totForTotal;\r\n      //document.getElementById(\"reportTotal\").innerHTML = totForTotal\r\n  }\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var invoiceStart = new Date(data.startDate);\r\n        var invoiceStartDate = invoiceStart.toLocaleDateString('en-EN', options);\r\n        var due = new Date(data.endDate);\r\n        var invoiceDueDate = due.toLocaleDateString('en-EN', options);\r\n        var months;\r\n        months = (due.getFullYear() - invoiceStart.getFullYear()) * 12;\r\n        months -= invoiceStart.getMonth();\r\n        months += due.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n       \r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n        return(\r\n          <tr>\r\n            <td>\r\n            {invoiceStartDate}\r\n            </td>\r\n            <td>\r\n            {invoiceDueDate}\r\n            </td>\r\n            <td>\r\n            {data.reference}\r\n            </td>\r\n            <td>\r\n            {final}\r\n            </td>\r\n            <td>\r\n            \r\n            </td>\r\n            <td>\r\n            \r\n            </td>\r\n            <td>\r\n            \r\n            </td>\r\n            <td>\r\n            \r\n            </td>\r\n            <td>\r\n            {final}\r\n            </td>\r\n\r\n          </tr>\r\n        )\r\n      }\r\n    }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <div>\r\n          <td>\r\n           <b>{n}</b>\r\n          </td>\r\n          <td>\r\n           a\r\n          </td>\r\n          <td>\r\n           b\r\n          </td>\r\n        </div>\r\n       \r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n            <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3 \" >\r\n                        <thead>\r\n                            <tr>\r\n                             <td>Invoice Date</td>\r\n                             <td>Due Date</td>\r\n                            \r\n                             <td>Invoice Reference</td>\r\n                             <td>Current</td>\r\n            \r\n                            <td> &lt; 1 Month</td>\r\n                            <td>2 Months</td>\r\n                            <td>3 Months</td>\r\n                            <td>\r\n                             Older\r\n                            </td>\r\n                            <td>\r\n                             Total\r\n                           </td>\r\n                           </tr>\r\n                        </thead>  \r\n                        {\r\n                              items.map(contents => (\r\n                                <tbody key={contents._id}>\r\n                                  <tr>\r\n                                  <td>\r\n                                      <h5><b><Link to={{\r\n                                        pathname: '/aged-recievable-link',\r\n                                        state: contents,\r\n                                      }} className = \"text-dark\">{contents.from}</Link></b></h5>\r\n                                  </td>\r\n                                  </tr>\r\n                                    {dateFunction(contents)}\r\n                                  <tr>\r\n                                    <td>\r\n                                      <b>Total {contents.from}</b>\r\n                                    </td>\r\n                                    <td>\r\n                                    </td>\r\n                                    <td>\r\n                                    \r\n                                    </td>\r\n                                    {dateDifference(contents)}\r\n                                  </tr>\r\n                                  </tbody>\r\n                              ))\r\n                              }\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Aged Payables Detail</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: </label>\r\n                          <div style = {{display:'inline-flex'}}>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                          \r\n                            <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                           </div>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Aged Payables Detail  </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgedPayablesDetailsPurchaseReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport { getAllPurchaseInvoiceAccountsValuesController } from '../../../Apis/ApiForPurchaseInvoice';\r\n\r\nfunction AgedPayablesSummaryPurchaseReport() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllPurchaseInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n  const timerId = setTimeout(() => {\r\n    sumOfValues()\r\n    }, 2000);\r\n\r\n    const sumOfValues = () => {\r\n      var arrForTotalSales = [];\r\n      var arrForTotal = [];\r\n      var arrForTotalPurchase = [];\r\n      var arrForTotalDirectCosts = []\r\n      var arrForTotalInterest = []\r\n      var arrForTotalDepreciation = []\r\n      var arrForTotalAmortization = []\r\n      var totForPurchase = 0;\r\n      var totForSales = 0;\r\n      var totForTotal = 0;\r\n      var totForDirectCosts = 0;\r\n      var totForInterest = 0;\r\n      var totForAmortization = 0;\r\n      var totForDepreciation = 0;\r\n      var arrForExpense = []\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        console.log(items[i].total)\r\n        arrForTotal.push(items[i].total)\r\n      }\r\n      for(var i=0;i<items.length;i++){\r\n        totForTotal +=  parseInt(arrForTotal[i]);\r\n      }\r\n      document.getElementById(\"totalColumns\").innerHTML = totForTotal;\r\n      document.getElementById(\"totalRows\").innerHTML = totForTotal;\r\n      //document.getElementById(\"reportTotal\").innerHTML = totForTotal\r\n  }\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var invoiceStart = new Date(data.startDate);\r\n        var invoiceStartDate = invoiceStart.toLocaleDateString('en-EN', options);\r\n        var due = new Date(data.endDate);\r\n        var invoiceDueDate = due.toLocaleDateString('en-EN', options);\r\n        var months;\r\n        months = (due.getFullYear() - invoiceStart.getFullYear()) * 12;\r\n        months -= invoiceStart.getMonth();\r\n        months += due.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n        return(\r\n          <tr>\r\n            <td>\r\n            {data.from}\r\n            </td>\r\n            <td>\r\n            {final}\r\n            </td>\r\n            <td>\r\n            \r\n            </td>\r\n            <td>\r\n            \r\n            </td>\r\n            <td>\r\n            \r\n            </td>\r\n            <td>\r\n            \r\n            </td>\r\n            <td>\r\n            \r\n            </td>\r\n            <td>\r\n            {final}\r\n            </td>\r\n\r\n          </tr>\r\n        )\r\n      }\r\n    }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <td>\r\n          <b>{n}</b>\r\n        </td>\r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n            <div>\r\n                   <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3 \" >\r\n                        <thead>\r\n                            <tr>\r\n                        \r\n                            <td>Contact</td>\r\n                            <td>Current</td>\r\n                            <td> &lt; 1 Month</td>\r\n                            <td>1 Month</td>\r\n                            <td>2 Months</td>\r\n                            <td>3 Months</td>\r\n                            <td>\r\n                             Older\r\n                           </td>\r\n                           <td>\r\n                             Total\r\n                           </td>\r\n                           </tr>\r\n                        </thead>\r\n                        {\r\n                              items.map(contents => (\r\n                                <tbody key={contents._id}>\r\n                                  {dateFunction(contents)}\r\n                                  \r\n                                  </tbody>\r\n                              ))\r\n                              }\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>\r\n                                  <b>Total</b>\r\n                                  </td>\r\n                                  <td>\r\n                                  <p id = \"totalColumns\"></p>\r\n                                  </td>\r\n                                  <td>\r\n                                  \r\n                                  </td>\r\n                                  <td>\r\n                                  \r\n                                  </td>\r\n                                  <td>\r\n                                  \r\n                                  </td>\r\n                                  <td>\r\n                                  \r\n                                  </td>\r\n                                  <td>\r\n                                  \r\n                                  </td>\r\n                                  <td>\r\n                                  <p id = \"totalRows\"></p>\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                      \r\n                        </table>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Aged Payables Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: </label>\r\n                          <div style = {{display:'inline-flex'}}>\r\n                          <select className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                          \r\n                            <select className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                           </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Ageing By</label>\r\n                          <select className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Due Date</option>\r\n                             <option>Invoice Date</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Aged Payables Summary  </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AgedPayablesSummaryPurchaseReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getAllPurchaseInvoiceAccountsValuesController } from '../../../Apis/ApiForPurchaseInvoice';\r\n\r\nfunction PayableInvoiceDetailPurchaseReport() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n\r\n  const [sales, setSales] = useState()\r\n  const [expenses, setExpenses] = useState([])\r\n  const [purchaseValues, setPurchaseValues] = useState([])\r\n  const [salesValues, setSalesValues] = useState([])\r\n  const [directCosts, setDirectCosts] = useState([])\r\n  const [interestValues, setInterestValues] = useState([])\r\n  const [amortizationValues, setAmortizationValues] = useState([])\r\n  const [depreciationValues, setDepreciationValues] = useState([])\r\n  const [totalPurchase, setTotalPurchase] = useState()\r\n  const [total, setTotal] = useState()\r\n  const [totalSales, setTotalSales] = useState()\r\n  const [totalDirectCosts, setTotalDirectCosts] = useState()\r\n  const [totalInterest, setTotalInterest] = useState()\r\n  const [totalAmortization, setTotalAmortization] = useState()\r\n  const [totalDepreciation, setTotalDepreciation] = useState()\r\n  const [totalDA, setTotalDA] = useState()\r\n  const [grossProfit, setGrossProfit] = useState()\r\n  const [ebitda, setEbitda] = useState()\r\n  const [taxRates, setTaxRates] = useState()\r\n  \r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllPurchaseInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n\r\n  const timerId = setTimeout(() => {\r\n    sumOfValues()\r\n    }, 2000);\r\n\r\n    const sumOfValues = () => {\r\n      var arrForTotalSales = [];\r\n      var arrForTotal = [];\r\n      var arrForQuantityTotal = [];\r\n      var arrForTaxTotal = [];\r\n      var arrForGross = [];\r\n      var arrForTotalPurchase = [];\r\n      var arrForTotalDirectCosts = []\r\n      var arrForTotalInterest = []\r\n      var arrForTotalDepreciation = []\r\n      var arrForTotalAmortization = []\r\n      var totForPurchase = 0;\r\n      var totForSales = 0;\r\n      var totForTotal = 0;\r\n      var totForQuantityTotal = 0;\r\n      var totForTaxTotal = 0;\r\n      var totForGross = 0;\r\n      var totForDirectCosts = 0;\r\n      var totForInterest = 0;\r\n      var totForAmortization = 0;\r\n      var totForDepreciation = 0;\r\n      var arrForExpense = []\r\n      console.log(salesValues)\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        if((items[i].total == null) || (items[i].total == \"\") ){\r\n          arrForTotal.push(0)\r\n        }\r\n        else{\r\n          arrForTotal.push(items[i].total)\r\n        }\r\n      }\r\n\r\n      for(var i=0;i<items.length;i++){\r\n         if((items[i].qty == null) || (items[i].total == \"\")){\r\n          arrForQuantityTotal.push(0)\r\n        }\r\n        else{\r\n          arrForQuantityTotal.push(items[i].qty)\r\n        }\r\n      }\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        if((items[i].taxAmount == null) || (items[i].taxAmount == \"\")){\r\n          arrForTaxTotal.push(0)\r\n       }\r\n       else{\r\n        arrForTaxTotal.push(items[i].taxAmount)\r\n       }\r\n     }\r\n\r\n\r\n     for(var i=0;i<items.length;i++){\r\n      if((items[i].gross == null) || (items[i].gross == \"\")){\r\n        arrForGross.push(0)\r\n     }\r\n     else{\r\n      arrForGross.push(items[i].gross)\r\n     }\r\n   }\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        totForTotal +=  parseInt(arrForTotal[i]);\r\n      }\r\n      for(var i=0;i<items.length;i++){\r\n        totForQuantityTotal +=  parseInt(arrForQuantityTotal[i]);\r\n      }\r\n      for(var i=0;i<items.length;i++){\r\n        totForGross +=  parseInt(arrForGross[i]);\r\n      }\r\n      \r\n      document.getElementById(\"quantityTotal\").innerHTML = totForQuantityTotal;\r\n      document.getElementById(\"taxTotal\").innerHTML = totForTaxTotal;\r\n      document.getElementById(\"grossTotal\").innerHTML = totForTaxTotal;\r\n\r\n      //document.getElementById(\"reportTotal\").innerHTML = totForTotal\r\n  }\r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.startDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <td>\r\n          <b>{n}</b>\r\n        </td>\r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n          <div>\r\n          <table id=\"table\" className=\"table table-striped mt-3\" >\r\n          <thead>\r\n                     <tr>\r\n                       <th>\r\n                       Invoice Date\r\n                       </th>\r\n                       <th>\r\n                       Source\r\n                       </th>\r\n                       <th>\r\n                       Reference\r\n                       </th>\r\n                       <th>\r\n                       Item Code\r\n                       </th>\r\n                       <th>\r\n                       Description\r\n                       </th>\r\n                       <th>\r\n                       Quantity\r\n                       </th>\r\n                       <th>\r\n                       Unit Price\r\n                       </th>\r\n                       <th>\r\n                       Discount\r\n                       </th>\r\n                       <th>\r\n                       Tax\r\n                       </th>\r\n                       <th>\r\n                       Gross\r\n                       </th>\r\n                       <th>\r\n                       Invoice Total\r\n                       </th>\r\n                      \r\n                     </tr>\r\n                 </thead>  \r\n              \r\n                 {\r\n                       items.map(contents => (\r\n                         <tbody key={contents._id}>\r\n                           <tr>\r\n                             <td>\r\n                               {contents.from}\r\n                               {dateFunction(contents)}\r\n                               <hr />\r\n                               <b>Total {contents.from}</b>\r\n                             </td>\r\n                             \r\n                             <td>\r\n                             </td>\r\n                             <td>\r\n                               {contents.reference}\r\n                             </td>\r\n                             <td>\r\n                               \r\n                             </td>\r\n                             <td>\r\n                               {contents.description}\r\n                             </td>\r\n                             <td>\r\n                               {contents.qty}\r\n                             </td>\r\n                             <td>\r\n                               {contents.unitPrice}\r\n                             </td>\r\n                             <td>\r\n                              \r\n                             </td>\r\n                             <td>\r\n                              \r\n                              </td>\r\n                              <td>\r\n                              \r\n                              </td>\r\n                              <td>\r\n                              {contents.total}\r\n                              </td>\r\n                           \r\n                           </tr>\r\n                          \r\n                           </tbody>\r\n                       ))\r\n                       }\r\n                 <tr>\r\n                   <td>\r\n                   <b>Total</b>\r\n                   </td>\r\n                   <td>\r\n\r\n                   </td>\r\n                   <td>\r\n                     \r\n                     </td>\r\n                     <td>\r\n                     \r\n                     </td>\r\n                     <td>\r\n                     \r\n                     </td>\r\n                    \r\n                     <td id = \"quantityTotal\">\r\n                     \r\n                     </td>\r\n                     <td>\r\n                     \r\n                     </td>\r\n                     <td>\r\n                     \r\n                     </td>\r\n                     <td id = \"taxTotal\">\r\n                     \r\n                     </td>\r\n                     <td id = \"grossTotal\">\r\n                     \r\n                     </td>\r\n                 </tr>\r\n                 <hr />\r\n                \r\n                 <hr />\r\n                 </table>\r\n     </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Payable Invoice Detail</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Dates range: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date Search: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Created Date</option>\r\n                             <option>Due Date</option>\r\n                             <option>Expected Date</option>\r\n                             <option>Invoice Date</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Payable Invoice Detail </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date range</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PayableInvoiceDetailPurchaseReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport { getAllPurchaseInvoiceAccountsValuesController } from '../../../Apis/ApiForPurchaseInvoice';\r\n\r\nfunction PayableInvoiceSummaryPurchaseReport() {\r\n  const location = useLocation();\r\n  const editorRef = useRef(null);\r\n  const history = useHistory()\r\n  const [items, setItems] = useState([])\r\n  const [valueForDecimal, setValueForDecimal] = useState('')\r\n\r\n  const [sales, setSales] = useState()\r\n  const [expenses, setExpenses] = useState([])\r\n  const [purchaseValues, setPurchaseValues] = useState([])\r\n  const [salesValues, setSalesValues] = useState([])\r\n  const [directCosts, setDirectCosts] = useState([])\r\n  const [interestValues, setInterestValues] = useState([])\r\n  const [amortizationValues, setAmortizationValues] = useState([])\r\n  const [depreciationValues, setDepreciationValues] = useState([])\r\n  const [totalPurchase, setTotalPurchase] = useState()\r\n  const [total, setTotal] = useState()\r\n  const [totalSales, setTotalSales] = useState()\r\n  const [totalDirectCosts, setTotalDirectCosts] = useState()\r\n  const [totalInterest, setTotalInterest] = useState()\r\n  const [totalAmortization, setTotalAmortization] = useState()\r\n  const [totalDepreciation, setTotalDepreciation] = useState()\r\n  const [totalDA, setTotalDA] = useState()\r\n  const [grossProfit, setGrossProfit] = useState()\r\n  const [ebitda, setEbitda] = useState()\r\n  const [taxRates, setTaxRates] = useState()\r\n  \r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllPurchaseInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n\r\n  const timerId = setTimeout(() => {\r\n    sumOfValues()\r\n    }, 2000);\r\n\r\n    const sumOfValues = () => {\r\n      var arrForTotalSales = [];\r\n      var arrForTotalBalance = [];\r\n      var arrForQuantityTotal = [];\r\n      var arrForTaxTotal = [];\r\n      var arrForGross = [];\r\n      var arrForTotalPurchase = [];\r\n      var arrForTotalDirectCosts = []\r\n      var arrForTotalInterest = []\r\n      var arrForTotalDepreciation = []\r\n      var arrForTotalAmortization = []\r\n      var totForPurchase = 0;\r\n      var totForSales = 0;\r\n      var totForTotalBalance = 0;\r\n      var totForQuantityTotal = 0;\r\n      var totForTaxTotal = 0;\r\n      var totForGross = 0;\r\n      var totForDirectCosts = 0;\r\n      var totForInterest = 0;\r\n      var totForAmortization = 0;\r\n      var totForDepreciation = 0;\r\n      var arrForExpense = []\r\n      console.log(salesValues)\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        if((items[i].balance == null) || (items[i].balance == \"\") ){\r\n          arrForTotalBalance.push(0)\r\n        }\r\n        else{\r\n          arrForTotalBalance.push(items[i].balance)\r\n        }\r\n      }\r\n\r\n      for(var i=0;i<items.length;i++){\r\n        totForTotalBalance +=  parseInt(arrForTotalBalance[i]);\r\n      }\r\n\r\n      document.getElementById(\"totalBalance\").innerHTML = totForTotalBalance;\r\n      //document.getElementById(\"taxTotal\").innerHTML = totForTaxTotal;\r\n      document.getElementById(\"grossTotal\").innerHTML = totForTaxTotal;\r\n\r\n      //document.getElementById(\"reportTotal\").innerHTML = totForTotal\r\n  }\r\n  const addCommas = num => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  const removeNonNumeric = num => num.toString().replace(/[^0-9]/g, \"\");\r\n  const addDecimal = num => Number(num).toFixed(2)\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      const dateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.startDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDueDateFunction = (data) => {\r\n        const options = {\r\n         \r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric'\r\n        };\r\n        \r\n        var d = new Date(data.endDate);\r\n        var n = d.toLocaleDateString('en-EN', options);\r\n        \r\n        return(\r\n          <td>\r\n            {n}\r\n          </td>\r\n        )\r\n      }\r\n      const dateDifference = (data) => {\r\n        var start = new Date(data.startDate);\r\n        var end = new Date(data.endDate);\r\n        var months;\r\n        months = (end.getFullYear() - start.getFullYear()) * 12;\r\n        months -= start.getMonth();\r\n        months += end.getMonth();\r\n        var n = months <= 0 ? 0 : months\r\n        var decimal = data.total\r\n        var commas = decimal.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        //data.total = commas \r\n        data.total = commas\r\n        var final = commas + '.00'\r\n        //var commas = decimal.toLocaleString(\"en-US\")\r\n        //console.log(commas)\r\n        //data.total = addCommas(data.total)\r\n        if (n == 0) {\r\n          console.log('hit')\r\n          return (\r\n            <td>\r\n              {final}\r\n            </td>\r\n          )\r\n        }\r\n       \r\n    }\r\n    const totalForValues = (data) => {\r\n      var n = \"Total \" + data.to\r\n      return(\r\n        <td>\r\n          <b>{n}</b>\r\n        </td>\r\n      )\r\n    } \r\n    const redirecting = (data) => {\r\n\r\n      history.push({\r\n        pathname: '/aged-recievable-link',\r\n        state: data,\r\n      })\r\n    }\r\n        return(\r\n          <div>\r\n          <table id=\"table\" className=\"table table-striped mt-3\" >\r\n          <thead>\r\n                     <tr>\r\n                       <th>\r\n                       Invoice Date\r\n                       </th>\r\n                       <th>\r\n                       Contact\r\n                       </th>\r\n                       <th>\r\n                       Source\r\n                       </th>\r\n                       <th>\r\n                       Reference\r\n                       </th>\r\n                       <th>\r\n                       Planned Date\r\n                       </th>\r\n                      \r\n                       <th>\r\n                       Gross\r\n                       </th>\r\n                       <th>\r\n                       Balance\r\n                       </th>\r\n                     \r\n                      \r\n                     </tr>\r\n                 </thead>  \r\n              \r\n                 {\r\n                       items.map(contents => (\r\n                         <tbody key={contents._id}>\r\n                           <tr>\r\n                            {dateFunction(contents)} \r\n                             <td>\r\n                               {contents.from}\r\n                             </td>\r\n                             <td>\r\n                               \r\n                             </td>\r\n                             <td>\r\n                               {contents.reference}\r\n                             </td>\r\n                             <td>\r\n                               \r\n                             </td>\r\n                             <td>\r\n                               \r\n                             </td>\r\n                             <td>\r\n                              \r\n                             </td>\r\n                            \r\n                           </tr>\r\n                          \r\n                           </tbody>\r\n                       ))\r\n                       }\r\n                 <tr>\r\n                   <td>\r\n                   <b>Total</b>\r\n                   </td>\r\n                  <td>\r\n\r\n                  </td>\r\n                  <td>\r\n                    \r\n                  </td>\r\n                  <td>\r\n                    \r\n                  </td>\r\n                  <td>\r\n                    \r\n                  </td>\r\n                  <td id = \"totalBalance\">\r\n                    \r\n                  </td>\r\n                  <td id = \"grossTotal\">\r\n                    \r\n                  </td>\r\n                 </tr>\r\n                 <hr />\r\n                \r\n                 <hr />\r\n                 </table>\r\n     </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Payable Invoice Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Dates range: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date Search: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Created Date</option>\r\n                             <option>Due Date</option>\r\n                             <option>Expected Date</option>\r\n                             <option>Invoice Date</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Payable Invoice Summary </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date range</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PayableInvoiceSummaryPurchaseReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction SupplierInvoiceReportPurchaseReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                 <thead>\r\n                          \r\n                            <tr>\r\n                            Reference\r\n                            </tr>\r\n                            <tr>\r\n                            Type\r\n                            </tr>\r\n                            <tr>\r\n                            From\r\n                            </tr>\r\n                            <tr>\r\n                            Date\r\n                            </tr>\r\n                            <tr>\r\n                            Due Date\r\n                            </tr>\r\n                            <tr>\r\n                            Planned Date\r\n                            </tr>\r\n                            <tr>\r\n                            Paid Date\r\n                            </tr>\r\n                            <tr>\r\n                            Invoice Total\r\n                            </tr>\r\n                            <tr>\r\n                            Paid\r\n                            </tr>\r\n                            <tr>\r\n                            Due\r\n                            </tr>\r\n                           \r\n                            <tr>\r\n                            Status\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Supplier Invoice Report</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Dates: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Any Date</option>\r\n                             <option>Invoice Date</option>\r\n                             <option>Due Date</option>\r\n                             <option>Expected Date</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.errors.reference && formik.touched.reference  ? (<div className='error'>{formik.errors.reference}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Status: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Show All</option>\r\n                             <option>Draft</option>\r\n                             <option>Awaiting Approval</option>\r\n                             <option>Awaiting Payment</option>\r\n                             <option>Paid</option>\r\n                             <option>Void</option>\r\n                             <option>Deleted</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Sort By: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Invoice Number</option>\r\n                             <option>Reference</option>\r\n                             <option>Contact</option>\r\n                             <option>Invoice Date</option>\r\n                             <option>Due Date</option>\r\n                             <option>Paid Date</option>\r\n                             <option>Expected Date</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Currency: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Currency</option>\r\n                            </select>\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Supplier Invoice Report  </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SupplierInvoiceReportPurchaseReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction InventoryItemDetailsReports() {\r\n    const handleUpdate = () => {\r\n\r\n    }\r\n    const handleTableValues = () => {\r\n        \r\n    }\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Inventory Item Details</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: </label>\r\n                          <div style = {{display:'inline-flex'}}>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                          \r\n                            <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                           </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Columns</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Contact</option>\r\n                             <option>Date</option>\r\n                             <option>Description</option>\r\n                             <option>Expense Account</option>\r\n                             <option>Inventory Account</option>\r\n                             <option>Margin</option>\r\n                             <option>Profit per Item</option>\r\n                             <option>QoH Movement</option>\r\n                             <option>Reference</option>\r\n                             <option>Revenue Account</option>\r\n                             <option>Source</option>\r\n                             <option>Unit Cost Price</option>\r\n                             <option>Unit Sale Price</option>\r\n                             <option>Value Movement</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Grouping/Summarising</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None</option>\r\n                             <option>Contract</option>\r\n                             <option>Date</option>\r\n                             <option>Expense Account</option>\r\n                             <option>Inventory Account</option>\r\n                             <option>Margin</option>\r\n                             <option>Item Name</option>\r\n                             <option>Revenue Account</option>\r\n                             <option>Source</option>\r\n                           \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Inventory Item Details  </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoryItemDetailsReports\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction InventoryItemListReports() {\r\n    const handleUpdate = () => {\r\n\r\n    }\r\n    const handleTableValues = () => {\r\n        \r\n    }\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n        <div>\r\n        <div className=\"container-fluid\">\r\n   <Row>\r\n     <Col md=\"12\">\r\n       <Card className=\"card-plain\">\r\n         <CardHeader><h3>Inventory Item List</h3></CardHeader>\r\n         <CardBody>\r\n         <form onSubmit={formik.handleSubmit}>\r\n               <div className=\"mt-3\">\r\n               <h1 className=\"title-dark-big title-head\"></h1>\r\n       <p></p>\r\n       <div className=\"row\">\r\n         <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n         <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n           <div className=\"login-registration-field\">\r\n           \r\n             <hr/>\r\n               <div className=\"modal-body\">\r\n                 <div className=\"row\">\r\n                 <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: </label>\r\n                          <div style = {{display:'inline-flex'}}>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                          \r\n                            <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Today</option>\r\n                             <option>End of last month</option>\r\n                             <option>End of last quarter</option>\r\n                             <option>End of last financial year</option>\r\n                            </select>\r\n                           </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                   <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Columns</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>Average Cost</option>\r\n                        <option>COGS Account</option>\r\n                        <option>COGS Tax Rate</option>\r\n                        <option>Inventory Type</option>\r\n                        <option>Item Code</option>\r\n                        <option>Item Name</option>\r\n                        <option>Purchases Account</option>\r\n                        <option>Purchases Description</option>\r\n                        <option>Purchase Tax Rate</option>\r\n                        <option>Quantity On Hand</option>\r\n                        <option>Sales Account</option>\r\n                        <option>Sales Description</option>\r\n                        <option>Sales Tax Rate</option>\r\n                        <option>Status</option>\r\n                        <option>Total Value</option>\r\n                        <option>Unit Cost Price</option>\r\n                        <option>Unit Sales Price</option>\r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                   <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Grouping/Summarising</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>None</option>\r\n                        <option>COGS Account</option>\r\n                        <option>COGS Tax Rate</option>\r\n                        <option>Inventory Account</option>\r\n                        <option>Inventory Type</option>\r\n                        <option>Purchase Account</option>\r\n                        <option>Purchase Tax Rate</option>\r\n                        <option>Sales Account</option>\r\n                        <option>Sales Tax Rate</option>\r\n                        <option>Status</option>\r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                 \r\n                   <div className=\"col-md-2 pt-4\">\r\n                     <div className=\"form-group\">\r\n                       <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                     </div>\r\n                   </div>\r\n                </div>  \r\n                 <hr />\r\n               </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n               </div>\r\n               </form>\r\n               </CardBody>\r\n               </Card>\r\n               </Col>\r\n               </Row>\r\n               <div className = \"text-center\">\r\n               <h4><b> Inventory Item List  </b></h4>\r\n               <h4>Name</h4>\r\n               <h4>Date</h4>\r\n               </div>\r\n               <div>\r\n                   {handleTableValues()}\r\n               </div>\r\n               </div>\r\n   </div>\r\n   </div>\r\n    )\r\n}\r\n\r\nexport default InventoryItemListReports\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n\r\nfunction InventoryItemSummaryReports() {\r\n    const handleUpdate = () => {\r\n\r\n    }\r\n    const handleTableValues = () => {\r\n        \r\n    }\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Inventory Item Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: </label>\r\n                          <div style = {{display:'inline-flex'}}>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Test</option>\r\n                            </select>\r\n                          \r\n                            <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                           </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Columns</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Adjustments</option>\r\n                             <option>Closing Balance</option>\r\n                             <option>Closing Quantity</option>\r\n                             <option>COGS</option>\r\n                             <option>Inventory Account</option>\r\n                             <option>Item Code</option>\r\n                             <option>Item Name</option>\r\n                             <option>Opening Balance</option>\r\n                             <option>Opening Quanitity</option>\r\n                             <option>Profit</option>\r\n                             <option>Purchases</option>\r\n                             <option>Purchases Account</option>\r\n                             <option>Quanitity Adjusted</option>\r\n                             <option>Quanitity Purchased</option>\r\n                             <option>Quanitity Sold</option>\r\n                             <option>Sales</option>\r\n                             <option>Sales Account</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Grouping/Summarising</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None</option>\r\n                             <option>Inventory Account</option>\r\n                             <option>Inventory Type</option>\r\n                             <option>Purchase Account</option>\r\n                             <option>Sales Account</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Inventory Item Summary  </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoryItemSummaryReports\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction InventoryItemSummaryUntrackedItems() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Item Code</th>\r\n                              <th>Item Name</th>\r\n                              <th>Purchases Price</th>\r\n                              <th>Qty</th>\r\n                              <th>Total </th>\r\n                              <th>Avg</th>\r\n                              <th>Sales Price</th>\r\n                              <th>Qty</th>\r\n                              <th>Total</th>\r\n                              <th>Avg</th>\r\n                              <th>Net Qty</th>\r\n                              <th>Net Total</th>\r\n                              {/*}\r\n                              <th>Action</th>\r\n                              */}\r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Inventory Items Summary Untracked</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"endDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.endDate} />\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n          \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                   \r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoryItemSummaryUntrackedItems\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction SalesByItemsReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                 <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Item</th>\r\n                              <th>Current Unit Price</th>\r\n                              <th>Quantity Sold</th>\r\n                              <th>Total</th>\r\n                              <th>Average Price</th>\r\n                              \r\n                              {/*}\r\n                              <th>Action</th>\r\n                              */}\r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Sales By Items Report</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"endDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.endDate} />\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n          \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Shown by: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Item Code</option>\r\n                             <option>Description</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                   \r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesByItemsReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction DepreciationSchedule2Report() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Name</th>\r\n                              <th>Number</th>\r\n                              <th>Type</th>\r\n                              <th>Cost</th>\r\n                              <th>Rate</th>\r\n                              <th>Purchased</th>\r\n                              <th>Disposed</th>\r\n                              {/*<th>Date First month of year</th>*/}\r\n                              <th>Purchases</th>\r\n                              <th>Depreciation</th>\r\n                              <th>Disposals</th>\r\n                              <th>Accum Depl</th>\r\n                              {/*<th>Current months last day</th>*/}\r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Depreciation Schedule</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date:</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Show Depreciation as:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Show Asset:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Name, number and type</option>\r\n                             <option>Name and number</option>\r\n                             <option>Name</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Depreciation Schedule </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepreciationSchedule2Report\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction DepreciationScheduleReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  \r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Depreciation Schedule</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\" style = {{display:'inline-flex'}}> \r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: Last month</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Columns</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>Accum Dep Account</option>\r\n                        <option>Asset Number</option>\r\n                        <option>Asset Type</option>\r\n                        <option>Averaging Method</option>\r\n                        <option>Capital Gain</option>\r\n                        <option>Closing Accum Dep</option>\r\n                        <option>Closing Value</option>\r\n                        <option>Cost</option>\r\n                        <option>Cost Limit</option>\r\n                        <option>Dep Recovered</option>\r\n                        <option>Dep Start Date</option>\r\n                        <option>Depreciation</option>\r\n                        <option>Disposals</option>\r\n                        <option>Effective Life</option>\r\n                        <option>Expense Account</option>\r\n                        <option>Loss</option>\r\n                        <option>Method</option>\r\n                        <option>Name</option>\r\n                        <option>Opening Accum Dep</option>\r\n                        <option>Opening Value</option>\r\n                        <option>Purchased</option>\r\n                        <option>Purchases</option>\r\n                        <option>Rate</option>\r\n                        <option>Residual Value</option>\r\n                        <option>Sale Price</option>\r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                   <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Grouping/Summarising</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>None</option>\r\n                        <option>Asset Type</option>\r\n                        <option>Cost</option>\r\n                        <option>Cost Account</option>\r\n                        <option>Expense Account</option>\r\n                        <option>Method</option>\r\n                        <option>Rate</option>\r\n                     \r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Depreciation Schedule </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DepreciationScheduleReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction DisposalScheduleReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  \r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Disposal Schedule</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\" style = {{display:'inline-flex'}}> \r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: Last month</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Columns</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                    \r\n                        <option>Asset Number</option>\r\n                        <option>Asset Type</option>\r\n                        <option>Asset Value</option>\r\n                        <option>Averaging Method</option>\r\n                        <option>Capital Gain</option>\r\n                        <option>Cost</option>\r\n                        <option>Cost Limit</option>\r\n                        <option>Dep Recovered</option>\r\n                        <option>Dep Start Date</option>\r\n                        <option>Disposed</option>\r\n                        <option>Effective Life</option>\r\n                        \r\n                        <option>Loss</option>\r\n                        <option>Method</option>\r\n                        <option>Name</option>\r\n                        \r\n                        <option>Purchased</option>\r\n                     \r\n                        <option>Rate</option>\r\n                        <option>Residual Value</option>\r\n                        <option>Sale Price</option>\r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                   <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Grouping/Summarising</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>None</option>\r\n                        <option>Asset Type</option>\r\n                        <option>Cost</option>\r\n                        <option>Cost Account</option>\r\n                       \r\n                        <option>Method</option>\r\n                        <option>Rate</option>\r\n                     \r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Disposal Schedule </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisposalScheduleReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction FixedAssetReconciliationReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Book Value</th>\r\n                              <th>Accum Dep</th>\r\n                              <th>Debits</th>\r\n                              <th>Credits</th>\r\n                              <th>Book Value</th>\r\n                              <th>Accum Dep</th>\r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Fixed Asset Reconciliation</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date:</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Fixed Asset Reconciliation </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FixedAssetReconciliationReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction FixedAssetReconciliationReport2() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n              <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Source</th>\r\n                              <th>Cost Account\t</th>\r\n                              <th>Opening Cost\t</th>\r\n                              <th>Opening Accum Dep</th>\r\n                              <th>Opening Book Value</th>\r\n                              <th>Closing Cost</th>\r\n                              <th>Closing Accum Dep</th>\r\n                              <th>Closing Book Value</th>\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                        <td><b>Total Difference</b></td>\r\n                        </tbody>\r\n                        </table>     \r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Fixed Asset Reconciliation</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\" style = {{display:'inline-flex'}}> \r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: This month</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Columns</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>Accum Dep Credits</option>\r\n                        <option>Asset Dep Debits</option>\r\n                        <option>Closing Accum Dep</option>\r\n                        <option>Closing Book Value</option>\r\n                        <option>Closing Cost</option>\r\n                        <option>Cost Credits</option>\r\n                        <option>Cost Debits</option>\r\n                        <option>Opening Accum Dep</option>\r\n                        <option>Opening Book Value</option>\r\n                        <option>Opening Cost</option>\r\n                        <option>Source</option>\r\n                        \r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                   <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Grouping/Summarising</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>None</option>\r\n                        <option>Asset Type</option>\r\n                        <option>Cost</option>\r\n                        <option>Cost Account</option>\r\n                        <option>Expense Account</option>\r\n                        <option>Method</option>\r\n                        <option>Rate</option>\r\n                     \r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Fixed Asset Reconciliation </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FixedAssetReconciliationReport2\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction AccountSummaryReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Month</th>\r\n                              <th>Actual</th>\r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Account Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Account:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             \r\n                             <option>Current Year Dates</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Current Year Dates</option>\r\n                          \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Budget:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>(None)</option>\r\n                             <option>Overall Budget</option>\r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Account Summary </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountSummaryReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction AccountTransactionsReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              <th>Type</th>\r\n                              <th>Transaction</th>\r\n                              <th>Reference</th>\r\n                              <th>Debit</th>\r\n                              <th>Credit</th>\r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Account Transactions</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Account:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From:</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To:</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Account Transactions </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountTransactionsReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction AccountTransactionsReport2() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              <th>Source</th>\r\n                              <th>Description</th>\r\n                              <th>Reference</th>\r\n                              <th>Debit</th>\r\n                              <th>Credit</th>\r\n                              <th>Running Balance\t</th>\r\n                              <th>Gross</th>\r\n                              <th>Tax</th>\r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Account Transactions</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Account:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                     \r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                     \r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Columns</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Account Code</option>\r\n                             <option>Account Type</option>\r\n                             <option>Credit</option>\r\n                             <option>Date</option>\r\n                             <option>Debit</option>\r\n                             <option>Description</option>\r\n                             <option>Gross</option>\r\n                             <option>Net</option>\r\n                             <option>Reference</option>\r\n                             <option>Related Account</option>\r\n                             <option>Running Balance</option>\r\n                             <option>Source</option>\r\n                             <option>Tax</option>\r\n                             <option>Tax Rate</option>\r\n                             <option>Tax Rate Name</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Grouping/Summarising</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>None</option>\r\n                        <option>Account Code</option>\r\n                        <option>Account Code & Name</option>\r\n                        <option>Account Type</option>\r\n                        <option>Date</option>\r\n                        <option>Gross</option>\r\n                        <option>Net</option>\r\n                        <option>Reference</option>\r\n                        <option>Running Balance</option>\r\n                        <option>Source</option>\r\n                        <option>Tax</option>\r\n                        <option>Tax Rate</option>\r\n                        <option>Tax Rate Name</option>\r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Account Transactions </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountTransactionsReport2\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction BankReconciliationSummaryReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              \r\n                              <th>Description</th>\r\n                              <th>Reference</th>\r\n                              <th>Amount</th>\r\n                             \r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Bank Reconciliation</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Bank Account:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Bank Reconciliation Summary </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BankReconciliationSummaryReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction BankReconciliationSummaryStatementExceptionsReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              \r\n                              <th>Description</th>\r\n                              <th>Date imported into Analytics</th>\r\n                              <th>Reference</th>\r\n                              <th>Reconciled</th>\r\n                              <th>Source</th>\r\n                              <th>Amount</th>\r\n                              <th>Balance</th>\r\n                             \r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Bank Reconciliation</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Bank Account:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Bank Statement </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BankReconciliationSummaryStatementExceptionsReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction BankReconciliationSummaryStatementReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n\r\n                            <tr>\r\n                              <th>Date</th>\r\n                              \r\n                              <th>Description</th>\r\n                              \r\n                              <th>Reference</th>\r\n                              <th>Reconciled</th>\r\n                              <th>Source</th>\r\n                              <th>Reason</th>\r\n                              <th>Amount</th>\r\n                             \r\n                             \r\n                             \r\n                            </tr>\r\n                        </thead>\r\n  \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Bank Reconciliation</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Bank Account:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Statement Exceptions </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BankReconciliationSummaryStatementReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction BankSummaryReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th>Bank Accounts</th>\r\n                              <th>Opening Balance</th>\r\n                              <th>Cash Received</th>\r\n                              <th>Cash Spent</th>\r\n                              <th>Closing Balance</th>\r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n                        <td><b>Total</b></td>\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Bank Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                      \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Bank Summary </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BankSummaryReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction CashValidationCustomerReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  \r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Cash Validation</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Accounts (required)</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: Today </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                     \r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Today</option>\r\n                             <option>End of last month</option>\r\n                             <option>End of last quarter</option>\r\n                             <option>End of last financial year</option>\r\n                             \r\n                             \r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Columns</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Description</option>\r\n                             <option>Name</option>\r\n                             <option>Section Description</option>\r\n                             <option>Value</option>\r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Grouping/Summarising</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>None</option>\r\n                        <option>Bank or Accounting Source</option>\r\n                        \r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                   \r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CashValidationCustomerReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction ContactTransactionsSummaryReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  \r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Contact Transactions - Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Contact (required)</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: This month </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                     \r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Columns</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Description</option>\r\n                             <option>Name</option>\r\n                             <option>Section Description</option>\r\n                             <option>Value</option>\r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Grouping/Summarising</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>None</option>\r\n                        <option>Bank or Accounting Source</option>\r\n                        \r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                   \r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactTransactionsSummaryReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction DetailedAccountTransactionReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th>Account Code</th>\r\n                              <th>Account Name</th>\r\n                              <th>Date</th>\r\n                              <th>Type</th>\r\n                              <th>Transaction</th>\r\n                              <th>Reference</th>\r\n                              <th>Gross</th>\r\n                              <th>Tax</th>\r\n                              <th>Net</th>\r\n                              <th>Tax Rate</th>\r\n                              <th>Tax Name</th>\r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n                        <td><b>Total</b></td>\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Detailed Account Transaction Report</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Sort by: </label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Account Name</option>\r\n                             <option>Account Code</option>\r\n                             <option>Reference</option>\r\n                             <option>Date</option>\r\n                             \r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                       \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Detailed Account Transaction Report </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailedAccountTransactionReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction ForeignCurrencyGainsAndLosses() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th>Balance</th>\r\n                              <th>Balance PKR</th>\r\n                              <th>Realised Gain</th>\r\n                              <th>Unrealised Gain</th>\r\n                              <th>Realised Gain YTD</th>\r\n                              <th>Unrealised Gain YTD</th>\r\n                              <th>FX Exposure</th>\r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Foreign Currency Gains and Losses</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        \r\n                        \r\n                       \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Foreign Currency Gains and Losses </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForeignCurrencyGainsAndLosses\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction GeneralLedger() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th>Account</th>\r\n                              <th>Debit</th>\r\n                              <th>Credit</th>\r\n                              <th>Net Movement</th>\r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>General Ledger Report</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Sort by:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Account Name</option>\r\n                             <option>Account Code</option>\r\n                             \r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                       \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> General Ledger Summary </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralLedger\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nfunction IncomeAndExpensesByContact() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th>Contact</th>\r\n                              <th>Type</th>\r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Income and Expenses by Contact</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: This month </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          \r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Columns</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Account Number</option>\r\n                             <option>Contact</option>\r\n                             <option>Contact Group</option>\r\n                             \r\n                             <option>Type</option>\r\n                            \r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Comapre with</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None</option>\r\n                             <option>1 period</option>\r\n                             <option>2 periods</option>\r\n                             <option>3 periods</option>\r\n                             <option>4 periods</option>\r\n                             <hr />\r\n                             <option>Other</option>\r\n                            \r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Grouping/Summarising</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None</option>\r\n                             <option>Account Number</option>\r\n                             <option>Contact</option>\r\n                             <option>Contact Group</option>\r\n                             <option>Type</option>\r\n                             <hr />\r\n                             <option>Other</option>\r\n                            \r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Income and Expenses by Contact </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeAndExpensesByContact\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction JournalReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th>Account</th>\r\n                              <th>Debit</th>\r\n                              <th>Credit</th>\r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Journal Report</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Order by:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Journal ID</option>\r\n                             <option>Journal date</option>\r\n                             \r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                       \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Journal Report </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation, Link} from \"react-router-dom\";\r\nimport { getAllSalesInvoiceAccountsValuesController } from '../../../Apis/ApiForSalesInvoice';\r\nimport { getAllPurchaseInvoiceAccountsValuesController } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { getAllSalesAndPurchaseInvoiceAccountsValuesController } from '../../../Apis/ApiForAllSalesAndPurchase';\r\n\r\nfunction TrialBalanceReport() {\r\n\r\n  const [items, setItems] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchItems = async function() {\r\n      const contents = await getAllSalesAndPurchaseInvoiceAccountsValuesController()\r\n      setItems(contents)\r\n      console.log(items)\r\n    }\r\n    fetchItems()\r\n  }, []);\r\n\r\n\r\n   \r\n   const handlingAssetData = (data) => {\r\n\r\n    if((data.accountType == \"Current Asset\") || (data.accountType == \"Fixed Asset\")\r\n    || (data.accountType == \"Inventory\") || (data.accountType == \"Non - Current Asset\") \r\n    || (data.accountType == \"Pre Payment\")){\r\n      return(\r\n        <tr>\r\n          <td>\r\n            {data.from}\r\n          </td>\r\n          <td>\r\n          {data.taxAmount}.00\r\n          </td>\r\n          <td>\r\n           \r\n          </td>\r\n          <td>\r\n          {data.total}.00\r\n          </td>\r\n          <td>\r\n        \r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n   }\r\n\r\n   const handlingEquityData = (data) => {\r\n\r\n    if(data.accountType == \"Equity\"){\r\n      return(\r\n        <tr>\r\n          <td>\r\n            {data.to}\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n            {data.taxAmount}.00\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n        {data.total}.00\r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n   }\r\n\r\n   const handlingExpensesData = (data) => {\r\n\r\n    if((data.accountType == \"Depreciation\") || (data.accountType == \"Direct Costs\")\r\n      || (data.accountType == \"Expense\") || (data.accountType == \"Overhead\")){\r\n      return(\r\n        <tr>\r\n          <td>\r\n            {data.from}\r\n          </td>\r\n          <td>\r\n          {data.taxAmount}.00\r\n          </td>\r\n          <td>\r\n           \r\n          </td>\r\n          <td>\r\n          {data.total}.00\r\n          </td>\r\n          <td>\r\n       \r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n   }\r\n\r\n   const handlingLiabilityData = (data) => {\r\n\r\n    if((data.accountType == \"Current Liability\") || (data.accountType == \"Non-Current Liability\")\r\n     ){\r\n      return(\r\n        <tr>\r\n          <td>\r\n            {data.to}\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n            {data.taxAmount}.00\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n        {data.total}.00\r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n   }\r\n\r\n   const handlingRevenueData = (data) => {\r\n\r\n    if((data.accountType == \"Other Income\") || (data.accountType == \"Revenue\")\r\n    || (data.accountType == \"Sales\")\r\n     ){\r\n      return(\r\n        <tr>\r\n          <td>\r\n            {data.to}\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n            {data.taxAmount}.00\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n        {data.total}.00\r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n   }\r\n\r\n   const handlingDAData = (data) => {\r\n\r\n    if((data.accountType == \"Depreciation\") || (data.accountType == \"Amortization\")\r\n    \r\n     ){\r\n      return(\r\n        <tr>\r\n          <td>\r\n            {data.to}\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n            {data.taxAmount}.00\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n        {data.total}.00\r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n   }\r\n\r\n   const handlingInterestData = (data) => {\r\n\r\n    if(data.accountType == \"Interest\"){\r\n      return(\r\n        <tr>\r\n          <td>\r\n            {data.to}\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n            {data.taxAmount}.00\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n        {data.total}.00 \r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n   }\r\n\r\n   const handlingTaxData = (data) => {\r\n\r\n    if(data.accountType == \"Tax\"){\r\n      return(\r\n        <tr>\r\n          <td>\r\n            {data.to}\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n            {data.taxAmount}.00\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          <td>\r\n        {data.total}.00\r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n   }\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n      \r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th>Account</th>\r\n                              <th>Debit</th>\r\n                              <th>Credit</th>\r\n                              <th>YTD Debit</th>\r\n                              <th>YTD Credit</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <p><b>Asset</b></p>  \r\n                          {items != null ? \r\n                            items.map(contents => (\r\n                              <tbody key = {contents._id}>\r\n                                {handlingAssetData(contents)}\r\n                              </tbody>\r\n                              ))\r\n                            :\r\n                            <tbody></tbody>\r\n                            }\r\n                           \r\n    \r\n                           <p><b>Equity</b></p>  \r\n                          {items != null ? \r\n                            items.map(contents => (\r\n                              <tbody key = {contents._id}>\r\n                                {handlingEquityData(contents)}\r\n                              </tbody>\r\n                              ))\r\n                            :\r\n                            <tbody></tbody>\r\n                            }\r\n\r\n                          <p><b>Expenses</b></p>  \r\n                          {items != null ? \r\n                            items.map(contents => (\r\n                              <tbody key = {contents._id}>\r\n                                {handlingExpensesData(contents)}\r\n                              </tbody>\r\n                              ))\r\n                            :\r\n                            <tbody></tbody>\r\n                            }\r\n\r\n                          <p><b>Liability</b></p>  \r\n                          {items != null ? \r\n                            items.map(contents => (\r\n                              <tbody key = {contents._id}>\r\n                                {handlingLiabilityData(contents)}\r\n                              </tbody>\r\n                              ))\r\n                            :\r\n                            <tbody></tbody>\r\n                            }\r\n\r\n                          <p><b>Revenue</b></p>  \r\n                          {items != null ? \r\n                            items.map(contents => (\r\n                              <tbody key = {contents._id}>\r\n                                {handlingRevenueData(contents)}\r\n                              </tbody>\r\n                              ))\r\n                            :\r\n                            <tbody></tbody>\r\n                            }\r\n\r\n                          <p><b>D & A</b></p>  \r\n                          {items != null ? \r\n                            items.map(contents => (\r\n                              <tbody key = {contents._id}>\r\n                                {handlingDAData(contents)}\r\n                              </tbody>\r\n                              ))\r\n                            :\r\n                            <tbody></tbody>\r\n                            }\r\n\r\n                            \r\n                          <p><b>Interest</b></p>  \r\n                          {items != null ? \r\n                            items.map(contents => (\r\n                              <tbody key = {contents._id}>\r\n                                {handlingInterestData(contents)}\r\n                              </tbody>\r\n                              ))\r\n                            :\r\n                            <tbody></tbody>\r\n                            }\r\n\r\n                               \r\n                          <p><b>Tax</b></p>  \r\n                          {items != null ? \r\n                            items.map(contents => (\r\n                              <tbody key = {contents._id}>\r\n                                {handlingTaxData(contents)}\r\n                              </tbody>\r\n                              ))\r\n                            :\r\n                            <tbody></tbody>\r\n                            }\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Trial Balance</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                       \r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Sort by:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Account Name</option>\r\n                             <option>Account Code</option>\r\n                             \r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                       \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Trial Balance </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrialBalanceReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n\r\nfunction TrialBalanceReport2() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th>Account Code</th>\r\n                              <th>Account</th>\r\n                              <th>Account Type</th>\r\n                              <th>Debit</th>\r\n                              <th>Credit</th>\r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Trial Balance</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: End of last financial year</label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                     \r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Today</option>\r\n                             <option>End of last month</option>\r\n                             <option>End of last quarter</option>\r\n                             <option>End of last financial year</option>\r\n                             \r\n                             \r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Columns</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Account </option>\r\n                             <option>Account Code</option>\r\n                             <option>Account Type</option>\r\n                             <option>Credit</option>\r\n                             <option>Debit</option>\r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Comapre with</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None</option>\r\n                             <option>1 period</option>\r\n                             <option>2 periods</option>\r\n                             <option>3 periods</option>\r\n                             <option>4 periods</option>\r\n                             <hr />\r\n                             <option>Other</option>\r\n                            \r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                       \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Trial Balance </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrialBalanceReport2\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction DuplicateStatementLinesReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                 \r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Duplicate Statement Lines</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Accounts (required)</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Actual</option>\r\n                             <option>Estimated</option>\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: Today </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                         \r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                     \r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Columns</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Analysis Code</option>\r\n                             <option>Code</option>\r\n                             <option>Date</option>\r\n                             \r\n                             <option>Particulars</option>\r\n                             <option>Payee</option>\r\n                             <option>Receieved</option>\r\n                             <option>Reference</option>\r\n                             \r\n                             <option>Spent</option>\r\n                             <option>Status</option>\r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                       \r\n                      \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Duplicate Statement Lines </b></h4>\r\n                    <h4>Name</h4>\r\n                    <h4>Date</h4>\r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DuplicateStatementLinesReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { getPurchaseInvoices } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { getSalesInvoices } from '../../../Apis/ApiForSalesInvoice';\r\nimport { getCurrentAssetsInvoices } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { getNonCurrentAssetsInvoices } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { getFixedAssetsInvoices } from '../../../Apis/ApiForPurchaseInvoice';\r\nimport { getCurrentLiabilityInvoices } from '../../../Apis/ApiForSalesInvoice';\r\nimport { getNonCurrentLiabilityInvoices } from '../../../Apis/ApiForSalesInvoice';\r\nimport { getEquityInvoices } from '../../../Apis/ApiForSalesInvoice';\r\n\r\nfunction BalanceSheetReport() {\r\n   \r\n    const location = useLocation();\r\n    const editorRef = useRef(null);\r\n    const history = useHistory()\r\n    const [items, setItems] = useState([])\r\n    const [sales, setSales] = useState()\r\n    const [purchaseValues, setPurchaseValues] = useState([])\r\n    const [salesValues, setSalesValues] = useState([])\r\n    const [currentAssetValues, setcurrentAssetValues] = useState([])\r\n    const [nonCurrentAssetValues, setNonCurrentAssetValues] = useState([])\r\n    const [fixedAssetValues, setFixedAssetValues] = useState([])\r\n    const [currentLiabilityValues, setCurrentLiabilityValues] = useState([])\r\n    const [nonCurrentLiabilityValues, setNonCurrentLiabilityValues] = useState([])\r\n    const [equityValues, setEquityValues] = useState([])\r\n    const [totalPurchase, setTotalPurchase] = useState()\r\n    const [totalSales, setTotalSales] = useState()\r\n    const [totalCurrentAssetValues, setTotalCurrentAssetValues] = useState()\r\n    const [totalNonCurrentAssetValues, setTotalNonCurrentAssetValues] = useState()\r\n    const [totalFixedAssetValues, setTotalFixedAssetValues] = useState()\r\n    const [totalOfAllAssetsValues, setTotalOfAllAssetsValues] = useState()\r\n    const [totalCurrentLiabilityValues, setTotalCurrentLiabilityValues] = useState()\r\n    const [totalNonCurrentLiabilityValues, setTotalNonCurrentLiabilityValues] = useState()\r\n    const [totalOfAllLiabilityValues, setTotalOfAllLiabilityValues] = useState()\r\n    const [totalEquityValues, setTotalEquityValues] = useState()\r\n    const [grossProfit, setGrossProfit] = useState()\r\n    const [taxRates, setTaxRates] = useState()\r\n    \r\n\r\n   \r\n    useEffect(() => {\r\n      const fetchPurchase = async () => {\r\n        const contents = await getPurchaseInvoices()\r\n        setPurchaseValues(contents);\r\n      }\r\n      const fetchSales = async () => {\r\n        const contents = await getSalesInvoices()\r\n        setSalesValues(contents);\r\n      }\r\n      const fetchCurrentAssets = async () => {\r\n        const contents = await getCurrentAssetsInvoices()\r\n        setcurrentAssetValues(contents);\r\n      }\r\n      const fetchNonCurrentAssets = async () => {\r\n        const contents = await getNonCurrentAssetsInvoices()\r\n        setNonCurrentAssetValues(contents);\r\n      }\r\n      const fetchFixedAssets = async () => {\r\n        const contents = await getFixedAssetsInvoices()\r\n        setFixedAssetValues(contents);\r\n      }\r\n      const fetchCurrentLiability = async () => {\r\n        const contents = await getCurrentLiabilityInvoices()\r\n        setCurrentLiabilityValues(contents);\r\n      }\r\n      const fetchNonCurrentLiability = async () => {\r\n        const contents = await getNonCurrentLiabilityInvoices()\r\n        setNonCurrentLiabilityValues(contents);\r\n      }\r\n      const fetchEquityValues = async () => {\r\n        const contents = await getEquityInvoices()\r\n        setEquityValues(contents);\r\n      }\r\n\r\n      fetchPurchase()\r\n      fetchSales()\r\n      fetchCurrentAssets()\r\n      fetchNonCurrentAssets()\r\n      fetchFixedAssets()\r\n      fetchCurrentLiability()\r\n      fetchNonCurrentLiability()\r\n      fetchEquityValues()\r\n\r\n    }, []);\r\n\r\n    var count = 0\r\n    const timerId = setTimeout(() => {\r\n        sumOfValues()\r\n      }, 4000);\r\n\r\n    const sumOfValues = () => {\r\n        var arrForTotalSales = [];\r\n        var arrForTotalPurchase = [];\r\n        var arrForTotalFixedAssets = [];\r\n        var arrForTotalCurrentAssets = [];\r\n        var arrForTotalNonCurrentAssets = [];\r\n        var arrForTotalCurrentLiability = [];\r\n        var arrForTotalNonCurrentLiability = [];\r\n        var arrForTotalEquity = [];\r\n        var totForFixedAssets = 0;\r\n        var totForCurrentAssets = 0;\r\n        var totForNonCurrentAssets = 0;\r\n        var totForPurchase = 0;\r\n        var totForSales = 0;\r\n        var totForCurrentLiability = 0;\r\n        var totForNonCurrentLiability = 0;\r\n        var totForEquity = 0;\r\n        \r\n        for(var i=0;i<purchaseValues.length;i++){\r\n            arrForTotalPurchase.push(purchaseValues[i].total)\r\n        }\r\n        for(var i=0;i<salesValues.length;i++){\r\n          arrForTotalSales.push(salesValues[i].total)\r\n        }\r\n        for(var i=0;i<currentAssetValues.length;i++){\r\n          arrForTotalCurrentAssets.push(currentAssetValues[i].total)\r\n        }\r\n        for(var i=0;i<nonCurrentAssetValues.length;i++){\r\n          arrForTotalNonCurrentAssets.push(nonCurrentAssetValues[i].total)\r\n        }\r\n        for(var i=0;i<fixedAssetValues.length;i++){\r\n          arrForTotalFixedAssets.push(fixedAssetValues[i].total)\r\n        }\r\n        for(var i=0;i<currentLiabilityValues.length;i++){\r\n          arrForTotalCurrentLiability.push(currentLiabilityValues[i].total)\r\n        }\r\n        for(var i=0;i<nonCurrentLiabilityValues.length;i++){\r\n          arrForTotalNonCurrentLiability.push(nonCurrentLiabilityValues[i].total)\r\n        }\r\n        for(var i=0;i<equityValues.length;i++){\r\n          arrForTotalEquity.push(equityValues[i].total)\r\n        }\r\n        for(var i=0;i<purchaseValues.length;i++){\r\n          totForPurchase +=  parseInt(arrForTotalPurchase[i]);\r\n        }\r\n        for(var i=0;i<salesValues.length;i++){\r\n          totForSales +=  parseInt(arrForTotalSales[i]);\r\n        }\r\n        for(var i=0;i<currentAssetValues.length;i++){\r\n          totForCurrentAssets +=  parseInt(arrForTotalCurrentAssets[i]);\r\n        }\r\n        for(var i=0;i<nonCurrentAssetValues.length;i++){\r\n          totForNonCurrentAssets +=  parseInt(arrForTotalNonCurrentAssets[i]);\r\n        }\r\n        for(var i=0;i<fixedAssetValues.length;i++){\r\n          totForFixedAssets +=  parseInt(arrForTotalFixedAssets[i]);\r\n        }\r\n        for(var i=0;i<currentLiabilityValues.length;i++){\r\n          totForCurrentLiability +=  parseInt(arrForTotalCurrentLiability[i]);\r\n        }\r\n        for(var i=0;i<nonCurrentLiabilityValues.length;i++){\r\n          totForNonCurrentLiability +=  parseInt(arrForTotalNonCurrentLiability[i]);\r\n        }\r\n        for(var i=0;i<equityValues.length;i++){\r\n          totForEquity +=  parseInt(arrForTotalEquity[i]);\r\n        }\r\n        //document.getElementById(\"totalSales\").innerHTML = totForPurchase;\r\n        setTotalPurchase(totForPurchase)\r\n        setTotalSales(totForSales)\r\n        setTotalCurrentAssetValues(totForCurrentAssets)\r\n        setTotalNonCurrentAssetValues(totForNonCurrentAssets)\r\n        setTotalFixedAssetValues(totForFixedAssets)\r\n        setTotalCurrentLiabilityValues(totForCurrentLiability)\r\n        setTotalNonCurrentLiabilityValues(totForNonCurrentLiability)\r\n        setTotalEquityValues(totForEquity)\r\n        setTotalOfAllAssetsValues(totForFixedAssets + totForCurrentAssets + totForNonCurrentAssets)\r\n        setTotalOfAllLiabilityValues(totForCurrentLiability + totForNonCurrentLiability)\r\n        setGrossProfit(totForSales - totForPurchase)\r\n    }\r\n    const onSubmit = async (data) => {\r\n        console.log(data)\r\n        \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"container-fluid\">\r\n   <Row>\r\n     <Col md=\"12\">\r\n       <Card className=\"card-plain\">\r\n         <CardHeader><h3>Balance Sheet</h3></CardHeader>\r\n         <CardBody>\r\n         <form onSubmit={formik.handleSubmit}>\r\n               <div className=\"mt-3\">\r\n               <h1 className=\"title-dark-big title-head\"></h1>\r\n       <p></p>\r\n       <div className=\"row\">\r\n         <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n         <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n           <div className=\"login-registration-field\">\r\n           \r\n             <hr/>\r\n               <div className=\"modal-body\">\r\n                 <div className=\"row\">\r\n             \r\n                 <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date: End of last financial year </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                 \r\n                   <div className=\"col-md-2\">\r\n                     <div className=\"form-group\">\r\n                     <label htmlFor>Compare with</label>\r\n                     <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                        <option>None</option>\r\n                        <option>1 year</option>\r\n                        <option>2 years</option>\r\n                        <option>3 years</option>\r\n                        <option>4 years</option>\r\n                        <option>Enter a different number</option>\r\n                        <hr />\r\n                        <option>Day</option>\r\n                        \r\n                       </select>\r\n                     {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                     </div>\r\n                   </div>\r\n                   <div className=\"col-md-2 pt-4\">\r\n                     <div className=\"form-group\">\r\n                       \r\n                     </div>\r\n                   </div>\r\n                </div>  \r\n                 <hr />\r\n               </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n               </div>\r\n               </form>\r\n               </CardBody>\r\n               </Card>\r\n               </Col>\r\n               </Row>\r\n               <div className = \"text-center\">\r\n               <h4><b> Balance Sheet </b></h4>\r\n               <h4>Name</h4>\r\n               <h4>Date</h4>\r\n               </div>\r\n               <div>\r\n                   \r\n               </div>\r\n               </div>\r\n   </div>\r\n)\r\n}\r\n\r\nexport default BalanceSheetReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\nimport {getAllSalesAndPurchaseInvoiceAccountsValuesController} from \"../../../Apis/ApiForAllSalesAndPurchase\"\r\n\r\nfunction BudgetManagerReport() {\r\n\r\n    const location = useLocation();\r\n    const editorRef = useRef(null);\r\n    const history = useHistory()\r\n    const [items, setItems] = useState([])\r\n    const [valueForDecimal, setValueForDecimal] = useState('')\r\n    useEffect(() => {\r\n      const fetchItems = async function() {\r\n        const contents = await getAllSalesAndPurchaseInvoiceAccountsValuesController()\r\n        setItems(contents)\r\n      }\r\n      fetchItems()\r\n    }, []);\r\n\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n    \r\n    const handleIncome = () => {\r\n      \r\n      return(\r\n        <tr>\r\n          <td>\r\n            \r\n          </td>\r\n        </tr>\r\n      )\r\n    }\r\n  \r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 \" >\r\n                        <thead>\r\n                            <tr>\r\n                              <th>\r\n                              \r\n                              </th>\r\n                              <th>\r\n                                Variance\r\n                              </th>\r\n                              <th>\r\n                                Variance %\r\n                              </th>\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n\r\n                          <tr>\r\n                            <td><b>Income</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Total Income</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                             <td>\r\n                              \r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Less Cost of Sales</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                           <td>\r\n                              \r\n                           </td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Total Cost of Sales</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Gross Profit</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Less Operating Expenses</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                           <td>\r\n                              \r\n                           </td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Total Operating Expenses</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Total Expenses</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Net Profit</b></td>\r\n                          </tr>\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Budget Manager</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                       \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Select Budget</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Overall Budget</option>\r\n                      \r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Start</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Dates </option>\r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Actuals</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>3 months </option>\r\n                             <option>6 months </option>\r\n                             <option>12 months </option>\r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Period</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>3 months </option>\r\n                             <option>6 months </option>\r\n                             <option>12 months </option>\r\n                             <option>24 months </option>\r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        \r\n                       \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Overall Budget </b></h4>\r\n                  \r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BudgetManagerReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction BudgetSummaryReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3\" >\r\n                        <thead>\r\n                            <tr>\r\n                              <th>Account</th>\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                        <tr>\r\n                            <td><b>Gross Profit</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Total Expenses</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Net Profit</b></td>\r\n                        </tr>\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Overall Budget</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                       \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Budget</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Overall Budget</option>\r\n                      \r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Dates </option>\r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Period:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>1 month </option>\r\n                             <option>2 months </option>\r\n                             <option>3 months </option>\r\n                             <option>6 months </option>\r\n                             <option>12 months </option>\r\n                             <option>24 months </option>\r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Number of periods to show:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>1 month </option>\r\n                             <option>2 months </option>\r\n                             <option>3 months </option>\r\n                             <option>4 months </option>\r\n                             <option>5 months </option>\r\n                             <option>6 months </option>\r\n                             <option>7 months </option>\r\n                             <option>8 months </option>\r\n                             <option>9 months </option>\r\n                             <option>10 months </option>\r\n                             <option>11 months </option>\r\n                             <option>12 months </option>\r\n                             \r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                       \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Overall Budget </b></h4>\r\n                    <h4>Budget Summary </h4>\r\n                    <h4>Name </h4>\r\n                    <h4>Date </h4>\r\n                  \r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BudgetSummaryReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction BudgetVarianceReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 \" >\r\n                        <thead>\r\n                            <tr>\r\n                            <th></th>\r\n                            <th>Actual</th>\r\n                            <th>Budget</th>\r\n                            <th>Var (Currency)</th>\r\n                            <th>Var %</th>\r\n                            <th>YTD Actual</th>\r\n                            <th>YTD Budget</th>\r\n                            <th>Var (Currency)</th>\r\n                            <th>Var %</th>\r\n                            </tr>\r\n                        </thead>  \r\n                        <tbody>\r\n                          <tr>\r\n                            <td><b>Gross Profit</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td><b>Less Operating Expenses</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td>Foreign Currency Gains and Losses</td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Total Operating Expenses</b></td>\r\n                          </tr>\r\n                          <tr>\r\n                          <td><b>Net Profit</b></td>\r\n                          </tr>\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Budget Variance</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                       \r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Dates </option>\r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Period:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>1 month </option>\r\n                             <option>2 months </option>\r\n                             <option>3 months </option>\r\n                             <option>6 months </option>\r\n                             <option>12 months </option>\r\n                            \r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Compare With:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>Previous 1 Period </option>\r\n                             <option>Previous 2 Periods </option>\r\n                             <option>Previous 3 Periods</option>\r\n                             <option>Previous 4 Periods </option>\r\n                             <option>Previous 5 Periods </option>\r\n                             <option>Previous 6 Periods </option>\r\n                             <option>Previous 7 Periods </option>\r\n                             <option>Previous 8 Periods </option>\r\n                             <option>Previous 9 Periods </option>\r\n                             <option>Previous 10 Periods </option>\r\n                             <option>Previous 11 Periods </option>\r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Budget</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Overall Budget</option>\r\n                      \r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Budget Variance </b></h4>\r\n                    \r\n                    <h4>Name </h4>\r\n                    <h4>Date </h4>\r\n                  \r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BudgetVarianceReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction BusinessPerfomanceReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th></th>\r\n                              \r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n                        <tr>\r\n                            <td><b>Income</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Less Cost of Sales</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Gross Profit</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Net Profit</b></td>\r\n                        </tr>\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Business Perfomance</h3></CardHeader>\r\n              <CardBody>\r\n            \r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    \r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BusinessPerfomanceReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction CashSummaryReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th></th>\r\n                              \r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n                        <tr>\r\n                            <td><b>Income</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <b>Total Income</b> \r\n                          </td> \r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Less Cost of Sales</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            \r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            <b>Total Operating Expenses</b> \r\n                          </td> \r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Operating Surplus (Deficit)</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Plus Non Operating Movements</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            \r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td><b>Total Non Operating Movements</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td><b>Plus Movements in Equity</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            \r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                           <td><b>Total Movements in Equity</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Tax Movements</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            \r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Net Tax Movements</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Foreign Currency Gains and Losses</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>\r\n                            \r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Total Foreign Currency Gains and Losses</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Net Cash Movement</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Summary</b></td>\r\n                        </tr>\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Cash Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                       \r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Dates </option>\r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Period:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>1 month </option>\r\n                             <option>2 months </option>\r\n                             <option>3 months </option>\r\n                             <option>6 months </option>\r\n                             <option>12 months </option>\r\n                            \r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Compare With:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>Average </option>\r\n                             <option>Previous 1 Period </option>\r\n                             <option>Previous 2 Periods </option>\r\n                             <option>Previous 3 Periods</option>\r\n                             <option>Previous 4 Periods </option>\r\n                             <option>Previous 5 Periods </option>\r\n                             <option>Previous 6 Periods </option>\r\n                             <option>Previous 7 Periods </option>\r\n                             <option>Previous 8 Periods </option>\r\n                             <option>Previous 9 Periods </option>\r\n                             <option>Previous 10 Periods </option>\r\n                             <option>Previous 11 Periods </option>\r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Cash Summary </b></h4>\r\n                    \r\n                    <h4>Name </h4>\r\n                    <h4>Date </h4>\r\n                  \r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CashSummaryReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction ExecutiveSummaryReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th></th>\r\n                              \r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n                        <tr>\r\n                            <td><b>Cash</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Profitability</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Balance Sheet</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Income</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Performance</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Position</b></td>\r\n                        </tr>\r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Executive Summary</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                       \r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Dates </option>\r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Show:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>Summary Only </option>\r\n                             <option>Summary and Ratios </option>\r\n               \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                     \r\n                        \r\n                        \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Executive Summary </b></h4>\r\n                    \r\n                    <h4>Name </h4>\r\n                    <h4>Date </h4>\r\n                  \r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExecutiveSummaryReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction MovementsInEquityReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th></th>\r\n                              \r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n                        <tr>\r\n                            <td><b>Equity at start of period</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Surplus and Revaluations</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Total Surplus and Revaluations</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Equity at end of period</b></td>\r\n                        </tr>\r\n                      \r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Movements in Equity</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                       \r\n                        \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Balance Date:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>Dates </option>\r\n                             \r\n\r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Compare To:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>Previous year </option>\r\n                             \r\n               \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                     \r\n                        \r\n                        \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Movements in Equity </b></h4>\r\n                    \r\n                    <h4>Name </h4>\r\n                    <h4>Date </h4>\r\n                  \r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovementsInEquityReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction MovementsInEquityReport2() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th></th>\r\n                              \r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n                        <tr>\r\n                            <td><b>Equity</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Opening Balance</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Current Year Earnings </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Total Equity</b></td>\r\n                        </tr>\r\n                        \r\n                      \r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Movements in Equity</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: This month </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                     \r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                       \r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Compare With:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>1 Period </option>\r\n                             <option>2 Periods </option>\r\n                             <option>3 Periods </option>\r\n                             <option>4 Periods </option>\r\n                             <hr />\r\n                             <option>Other  </option>\r\n                             \r\n               \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                     \r\n                        \r\n                        \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Movements in Equity </b></h4>\r\n                    \r\n                    <h4>Name </h4>\r\n                    <h4>Date </h4>\r\n                  \r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovementsInEquityReport2\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nfunction StatementOfCashFlowsReport() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th></th>\r\n                              \r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n                        <tr>\r\n                            <td><b>Operating Activities</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Investing Activities</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Financing Activities</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Cash and Cash Equivalents</b></td>\r\n                        </tr>\r\n                        \r\n                      \r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Statement of Cash Flows</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Date range: This month </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                     \r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>This month</option>\r\n                             <option>This quarter</option>\r\n                             <option>This financial year</option>\r\n                             <hr />\r\n                             <option>Last month</option>\r\n                             <option>Last quarter</option>\r\n                             <option>Last financial year</option>\r\n                             <hr />\r\n                             <option>Month to date</option>\r\n                             <option>Quarter to date</option>\r\n                             <option>Year to date</option>\r\n                             <hr />\r\n                            </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                       \r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Compare With:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             <option>None </option>\r\n                             <option>1 Period </option>\r\n                             <option>2 Periods </option>\r\n                             <option>3 Periods </option>\r\n                             <option>4 Periods </option>\r\n                             <hr />\r\n                             <option>Other  </option>\r\n                             \r\n               \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                     \r\n                        \r\n                        \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Statement of Cash Flows </b></h4>\r\n                    \r\n                    <h4>Name </h4>\r\n                    <h4>Date </h4>\r\n                  \r\n                    </div>\r\n                    <div>\r\n                        {handleTableValues()}\r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatementOfCashFlowsReport\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Formik, FormikConsumer, useFormik } from 'formik'\r\nimport { Card, CardHeader, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\r\n\r\n\r\nfunction TrackingSummary() {\r\n    const onSubmit = async (data) => {\r\n       \r\n        //history.push(\"/placement-question-details\")\r\n      }\r\n    const handleUpdate = async (data) => {\r\n\r\n    }\r\n\r\n    const handleTableValues = () => {\r\n        return(\r\n            <div>\r\n                  <table id=\"table\" className=\"table table-striped mt-3 text-center\" >\r\n                        <thead>\r\n                        \r\n                            <tr>\r\n                              <th></th>\r\n                              \r\n                              \r\n                         \r\n                              \r\n                             \r\n                            </tr>\r\n                        </thead>  \r\n                        \r\n                        <tbody>\r\n                        <tr>\r\n                            <td><b>Operating Activities</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Financing Activities</b></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><b>Cash and Cash Equivalents</b></td>\r\n                        </tr>\r\n                        \r\n                      \r\n                        </tbody>\r\n                        </table>\r\n            </div>\r\n        )\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: '',\r\n            from: '',\r\n            startDate: '',\r\n            dueDate: '',\r\n            invoice: '',\r\n            reference: '',\r\n            item: '',\r\n            description:'',\r\n            qty: '',\r\n            unitPrice: '',\r\n            disc: '',\r\n            account:'',\r\n            taxRate: '',\r\n            amountPkr: '',\r\n            name: '',\r\n            total:'',\r\n            accountPaid: '',\r\n            amountCredit: '',\r\n            amountDuePaid:'',\r\n            amountTotalDebit:'',\r\n            transactionType: '',\r\n            amountPaidAmountValue: '',\r\n            amountPaid:'',\r\n            datePaid:'',\r\n            paidTo: '',\r\n            referencePaid: '',\r\n            datePurchaseOrSalesTaxVat:'',\r\n            accountNamePurchaseOrSalesTaxVat:'',\r\n            valuePurchaseTaxVatDebit:'',\r\n            valueSalesTaxVatCredit:'',\r\n        },\r\n\r\n        //4 Make onSubmit propert from handle what happens from data on form submisison\r\n\r\n        onSubmit: values => {\r\n\r\n          \r\n          //createTodo(formik.values)\r\n          //redirecting \r\n          //history.push(\"/\")\r\n\r\n          onSubmit(formik.values)\r\n\r\n        },\r\n        \r\n\r\n        //5 Make validation property\r\n        \r\n        validate: values => {\r\n            \r\n   \r\n            let errors = {}\r\n  \r\n            const letters = /^[A-Za-z ]+$/;\r\n\r\n            const cnic = /^[0-9--]+$/;\r\n\r\n            const phone = /^[0-9]+$/;\r\n\r\n            const symbols = /[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/]/;\r\n            \r\n            if(!values.name){\r\n                errors.headOffice = \"Please fill in School Head Office Name\"\r\n            }else if (!letters.test(values.headOfficeName)) {\r\n                errors.headOffice = \"Please enter a valid School Head Office Name\"\r\n            }\r\n            if(!values.startDate){\r\n              errors.startDate = \"Please fill in Starting Date\"\r\n            }\r\n            if(!values.dueDate){\r\n              errors.dueDate = \"Please fill in Due Date\"\r\n            }\r\n            if(!values.productionDeadline){\r\n                errors.productionDeadline = \"Please fill in Production Deadline\"\r\n            }\r\n            if(!values.deliveryDate){\r\n                errors.size = \"Please fill in Delivery Date\"\r\n            return errors\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    })\r\n    return (\r\n        <div>\r\n             <div className=\"container-fluid\">\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Card className=\"card-plain\">\r\n              <CardHeader><h3>Statement of Cash Flows</h3></CardHeader>\r\n              <CardBody>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                    <div className=\"mt-3\">\r\n                    <h1 className=\"title-dark-big title-head\"></h1>\r\n            <p></p>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-1 col-md-1 col-sm-6 col-xs-6\" />\r\n              <div className=\"col-lg-10 col-md-10 col-sm-12 col-xs-12\">\r\n                <div className=\"login-registration-field\">\r\n                \r\n                  <hr/>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"row\">\r\n                     \r\n                      \r\n                     \r\n                       \r\n                      <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>From: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>To: </label>\r\n                          <input className=\"form-control\" type=\"date\" name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate} />\r\n                          {formik.touched.startDate ? (<div className='error'>{formik.errors.startDate}</div>) : null}\r\n                          \r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Account Groups: </label>\r\n                          <select name=\"accountType\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.accountType} className=\"form-control\" required>\r\n                            <option value=\"selectAccountType\">Select Account Type</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >ASSETS</option>\r\n                            <option value=\"Current Asset\">Current Asset</option>\r\n                            <option value=\"Fixed Asset\">Fixed Asset</option>\r\n                            <option value=\"Inventory\">Inventory</option>\r\n                            <option value=\"Non - Current Asset\">Non - Current Asset</option>\r\n                            <option value=\"Pre Payment\">Pre Payment</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >EQUITY</option>\r\n                            <option value=\"Equity\">Equity</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >EXPENSES</option>\r\n                            <option value=\"Depreciation\">Depreciation</option>\r\n                            <option value=\"Direct Costs\">Direct Costs</option>\r\n                            <option value=\"Expense\">Expense</option>\r\n                            <option value=\"Overhead\">Overhead</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >LIABILITY</option>\r\n                            <option value=\"Current Liability\">Current Liability</option>\r\n                            <option value=\"Non-Current Liability\">Non-Current Liability</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >REVENUE</option>\r\n                            <option value=\"Other Income\">Other Income</option>\r\n                            <option value=\"Revenue\">Revenue</option>\r\n                            <option value=\"Sales\">Sales</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >D & A</option>\r\n                            <option >Depreciation</option>\r\n                            <option >Amortization</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >Interest</option>\r\n                            <option >Interest</option>\r\n                            <option style={{background:\"grey\", color:\"white\", fontWeight:\"bold\"}} disabled >Tax</option>\r\n                            <option >Tax</option>\r\n                          </select>\r\n                          \r\n                          </div>\r\n                        </div>\r\n                       \r\n                      \r\n                        <div className=\"col-md-2\">\r\n                          <div className=\"form-group\">\r\n                          <label htmlFor>Tracking Category:</label>\r\n                          <select className=\"form-control\"  name=\"startDate\" onChange={formik.handleChange}  onBlur={formik.handleBlur} value={formik.values.startDate}>\r\n                             \r\n                            </select>\r\n                          {formik.touched.endDate ? (<div className='error'>{formik.errors.endDate}</div>) : null}\r\n                          </div>\r\n                        </div>\r\n                        \r\n                     \r\n                        \r\n                        \r\n                        <div className=\"col-md-2 pt-4\">\r\n                          <div className=\"form-group\">\r\n                            <button className = \"btn\" onClick = {(e) => handleUpdate(e)}>Update</button>\r\n                          </div>\r\n                        </div>\r\n                     </div>  \r\n                      <hr />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                    </form>\r\n                    </CardBody>\r\n                    </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <div className = \"text-center\">\r\n                    <h4><b> Statement of Cash Flows </b></h4>\r\n                    \r\n                    <h4>Name </h4>\r\n                    <h4>Date </h4>\r\n                  \r\n                    </div>\r\n                    \r\n                    </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrackingSummary\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Header from './Views/Header';\nimport Home from './Views/Home';\nimport Footer from './Views/Footer';\nimport {BrowserRouter as Router, Switch, Link, Route} from 'react-router-dom' \nimport AgedPayableTable from './Views/AgedPayableTable';\nimport AgedReceivablesTable from './Views/AgedReceivablesTable';\nimport SalesInvoice from './Views/SalesInvoice';\nimport Ledger from './Views/Accounting/Advanced/Chart Of Accounts/Ledger';\nimport TaxVatTaxRate from './Views/Sales Overview/Invoices/TaxVatTaxRate';\nimport ManualJournal from './Views/Accounting/Advanced/Journal/ManualJournal';\n\n\n//--- Accounting > Advanced > Chart 0f accounts\n\nimport AllAccounts from './Views/Accounting/Advanced/Chart Of Accounts/AllAccounts';\nimport AddAccount from './Views/Accounting/Advanced/Chart Of Accounts/AddAccount';\n\n\nimport PurchaseOverview from './Views/Sales Overview/Invoices/PurchaseOverview';\nimport NewInvoice from './Views/Sales Overview/Invoices/NewInvoice';\nimport SalesOverwiew from './Views/Sales Overview/Invoices/SalesOverview';\nimport SalesInvoiceDetail from './Views/Sales Overview/Invoices/SalesInvoiceDetail';\n\nimport PurchaseInvoice from './Views/Sales Overview/Invoices/PurchaseInvoice';\nimport PurchaseInvoiceDetail from './Views/Sales Overview/Invoices/PurchaseInvoiceDetail';\n\n//------ Profit and Loss -----------//\n\nimport ProfitAndLoss from './Views/Profit And Loss/ProfitAndLoss';\nimport BalanceSheet from './Views/Balance Sheet/BalanceSheet';\n\n//--- Reports ---//\n\nimport ReportMainPage from './Views/Reports/ReportMainPage';\nimport AgedReceivableViewLink from './Views/Reports/Sales/AgedReceivableViewLink';\n\n//----Reports Sales Tax Report----///\n\nimport SalesTaxReport from './Views/Reports/Sales Tax Report/SalesTaxReport';\n\n//----Reports Sales-----////\n\nimport AgedReceivableDetailsSalesReport from './Views/Reports/Sales/AgedReceivableDetailsSalesReport';\nimport AgedReceivableSalesReport from './Views/Reports/Sales/AgedReceivableSalesReport';\nimport AgedReceivableSummarySalesReport from './Views/Reports/Sales/AgedReceivableSummarySalesReport';\nimport CustomerInvoiceSalesReport from './Views/Reports/Sales/CustomerInvoiceSalesReport';\nimport ReceivableInvoiceDetailSalesReport from './Views/Reports/Sales/ReceivableInvoiceDetailSalesReport';\nimport ReceivableInvoiceSummarySalesReport from './Views/Reports/Sales/ReceivableInvoiceSummarySalesReport';\n\n//----Reports Purchase-----////\n\nimport AgedPayablesDetailsPurchaseReport from './Views/Reports/Purchases/AgedPayablesDetailsPurchaseReport';\nimport AgedPayablesSummaryPurchaseReport from './Views/Reports/Purchases/AgedPayablesSummaryPurchaseReport';\nimport PayableInvoiceDetailPurchaseReport from './Views/Reports/Purchases/PayableInvoiceDetailPurchaseReport';\nimport PayableInvoiceSummaryPurchaseReport from './Views/Reports/Purchases/PayableInvoiceSummaryPurchaseReport';\nimport SupplierInvoiceReportPurchaseReport from './Views/Reports/Purchases/SupplierInvoiceReportPurchaseReport';\n\n//-----Reports Inventory ----////\n\nimport InventoryItemDetailsReports from './Views/Reports/Inventory/InventoryItemDetailsReports';\nimport InventoryItemListReports from './Views/Reports/Inventory/InventoryItemListReports';\nimport InventoryItemSummaryReports from './Views/Reports/Inventory/InventoryItemSummaryReports';\nimport InventoryItemSummaryUntrackedItems from './Views/Reports/Inventory/InventoryItemSummaryUntrackedItems';\nimport SalesByItemsReport from './Views/Reports/Inventory/SalesByItemsReport';\n\n//-----Reports Fixed Asset ----////\n\nimport DepreciationSchedule2Report from './Views/Reports/Fixed Assets/DepreciationSchedule2Report';\nimport DepreciationScheduleReport from './Views/Reports/Fixed Assets/DepreciationScheduleReport';\nimport DisposalScheduleReport from './Views/Reports/Fixed Assets/DisposalScheduleReport';\nimport FixedAssetReconciliationReport from './Views/Reports/Fixed Assets/FixedAssetReconciliationReport';\nimport FixedAssetReconciliationReport2 from './Views/Reports/Fixed Assets/FixedAssetReconciliationReport2';\n\n//-----Reports Accounting ----////\n\nimport AccountSummaryReport from './Views/Reports/Accounting/AccountSummaryReport';\nimport AccountTransactionsReport from './Views/Reports/Accounting/AccountTransactionsReport';\nimport AccountTransactionsReport2 from './Views/Reports/Accounting/AccountTransactionsReport2';\nimport BankReconciliationSummaryReport from './Views/Reports/Accounting/BankReconciliationSummaryReport';\nimport BankReconciliationSummaryStatementExceptionsReport from './Views/Reports/Accounting/BankReconciliationSummaryStatementExceptionsReport';\nimport BankReconciliationSummaryStatementReport from './Views/Reports/Accounting/BankReconciliationSummaryStatementReport';\nimport BankSummaryReport from './Views/Reports/Accounting/BankSummaryReport';\nimport CashValidationCustomerReport from './Views/Reports/Accounting/CashValidationCustomerReport';\nimport ContactTransactionsSummaryReport from './Views/Reports/Accounting/ContactTransactionsSummaryReport';\nimport DetailedAccountTransactionReport from './Views/Reports/Accounting/DetailedAccountTransactionReport';\nimport ForeignCurrencyGainsAndLosses from './Views/Reports/Accounting/ForeignCurrencyGainsAndLosses';\nimport GeneralLedger from './Views/Reports/Accounting/GeneralLedger';\nimport IncomeAndExpensesByContact from './Views/Reports/Accounting/IncomeAndExpensesByContact';\nimport JournalReport from './Views/Reports/Accounting/JournalReport';\nimport TrialBalanceReport from './Views/Reports/Accounting/TrialBalanceReport';\nimport TrialBalanceReport2 from './Views/Reports/Accounting/TrialBalanceReport2';\nimport DuplicateStatementLinesReport from './Views/Reports/Accounting/DuplicateStatementLinesReport';\n\n//----- Reports Financial ----////\n\nimport BalanceSheetReport from './Views/Reports/Financial/BalanceSheetReport';\nimport BudgetManagerReport from './Views/Reports/Financial/BudgetManagerReport';\nimport BudgetSummaryReport from './Views/Reports/Financial/BudgetSummaryReport';\nimport BudgetVarianceReport from './Views/Reports/Financial/BudgetVarianceReport';\nimport BusinessPerfomanceReport from './Views/Reports/Financial/BusinessPerfomanceReport';\nimport CashSummaryReport from './Views/Reports/Financial/CashSummaryReport';\nimport ExecutiveSummaryReport from './Views/Reports/Financial/ExecutiveSummaryReport';\nimport MovementsInEquityReport from './Views/Reports/Financial/MovementsInEquityReport';\nimport MovementsInEquityReport2 from './Views/Reports/Financial/MovementsInEquityReport2';\nimport StatementOfCashFlowsReport from './Views/Reports/Financial/StatementOfCashFlowsReport';\nimport TrackingSummary from './Views/Reports/Financial/TrackingSummary';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/aged-payable-table\" component={AgedPayableTable} />\n          <Route path=\"/aged-receivables-table\" component={AgedReceivablesTable} />\n          <Route path=\"/sales-new-invoice\" component={SalesInvoice} />\n\n          {/*--- Accounting > Advanced > Chart 0f accounts --- */}\n          \n          <Route path = \"/purchase-overview\" component = {PurchaseOverview} />\n          <Route path = \"/sales-overview\" component = {SalesOverwiew} />\n          <Route path = \"/purchase-overview-detail\" component = {PurchaseInvoiceDetail} />\n          <Route path = \"/sales-overview-detail\" component = {SalesInvoiceDetail} />\n          <Route path=\"/chart-of-accounts\" component={AllAccounts} />\n          <Route path=\"/testing-aadd-account\" component={AddAccount} />\n          <Route path=\"/ledger\" component={Ledger} />\n\n          <Route path=\"/new-invoice\" component={NewInvoice} />\n          <Route path=\"/new-purchase-invoice\" component={PurchaseInvoice} />\n          <Route path=\"/new-manual-journal\" component={ManualJournal} />\n\n          {/*--- Testing ----- */}\n\n          <Route path = \"/testing-tax-model\" component={TaxVatTaxRate} />\n          <Route path = \"/profit-loss\" component={ProfitAndLoss} />\n          <Route path = \"/balance-sheet\" component={BalanceSheet} />\n\n\n          {/*--- Reports ---*/}\n\n          <Route path = \"/reports\" component={ReportMainPage} />\n          <Route path = \"/aged-recievable-reports-sales\" component={AgedReceivableSalesReport} />\n          <Route path = \"/aged-recievable-link\" component={AgedReceivableViewLink} />\n          <Route path = \"/aged-recievable-reports-details\" component={AgedReceivableDetailsSalesReport} />\n          <Route path = \"/aged-recievable-reports-summary\" component={AgedReceivableSummarySalesReport} />\n          <Route path = \"/aged-recievable-reports-customerInvoice\" component={CustomerInvoiceSalesReport} />\n          <Route path = \"/aged-recievable-reports-receivableInvoiceDetail\" component={ReceivableInvoiceDetailSalesReport} />\n          <Route path = \"/aged-recievable-reports-receivableInvoiceSummary\" component={ReceivableInvoiceSummarySalesReport} />\n        \n\n          <Route path = \"/sales-tax-reports\" component={SalesTaxReport} />\n\n\n          <Route path = \"/aged-payable-reports-details\" component={AgedPayablesDetailsPurchaseReport} />\n          <Route path = \"/aged-payable-reports-summary\" component={AgedPayablesSummaryPurchaseReport} />\n          <Route path = \"/aged-payable-reports-payableDetail\" component={PayableInvoiceDetailPurchaseReport} />\n          <Route path = \"/aged-payable-reports-invoiceSummary\" component={PayableInvoiceSummaryPurchaseReport} />\n          <Route path = \"/aged-payable-reports-supplierInvoice\" component={SupplierInvoiceReportPurchaseReport} />\n     \n\n\n\n          <Route path = \"/inventory-details-reports\" component={InventoryItemDetailsReports} />\n          <Route path = \"/inventory-list-reports\" component={InventoryItemListReports} />\n          <Route path = \"/inventory-summary-reports\" component={InventoryItemSummaryReports} />\n          <Route path = \"/inventory-summary-untracked-reports\" component={InventoryItemSummaryUntrackedItems} />\n          <Route path = \"/inventory-sales-reports\" component={SalesByItemsReport} />\n        \n\n          <Route path = \"/fixed-assets-depreciation-schedule-2\" component={DepreciationSchedule2Report} />\n          <Route path = \"/fixed-assets-depreciation-schedule\" component={DepreciationScheduleReport} />\n          <Route path = \"/fixed-assets-disporal-schedule\" component={DisposalScheduleReport} />\n          <Route path = \"/fixed-assets-reconciliation\" component={FixedAssetReconciliationReport} />\n          <Route path = \"/fixed-assets-reconciliation-2\" component={FixedAssetReconciliationReport2} />\n\n\n          <Route path = \"/accounting-account-summary-report\" component={AccountSummaryReport} />\n          <Route path = \"/accounting-account-transactions-report\" component={AccountTransactionsReport} />\n          <Route path = \"/accounting-account-transactions-report-2\" component={AccountTransactionsReport2} />\n          <Route path = \"/accounting-account-bank-reconciliation-report\" component={BankReconciliationSummaryReport} />\n          <Route path = \"/fixed-assets-reconciliation-2\" component={BankReconciliationSummaryStatementExceptionsReport} />\n          <Route path = \"/fixed-assets-depreciation-schedule-2\" component={BankReconciliationSummaryStatementReport} />\n          <Route path = \"/accounting-account-bank-summary-report\" component={BankSummaryReport} />\n          <Route path = \"/accounting-account-cash-validation-report\" component={CashValidationCustomerReport} />\n          <Route path = \"/accounting-account-contact-transaction-report\" component={ContactTransactionsSummaryReport} />\n          <Route path = \"/accounting-account-detailed-account-transaction-report\" component={DetailedAccountTransactionReport}/>\n          <Route path = \"/accounting-account-duplicate-statement-report\" component={DuplicateStatementLinesReport}/>\n          <Route path = \"/accounting-account-foreign-currency-gains-report\" component={ForeignCurrencyGainsAndLosses} />\n          <Route path = \"/accounting-account-general-ledger-report\" component={GeneralLedger} />\n          <Route path = \"/accounting-account-income-expenses-report\" component={IncomeAndExpensesByContact} />\n          <Route path = \"/accounting-account-journal-report\" component={JournalReport} />\n          <Route path = \"/accounting-account-trial-balance-report\" component={TrialBalanceReport} />\n          <Route path = \"/accounting-account-trial-balance-report-2\" component={TrialBalanceReport2} />\n        \n\n\n         \n          \n          <Route path = \"/financial-balance-sheet-report\" component={BalanceSheetReport} />\n          <Route path = \"/financial-budget-manager-report\" component={BudgetManagerReport} />\n          <Route path = \"/financial-budget-summary-report\" component={BudgetSummaryReport} />\n          <Route path = \"/financial-budget-variance-report\" component={BudgetVarianceReport} />\n          <Route path = \"/financial-business-perfomance-report\" component={BusinessPerfomanceReport} />\n          <Route path = \"/financial-cash-summary-report\" component={CashSummaryReport} />\n          <Route path = \"/financial-executive-summary-report\" component={ExecutiveSummaryReport} />\n          <Route path = \"/financial-movements-in-equity-report\" component={MovementsInEquityReport} />\n          <Route path = \"/financial-movements-in-equity-report-2\" component={MovementsInEquityReport2}/>\n          <Route path = \"/financial-statement-cash-flows-report\" component={StatementOfCashFlowsReport}/>\n          <Route path = \"/financial-tracking-summary-report\" component={TrackingSummary} />\n         \n   \n          \n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}